{"version":3,"sources":["webpack:///src/app/matrix/tactic-cell/tactic-cell.component.ts","webpack:///src/app/matrix/tactic-cell/tactic-cell.component.html","webpack:///util (ignored)?3f24","webpack:///util (ignored)?ecf6","webpack:///util (ignored)","webpack:///util (ignored)?c15f","webpack:///src/app/sidebar/sidebar.component.ts","webpack:///src/app/sidebar/sidebar.component.html","webpack:///buffer (ignored)?d48c","webpack:///src/app/matrix/matrix-side/matrix-side.component.ts","webpack:///src/app/matrix/matrix-side/matrix-side.component.html","webpack:///crypto (ignored)","webpack:///src/app/datatable/data-table.component.ts","webpack:///src/app/datatable/data-table.component.html","webpack:///buffer (ignored)","webpack:///src/app/matrix/technique-cell/contextmenu/contextmenu.component.ts","webpack:///src/app/matrix/technique-cell/contextmenu/contextmenu.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/matrix/matrix-mini/matrix-mini.component.ts","webpack:///src/app/matrix/matrix-mini/matrix-mini.component.html","webpack:///src/app/exporter/exporter.component.ts","webpack:///src/app/exporter/exporter.component.html","webpack:///src/app/search-and-multiselect/search-and-multiselect.component.ts","webpack:///src/app/search-and-multiselect/search-and-multiselect.component.html","webpack:///src/app/data.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/version-upgrade/version-upgrade.component.ts","webpack:///src/app/version-upgrade/version-upgrade.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/tabs/tabs.component.ts","webpack:///src/app/tabs/tabs.component.html","webpack:///src/app/matrix/matrix-common.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/matrix/technique-cell/cell-popover.ts","webpack:///src/app/help/help.component.ts","webpack:///src/app/help/help.component.html","webpack:///src/app/matrix/matrix-flat/matrix-flat.component.ts","webpack:///src/app/matrix/matrix-flat/matrix-flat.component.html","webpack:///src/app/viewmodels.service.ts","webpack:///src/app/matrix/technique-cell/technique-cell.component.ts","webpack:///src/app/matrix/technique-cell/technique-cell.component.html","webpack:///src/app/matrix/technique-cell/tooltip/tooltip.component.ts","webpack:///src/app/matrix/technique-cell/tooltip/tooltip.component.html","webpack:///src/app/config.service.ts","webpack:///src/app/globals.ts","webpack:///src/app/taxii2lib.ts","webpack:///src/main.ts"],"names":["TacticCellComponent","selector","templateUrl","styleUrls","tactic","viewModel","SidebarComponent","dataService","MatrixSideComponent","configService","name","version","$event","target","value","DataTableComponent","tabs","sanitizer","viewModelsService","customContextMenuItems","showingLegend","currentDropdown","commentEditField","scoreEditField","json","serialize","blob","Blob","type","filename","replace","saveBlob","window","navigator","msSaveBlob","svgUrl","URL","createObjectURL","downloadLink","document","createElement","href","download","body","appendChild","click","removeChild","workbook","domain","getDomain","domainID","matrices","matrix","worksheet","addWorksheet","getVersion","columns","filterTactics","tactics","map","header","getDisplayName","key","tacticCol","getColumn","techniques","applyControls","techniqueCells","technique","subtechniqueList","subtechniqueCells","techniqueRow","indexOf","tvm","getTechniqueVM","showSubtechniques","subtechniques","sub","concat","excelIndex","subtechnique","splice","mergeCells","number","length","id","findIndex","col","subtechniqueCol","letter","values","toString","seen","eachCell","cell","row","undefined","find","s","substring","trim","includes","attackID","push","svm","styleCells","t","forEach","column","layout","showID","showName","width","getRow","alignment","horizontal","border","bottom","style","font","bold","showTacticRowBackground","fill","pattern","fgColor","tacticRowBackground","color","tinycolor","mostReadable","toHex","xlsx","writeBuffer","then","data","vertical","enabled","argb","_showAggregateScores","aggregateScoreColor","score","scoreColor","comment","note","top","left","isSubtechnique","right","event","url","addToSelection","eventX","eventY","isCurrentlyEditing","populateEditFields","showAnnotatedOnly","get_all_technique_tactic_ids","getTechniqueVM_id","some","sid","annotated","techniqueVMs","getEditingCommonValue","currentState","editSelectedTechniques","css","bypassSecurityTrustStyle","result","isNaN","Number","dropdown","anchor","parentNode","getBoundingClientRect","clientWidth","openSVGDialog","encapsulation","None","ContextmenuComponent","element","close","placement","getPosition","emit","clearSelectedTechniques","selectTechnique","closeContextmenu","unselectTechnique","selectAllTechniques","invertSelection","selectAnnotated","selectUnannotated","selectAllTechniquesInTactic","unselectAllTechniquesInTactic","open","customItem","getReplacedURL","viewTechnique","viewTactic","environment","production","MatrixMiniComponent","ExporterComponent","dialogRef","config","svgDivName","unitEnum","buildSVGDebounce","vm","uid","self","filterTechniques","hasTechniqueVM","hasScores","legendSectionCount","hasLegendItems","legendHeight","legendX","legendWidth","legendY","height","showHeader","headerHeight","setTimeout","buildSVG","description","legendItems","showAbout","hasName","showDomain","hasDomain","showAggregateScores","hasDescription","showDescription","showFilters","showGradient","showLegend","legendDocked","bypassDebounce","console","log","margin","Math","max","convertToPx","unit","getElementById","innerHTML","svg","d3","select","append","attr","stroke_width","getSpacing","distance","divisions","spacing","res","i","insertLineBreaks","words","node","padding","xpos","ypos","totalDistance","spacingDistance","center","cellWidth","el","text","firstChild","tspan","offsetY","findSpace","cellHeight","maxFontSize","breakDistance","min","breakTextHeight","fitTextHeight","longestWordLength","Infinity","w","word","fitTextWidth","size","optimalFontSize","split","bestSize","bestWordArrangement","find_breaks","num_spaces","num_breaks","breaks","Set","recurse","breakset_inherit","depth","breakset","JSON","parse","stringify","add","join","initial_breaks","Array","from","binaryString","wordSet","k","centerValign","fontSize","children","child","getAttribute","endsWith","currY","hasAttribute","newY","floor","HeaderSectionContent","HeaderSection","legend","contents","group","sectionWidth","sectionHeight","gradient","colors","percent","interpolateNumber","minValue","maxValue","colorScale","scaleLinear","range","nCells","valuesRange","call","legendColor","shapeWidth","shapePadding","cells","shape","orient","scale","labelOffset","labelFormat","format","scaleOrdinal","item","label","descriptiveBox","sectionData","boxWidth","boxHeight","boxPadding","boxGroup","outerbox","titleEl","title","each","bbox","getBBox","coverPadding","cover","x","y","raise","boxContentGroup","boxContentHeight","boxContentWidth","boxGroupY","scaleBand","align","content","subsectionContent","contentGroup","bandwidth","headerSections","about","filterConfig","filterData","filters","platforms","selection","showAggregate","aggregateConfig","aggregateFunction","countUnscored","showLegendContainer","showLegendInHeader","headerGroup","headerX","paddingInner","section","sectionGroup","tablebody","RenderableMatrix","subtechniqueIndent","tableBorderColor","tacticGroups","selectAll","enter","shortname","techniqueGroups","yPosition","subtechniqueGroups","techniqueRects","subtechniqueRects","sidebarWidth","sidebar","sidebarAngle","textColor","tacticLabels","legendGroup","svgEl","setAttribute","svgData","XMLSerializer","serializeToString","preface","svgBlob","quantity","factor","error","cellheight","reverse","line","lineHeight","dy","parseFloat","pop","getComputedTextLength","thisdy","d","els","numTSpan","location","str","txt","charAt","toUpperCase","substr","toLowerCase","obj","Object","keys","downloadSVG","renderConfig","filteredTactics","RenderableTactic","heights","filteredTechniques","sortTechniques","techniqueVM","filteredSubtechniques","RenderableTechnique","SearchAndMultiselectComponent","fields","previousQuery","_query","techniqueResults","stixTypes","getResults","items","query","sortTechniquesAndSubtechniques","results","sort","tA","tB","c1","parent","c2","localeCompare","a","b","seenIDs","filter","has","field","fieldToggled","filterAndSort","getTechniques","getStixData","allTechniques","groups","software","mitigations","thefield","isTechnique","getRelated","selectTechniqueAcrossTactics","highlightTechnique","clearHighlight","stixObject","unselectTechniqueAcrossTactics","isTechniqueArray","deselect","relatedTechniques","newQuery","debounceFunction","deselectAll","DataService","http","domain_backwards_compatibility","domains","versions","subtechniquesEnabled","enterpriseAttackURL","mobileAttackURL","subscription","getConfig","subscribe","next","setUpURLs","complete","unsubscribe","callback","dataLoadedCallbacks","stixBundles","bundle","techniqueSDOs","matrixSDOs","idToTechniqueSDO","Map","idToTacticSDO","objects","sdo","x_mitre_deprecated","revoked","x_mitre_domains","domain_identifier","Group","soft","Software","Mitigation","relationship_type","relationships","target_ref","ids","get","source_ref","set","startsWith","x_mitre_is_subtechnique","Technique","notes","Note","techniqueSDO","subtechniques_of","sub_id","matrixSDO","Matrix","platform","dataLoaded","v","getDomainID","domainObject","Domain","taxii_url","taxii_collection","urls","currVersion","enterpriseDomain","mobileDomain","refresh","configData$","conn","collectionInfo","collection","domainData$","forkJoin","getObjects","bundleData","dataPromise","Promise","resolve","reject","getDomainData","parseBundle","match","providedIn","BaseStix","stixSDO","external_references","external_id","tactic_refs","tacticID","Tactic","x_mitre_shortname","x_mitre_platforms","x_mitre_data_sources","datasources","kill_chain_phases","phase","phase_name","tactic_shortname","Error","get_technique_tactic_id","rels","software_uses","used","group_uses","mitigates","mitigated","object_refs","parts","AppComponent","nav_version","prototype","getFeature","returnValue","tabsComponent","promptNavAway","VersionUpgradeComponent","dontAsk","vmVersion","layerName","upgrade","upgradeVersion","providers","AppModule","declarations","imports","exports","bootstrap","entryComponents","safariDialogRef","scoreExpression","TabsComponent","dialog","ds","vms","activeTab","layerTabs","coloring","comments","enabledness","loadURL","layerLinkURLs","customizedConfig","copiedRecently","newBlankTab","loadTabs","newLayer","selectTab","getFeatureList","bannerContent","banner","safariWarning","disableClose","defaultLayers","fragment_value","getNamedFragmentValue","first","_i","urls_1","loadLayerFromURL","isCloseable","forceNew","dataTable","tab","Tab","dataContext","closeActiveTab","viewModels","sidebarOpened","sidebarContentType","allowNoTab","action","destroyViewModel","closeTab","featureName","openTab","panelClass","root","conflictNumber","isInteger","n","String","numberPortion","loadDomainData","getUniqueLayerName","newViewModel","loadVMData","index","realIndex","fromCharCode","char","charHere","scoreVariables","regex","matches","charToIndex","every","message","layerLayerOperation","updateGradient","err","alert","scope","noMatch","math","eval","input","getCurrentVersion","alwaysUpgradeVersion","dialogConfig","afterClosed","isSupported","files","readJSONFile","file","reader","FileReader","onload","e","string","deSerializeDomainID","versionUpgradeDialog","deSerialize","readAsText","layerPromise","status","layerLinkURL","encodeURIComponent","subfeatures","j","copyText","selectLayerLink","execCommand","test","RegExp","exec","decodeURIComponent","showScoreVariables","isDataTable","MatrixCommon","selectionChanged","shift","ctrl","meta","isTechniqueSelected","getSelectedTechniqueCount","isTacticSelected","webpackEmptyAsyncContext","req","code","module","CellPopover","theElement","nativeElement","boundingRect","halfWidth","innerWidth","halfHeight","innerHeight","position","HelpComponent","sectionID","scrollIntoView","scrollTo","MatrixFlatComponent","ViewModelsService","nonce","ViewModel","getNonce","score_min","score_max","techniqueIDs","techniqueID","mathResult","initializeScoresTo","technique_id","new_tvm","TechniqueVM","misses","scoreValue","hasTechniqueVM_id","setGradientPreset","inherit","inherit_vm","fieldname","inherit_TVM","technique_tactic_union_id","Gradient","Gcolor","options","presets","redgreen","greenred","bluered","redblue","whiteblue","whitered","colorList","gColor","hexstring","toHexString","rep","isColorStringArray","check","isValid","hex","preset","colorarray","gcolor","tinygradient","colorobj","gradientRGB","rgb","valueString","round","metadata","sorting","LayoutOptions","hideDisabled","backgroundPresets","legendColorPresets","selectTechniquesAcrossTactics","selectSubtechniquesWithParent","needsToConstructTechniqueVMs","legacyTechniques","techIDtoUIDMap","techUIDtoIDMap","sidebarContentTypes","highlightedTactic","highlightedTechniques","selectedTechniques","Filter","onDataLoad","initTechniqueVMs","initPlatformOptions","setTechniqueVM","technique_tactic_id","overwrite","selectTechniqueInTactic","unselectTechniqueInTactic","walkChildren","highlightTechniques","clear","previouslySelected","selected","unionID","aggregateScore","commonValue","m","Metadata","isSubtechniqueEnabled","technique1","technique2","techniqueVM1","techniqueVM2","score1","score2","sortSubTechniques","calculateAggregateScore","isFinite","validTechniquesCount","scores","scoreNum","NEGATIVE_INFINITY","aggScore","reduce","toFixed","getColor","modifiedTechniqueVMs","modified","search","valid","attack","legendItem","obj_technique","metadataObj","deserialize","viewMode","addColor","removeColor","updateLegendColorPresets","newObj","skipWords","wordSplit","wordIndex","charIndex","charCodeAt","_sidebarOpened","newVal","_sidebarContentType","idSplit","filterName","isStringArray","backwards_compatibility_mappings","divider","layoutOptions","_layout","aggregateFunctionOptions","_aggregateFunction","_showID","_showName","_countUnscored","newLayout","warn","oldLayout","newAggregateFunction","newval","TechniqueCellComponent","highlight","unhighlight","leftclick","showContextmenu","annotatedSubs","subVM","shiftKey","ctrlKey","metaKey","pageX","pageY","onRightClick","theclass","isHighlighted","hasNotes","getTechniqueBackground","annotatedSubtechniques","onLeftClick","onMouseEnter","onMouseLeave","TechniqueEvent","TooltipComponent","ConfigService","comment_color","features","featureGroups","contextMenuItems","featureObject","setFeature_object","getAllFragments","valueBool","isFeature","isFeatureGroup","setFeature","featureStructure","ContextMenuItem","subtechnique_url","featureGroup","subFeatures","count","getFeatureGroupCount","subFeatureName","override","hasOwnProperty","subfeature","featureGroupName","fragments","layer_version","TaxiiConnect","user","password","timeout","baseURL","withoutLastSlash","hash","btoa","Headers","postConfig","getStixConfig","promise","timeoutPromise","fetch","path","fullPath","asQueryString","fetchTimeout","conf","flag","asyncFetch","cache","Server","withLastSlash","disOptions","apiOptions","fetchThis","discovery","_getApiRoots","apiRootMap","all","api_roots","apiroot","isEmpty","constructor","Collections","api_root_path","collectionsFlag","collections","cols","theConfig","Collection","colOptions","objsOptions","objOptions","manOptions","func","can_read","can_write","ifCanRead","obj_id","ifCanWrite","getManifests","Status","status_id","bootstrapModule"],"mappings":"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sBQmK,a,EAAa,mI,EAAA,sI,EAAA,0H,EAAA,gI,EAAA,8H;AAAA,O;;;cAAbA,a;AAAa,6B;AAAA;AAAA;;;;;;;;;;oFAHX,CAAC,qEAAD,C;AAAmB,gB;AAAA,e;AAAA,0BCpBtB,mIDoBsB,ECpBiC,KDoBjC,ECpBiC,YDoBjC,GCpBiC,8BDoBjC,ECpBiC,kDDoBjC,ECpBiC,4BDoBjC,ECpBiC,8BDoBjC,ECpBiC,qBDoBjC,ECpBiC,WDoBjC,ECpBiC,aDoBjC,ECpBiC,aDoBjC,ECpBiC,qDDoBjC,ECpBiC,kBDoBjC,ECpBiC,4DDoBjC,ECpBiC,kEDoBjC,ECpBiC,iDDoBjC,ECpBiC,qHDoBjC,ECpBiC,wCDoBjC,ECpBiC,4PDoBjC,ECpBiC,WDoBjC,ECpBiC,oEDoBjC,ECpBiC,mDDoBjC,ECpBiC,WDoBjC,ECpBiC,6CDoBjC,ECpBiC,0CDoBjC,ECpBiC,YDoBjC,ECpBiC,8CDoBjC,ECpBiC,6EDoBjC,ECpBiC,6CDoBjC,ECpBiC,qCDoBjC,ECpBiC,gBDoBjC,ECpBiC,+CDoBjC,ECpBiC,4BDoBjC,ECpBiC,oBDoBjC,ECpBiC,yBDoBjC,ECpBiC,aDoBjC,ECpBiC,qBDoBjC,ECpBiC,8BDoBjC,ECpBiC,uBDoBjC,ECpBiC,oBDoBjC,ECpBiC,gBDoBjC,ECpBiC,iCDoBjC,ECpBiC,2BDoBjC,ECpBiC,mBDoBjC,ECpBiC,yEDoBjC,ECpBiC,YDoBjC,ECpBiC,mCDoBjC,ECpBiC,oFDoBjC,ECpBiC,cDoBjC,ECpBiC,0CDoBjC,ECpBiC,iBDoBjC,ECpBiC,qEDoBjC,ECpBiC,uBDoBjC,ECpBiC,+FDoBjC,ECpBiC,qGDoBjC,ECpBiC,uBDoBjC,ECpBiC,wEDoBjC,ECpBiC,mJDoBjC,ECpBiC,qCDoBjC,ECpBiC,oEDoBjC,ECpBiC,sEDoBjC,ECpBiC,sEDoBjC,ECpBiC,sEDoBjC,ECpBiC,oEDoBjC,ECpBiC,qEDoBjC,ECpBiC,oEDoBjC,ECpBiC,8BDoBjC,ECpBiC,iBDoBjC,ECpBiC,uCDoBjC,ECpBiC,iDDoBjC,ECpBiC,wBDoBjC,ECpBiC,uIDoBj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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { Technique, Tactic } from '../../data.service';\nimport { ViewModel } from '../../viewmodels.service';\n\n@Component({\n  selector: 'tactic-cell',\n  templateUrl: './tactic-cell.component.html',\n  styleUrls: ['./tactic-cell.component.scss']\n})\nexport class TacticCellComponent implements OnInit {\n    @Input() tactic: Tactic;\n    @Input() viewModel: ViewModel;\n\n    constructor() { }\n\n    ngOnInit() {\n    }\n}\n","<div class=\"tactic-cell noselect\" [class.bordered]=\"!(viewModel.layout.showID || viewModel.layout.showName)\" \n                         [class.mini]=\"viewModel.layout.layout == 'mini'\"\n                         [matTooltip]=\"tactic.attackID + ': ' + tactic.name\" \n                         [matTooltipDisabled]=\"viewModel.layout.showID || viewModel.layout.showName\" \n                         matTooltipPosition=\"above\">\n    <ng-container *ngIf=\"viewModel.layout.showID\">{{tactic.attackID}}</ng-container><div class=\"id-name-break\" *ngIf=\"viewModel.layout.showID && viewModel.layout.showName\"></div><ng-container *ngIf=\"viewModel.layout.showName\">{{tactic.name}}</ng-container>\n</div>\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import { Component, Input, OnInit } from '@angular/core';\nimport { DataService } from '../data.service';\nimport { ViewModel } from '../viewmodels.service';\n\n@Component({\n    selector: 'sidebar',\n    templateUrl: './sidebar.component.html',\n    styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n    @Input() viewModel: ViewModel;\n\n    constructor(public dataService: DataService) { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"sidebar\">\n    <div *ngIf=\"viewModel\">\n        <div *ngIf=\"viewModel.sidebarContentType === 'search'\">\n            <app-search-and-multiselect [viewModel]=\"viewModel\"></app-search-and-multiselect>\n        </div>\n    </div>\n</div>\n","/* (ignored) */","import { Component, OnInit } from '@angular/core';\nimport { MatrixCommon } from '../matrix-common';\nimport { ConfigService } from '../../config.service';\n\n@Component({\n  selector: 'matrix-side',\n  templateUrl: './matrix-side.component.html',\n  styleUrls: ['./matrix-side.component.scss']\n})\nexport class MatrixSideComponent extends MatrixCommon implements OnInit  {\n\n    constructor(configService: ConfigService) { \n        super(configService);\n    }\n\n    ngOnInit() {}\n}\n","<table class=\"matrix side\">\n    <thead [ngStyle]=\"tacticRowStyle\">\n        <tr class=\"tactic\">\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic name\"><a (click)=\"onTacticClick(tactic)\">\n                <tactic-cell [viewModel]=\"viewModel\" [tactic]=\"tactic\"></tactic-cell>\n            </a></td>\n        </tr>\n        <tr>\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic count\">\n                {{filterTechniques(tactic.techniques, tactic).length }}<ng-container *ngIf=\"viewModel.layout.showName\">&nbsp;techniques</ng-container>\n            </td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic\">\n                <table class=\"techniques-table\">\n                    <tr *ngFor=\"let technique of applyControls(tactic.techniques, tactic)\" class=\"technique-row\">\n                        <td>\n                            <ng-container *ngIf=\"technique.subtechniques.length == 0; else supertechnique\">\n                                <technique-cell\n                                                [tactic]=\"tactic\"\n                                                [technique]=\"technique\" \n                                                [viewModel]=\"viewModel\"\n                                                [matrix]=\"matrix\"\n                                                (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\n                                                (rightclick)=\"onTechniqueRightClick($event, technique)\"\n                                                (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\n                                                (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                                </technique-cell>\n                            </ng-container>\n                            <ng-template #supertechnique>\n                                <table class=\"supertechnique\">\n                                    <tr>\n                                        <td class=\"technique\">\n                                            <technique-cell\n                                                            [tactic]=\"tactic\"\n                                                            [technique]=\"technique\" \n                                                            [viewModel]=\"viewModel\"\n                                                            [matrix]=\"matrix\"\n                                                            (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\n                                                            (rightclick)=\"onTechniqueRightClick($event, technique)\"\n                                                            (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\n                                                            (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                                            </technique-cell>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </ng-template>\n                        </td>\n                        <!-- TODO onclick expand -->\n                        <td *ngIf=\"technique.subtechniques.length > 0\" [ngClass]=\"{disabled: applyControls(technique.subtechniques, tactic).length == 0, expanded: viewModel.getTechniqueVM(technique, tactic).showSubtechniques && applyControls(technique.subtechniques, tactic).length > 0}\"\n                                class=\"sidebar sidebar--{{tactic.id}}--{{technique.id}}\" (click)=\"onToggleSubtechniquesVisible(technique, tactic)\">                            \n                            <div class=\"angle top\">\n                                <svg width=\"12px\" height=\"12px\">\n                                    <path d=\"M0 12H12V0Z\"/>\n                                </svg>\n                            </div>\n                            <div class=\"handle\"> = </div>\n                            <div class=\"angle bottom\">\n                                <svg width=\"12px\" height=\"12px\">\n                                    <path d=\"M0 0H12V12Z\"/>\n                                </svg>\n                            </div>\n                        </td>\n                        <td class=\"subtechniques-td\">\n                            <div class=\"subtechniques\"\n                                    [class.hidden]=\"!viewModel.getTechniqueVM(technique, tactic).showSubtechniques\">\n                                <div *ngFor=\"let subtechnique of applyControls(technique.subtechniques, tactic)\" class=\"subtechnique\">\n                                    <technique-cell\n                                                    [tactic]=\"tactic\"\n                                                    [technique]=\"subtechnique\" \n                                                    [viewModel]=\"viewModel\"\n                                                    [matrix]=\"matrix\"\n                                                    (leftclick)=\"onTechniqueLeftClick($event, subtechnique, tactic)\"\n                                                    (rightclick)=\"onTechniqueRightClick($event, subtechnique)\"\n                                                    (highlight)=\"onTechniqueHighlight($event, subtechnique, tactic)\"\n                                                    (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                                    </technique-cell>\n                                </div>\n                            </div>\n                        </td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </tbody>\n</table>\n","/* (ignored) */","import { Component, Input, ViewChild, HostListener, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport {DataService, Technique, Matrix, Domain} from '../data.service';\nimport {ConfigService} from '../config.service';\nimport { TabsComponent } from '../tabs/tabs.component';\nimport { ViewModel, TechniqueVM, Filter, Gradient, Gcolor, ViewModelsService } from \"../viewmodels.service\";\nimport {FormControl} from '@angular/forms';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatMenuTrigger} from '@angular/material/menu';\nimport * as Excel from 'exceljs/dist/es5/exceljs.browser';\nimport * as is from 'is_js';\n\ndeclare var tinygradient: any; //use tinygradient\ndeclare var tinycolor: any; //use tinycolor2\n\nimport * as FileSaver from 'file-saver';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { SearchAndMultiselectComponent } from '../search-and-multiselect/search-and-multiselect.component';\nimport { TmplAstVariable } from '@angular/compiler';\n\n@Component({\n    selector: 'DataTable',\n    templateUrl: './data-table.component.html',\n    styleUrls: ['./data-table.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class DataTableComponent implements AfterViewInit {\n\n    //items for custom context menu\n    customContextMenuItems = [];\n    //is the legend panel currently expanded\n    showingLegend = false;\n\n    // The ViewModel being used by this data-table\n    @Input() viewModel: ViewModel;\n\n    currentDropdown: string = \"\"; //current dropdown menu\n\n    //////////////////////////////////////////////////////////\n    // Stringifies the current view model into a json string//\n    // stores the string as a blob                          //\n    // and then saves the blob as a json file               //\n    //////////////////////////////////////////////////////////\n\n    saveLayerLocally(){\n        var json = this.viewModel.serialize(); //JSON.stringify(this.viewModel.serialize(), null, \"\\t\");\n        var blob = new Blob([json], {type: \"text/json\"});\n        let filename = this.viewModel.name.replace(/ /g, \"_\") + \".json\";\n        // FileSaver.saveAs(blob, this.viewModel.name.replace(/ /g, \"_\") + \".json\");\n        this.saveBlob(blob, filename);\n\n    }\n\n    saveBlob(blob, filename){\n        if (is.ie()) { //internet explorer\n            window.navigator.msSaveBlob(blob, filename)\n        } else {\n            var svgUrl = URL.createObjectURL(blob);\n            var downloadLink = document.createElement(\"a\");\n            downloadLink.href = svgUrl;\n            downloadLink.download = filename\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n        }\n    }\n\n    /////////////////////////////\n    //     EXPORT TO EXCEL     //\n    /////////////////////////////\n\n    saveLayerLocallyExcel() {\n        var workbook = new Excel.Workbook();\n        let domain = this.dataService.getDomain(this.viewModel.domainID);\n        for (let matrix of domain.matrices) {\n            var worksheet = workbook.addWorksheet(matrix.name + \" (v\" + domain.getVersion() + \")\");\n\n            // create tactic columns\n            let columns = this.viewModel.filterTactics(matrix.tactics, matrix).map(tactic => { return {header: this.getDisplayName(tactic), key: tactic.name} });\n            worksheet.columns = columns;\n\n            // create cells\n            for (let tactic of this.viewModel.filterTactics(matrix.tactics, matrix)) {\n                let tacticCol = worksheet.getColumn(tactic.name);\n                let techniques = this.viewModel.applyControls(tactic.techniques, tactic, matrix);\n                let techniqueCells = techniques.map(technique => { return technique.name });\n                let subtechniqueList = [];\n\n                // create subtechnique cells, if shown\n                let subtechniqueCells = [];\n                for (let technique of techniques) {\n                    let techniqueRow = techniqueCells.indexOf(technique.name);\n                    let tvm = this.viewModel.getTechniqueVM(technique, tactic);\n                    if(tvm.showSubtechniques) {\n                        // retrieve subtechniques\n                        let subtechniques = this.viewModel.applyControls(technique.subtechniques, tactic, matrix)\n                            .map( sub => { return sub.name });\n                        subtechniqueList = subtechniqueList.concat(technique.subtechniques);\n\n                        // format technique cells for subtechniques\n                        let excelIndex = 0;\n                        for (let subtechnique of subtechniques) {\n                            if(excelIndex !== 0) {\n                                techniqueCells.splice(techniqueRow + excelIndex, 0, technique.name);\n                            }\n                            subtechniqueCells[techniqueRow + excelIndex++] = subtechnique;\n                        }\n\n                        // merge technique cells\n                        if (excelIndex > 0) {\n                            worksheet.mergeCells(techniqueRow + 2, tacticCol.number, techniqueRow + excelIndex + 1, tacticCol.number);\n                        }\n                    }\n                }\n\n                if(subtechniqueCells.length > 0) {\n                    // add subtechniques column\n                    let id = columns.findIndex(col => col.key == tactic.name);\n                    columns.splice(id + 1, 0, {header: this.getDisplayName(tactic), key: tactic.name + \"Subtechniques\"});\n                    worksheet.columns = columns;\n\n                    // merge subtechniques header\n                    let subtechniqueCol = worksheet.getColumn(tactic.name + \"Subtechniques\");\n                    worksheet.mergeCells(tacticCol.letter + '1:' + subtechniqueCol.letter + '1');\n                    subtechniqueCol.values = [tactic.name.toString() + \"Subtechniques\"].concat(subtechniqueCells);\n\n                    // style subtechnique cells\n                    const seen = [];\n                    subtechniqueCol.eachCell(cell => {\n                        if(cell.row > 1) {\n                            if(cell.value && cell.value !== undefined) {\n                                let subtechnique = subtechniqueList.find(s => {\n                                    return s.name == cell.value.substring(cell.value.indexOf(':') + 1).trim() && !seen.includes(s.attackID) });\n                                seen.push(subtechnique.attackID);\n                                let svm = this.viewModel.getTechniqueVM(subtechnique, tactic);\n                                this.styleCells(cell, subtechnique, svm);\n                            }\n                        }\n                    });\n                }\n                tacticCol.values = [this.getDisplayName(tactic)].concat(techniqueCells);\n\n                // style technique cells\n                tacticCol.eachCell(cell => {\n                    if (cell.row > 1) {\n                        if(cell.value && cell.value !== undefined) {\n                            let technique = techniques.find( t => {\n                                return t.name === cell.value.substring(cell.value.indexOf(':') + 1).trim() || t.attackID === cell.value });\n                            let tvm = this.viewModel.getTechniqueVM(technique, tactic);\n                            this.styleCells(cell, technique, tvm);\n                        }\n                    }\n                });\n            }\n\n            // style tactic headers\n            worksheet.columns.forEach(column => {\n                if (this.viewModel.layout.showID && !this.viewModel.layout.showName) {\n                    column.width = column.header.length < 15 ? 15 : column.header.length;\n                } else if (!this.viewModel.layout.showID && !this.viewModel.layout.showName) {\n                    column.width = 10;\n                } else {\n                    column.width = column.header.length < 30 ? 30 : column.header.length;\n                }\n            });\n\n            worksheet.getRow(1).alignment = {horizontal: 'center'};\n            worksheet.getRow(1).border = {bottom: {style: 'thin'}};\n            worksheet.getRow(1).font = {bold: true};\n            if (this.viewModel.showTacticRowBackground) {\n                worksheet.getRow(1).fill = {type: 'pattern', pattern: 'solid', fgColor: {'argb': 'FF' + this.viewModel.tacticRowBackground.substring(1)}}\n                worksheet.getRow(1).font = {bold: true, color: {\"argb\": 'FF' + tinycolor.mostReadable(this.viewModel.tacticRowBackground, [\"white\", \"black\"]).toHex()}};\n            }\n        }\n\n        // save file\n        workbook.xlsx.writeBuffer().then(data => {\n            const blob = new Blob( [data], {type: \"application/octet-stream\"} );\n            const filename = this.viewModel.name.replace(/ /g, \"_\") + \".xlsx\";\n            this.saveBlob(blob, filename);\n        });\n    }\n\n    /**\n     * Get the display name for technique/tactic as shown in layout\n     */\n    getDisplayName(technique) {\n        if (this.viewModel.layout.showID && this.viewModel.layout.showName) {\n            return technique.attackID + ': ' + technique.name;\n        } else if (this.viewModel.layout.showID) {\n            return technique.attackID;\n        } else if (this.viewModel.layout.showName) {\n            return technique.name;\n        } else {\n            return '';\n        }\n    }\n\n    /**\n     * Helper function for exporting to excel to stylize cells\n     */\n    styleCells(cell, technique, tvm) {\n        cell.value = this.getDisplayName(technique);\n\n        // cell format\n        cell.alignment = {vertical: 'top', horizontal: 'left'};\n        if(tvm.enabled) {\n            if (tvm.color) { //manually assigned\n                cell.fill = {type: 'pattern', pattern: 'solid', fgColor: {argb: 'FF' + tvm.color.substring(1)}};\n                cell.font = {color: {'argb': 'FF' + tinycolor.mostReadable(tvm.color, [\"white\", \"black\"]).toHex()}};\n            }\n            else if (this.viewModel.layout._showAggregateScores && tvm.aggregateScoreColor) {\n                cell.fill = {type: 'pattern', pattern: 'solid', fgColor: {argb: 'FF' + tvm.aggregateScoreColor.toHex()}};\n                cell.font = {color: {'argb': 'FF' + tinycolor.mostReadable(tvm.aggregateScoreColor, [\"white\", \"black\"]).toHex()}};\n            }\n            else if (tvm.score) { //score assigned\n                cell.fill = {type: 'pattern', pattern: 'solid', fgColor: {argb: 'FF' + tvm.scoreColor.toHex()}};\n                cell.font = {color: {'argb': 'FF' + tinycolor.mostReadable(tvm.scoreColor, [\"white\", \"black\"]).toHex()}};\n            }\n            if (tvm.comment) { //comment present on technique\n                cell.note = tvm.comment;\n            }\n        } else { //disabled\n            cell.font = {color: {'argb': 'FFBCBCBC'}}\n        }\n\n        // subtechniques border\n        if (tvm.showSubtechniques) {\n            cell.border = {top: {style: 'thin'}, bottom:{style: 'thin'}, left: {style: 'thin'}}\n        } else if (technique.isSubtechnique) {\n            cell.border = {top: {style: 'thin'}, bottom:{style: 'thin'}, right: {style: 'thin'}}\n        }\n    }\n\n    constructor(public dataService: DataService,\n                private tabs: TabsComponent,\n                private sanitizer: DomSanitizer,\n                private viewModelsService: ViewModelsService,\n                public configService: ConfigService) { }\n\n    /**\n     * Angular lifecycle hook\n     */\n    ngAfterViewInit(): void {\n        // setTimeout(() => this.exportRender(), 500);\n    }\n\n    // open custom url in a new tab\n    openCustomURL(event, technique, url){\n        // var formattedTechniqueName = this.contextMenuSelectedTechnique.name.replace(/ /g, \"_\");\n\n        // var formattedURL = url.replace(/~Technique_ID~/g, this.contextMenuSelectedTechnique.technique_id);\n        // formattedURL = formattedURL.replace(/~Technique_Name~/g, formattedTechniqueName);\n        // formattedURL = formattedURL.replace(/~Tactic_Name~/g, this.contextMenuSelectedTactic);\n\n        // var win = window.open(formattedURL);\n        // if (win) {\n        //     win.focus();\n        // } else {\n        //     alert('Please allow popups for this website');\n        // }\n    }\n\n\n    // edit field bindings\n    commentEditField: string = \"\";\n    scoreEditField: string = \"\";\n    /**\n     * triggered on left click of technique\n     * @param  technique      technique which was left clicked\n     * @param  addToSelection add to the technique selection (shift key) or replace selection?\n     */\n    onTechniqueSelect(technique, addToSelection, eventX, eventY): void {\n\n        if (!this.viewModel.isCurrentlyEditing()) {\n            if ([\"comment\", \"score\", \"colorpicker\"].includes(this.currentDropdown)) this.currentDropdown = \"\"; //remove technique control dropdowns, because everything was deselected\n            return;\n        }\n        //else populate editing controls\n        this.populateEditFields();\n    }\n\n    /**\n     * Show all sub-techniques in layout view\n     */\n    expandSubtechniques(showAnnotatedOnly?: boolean): void {\n        if (this.viewModel.layout.layout == \"mini\") return; //control disabled in mini layout\n        for (let technique of this.dataService.getDomain(this.viewModel.domainID).techniques) {\n            if (technique.subtechniques.length > 0) {\n                for (let id of technique.get_all_technique_tactic_ids()) {\n                    let tvm = this.viewModel.getTechniqueVM_id(id);\n                    if (!showAnnotatedOnly) {\n                        tvm.showSubtechniques = true;\n                    } else {\n                        for (let subtechnique of technique.subtechniques) {\n                            tvm.showSubtechniques = tvm.showSubtechniques || subtechnique.get_all_technique_tactic_ids().some((sid) => {\n                                let svm = this.viewModel.getTechniqueVM_id(sid);\n                                return svm.annotated();\n                            })\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * Hide all sub-techniques in layout view\n     */\n    collapseSubtechniques(): void {\n        if (this.viewModel.layout.layout == \"mini\") return; //control disabled in mini layout\n        this.viewModel.techniqueVMs.forEach(function(tvm, key) {\n            tvm.showSubtechniques = false; });\n    }\n\n    /**\n     * populate edit fields. Gets common values if common values exist for all editing values\n     */\n    populateEditFields(): void {\n        this.commentEditField = this.viewModel.getEditingCommonValue(\"comment\");\n        this.scoreEditField = this.viewModel.getEditingCommonValue(\"score\");\n    }\n\n    /**\n     * Set the state (enabled/disabled) of the selected features\n     */\n    setSelectedState(): void {\n        let currentState = this.viewModel.getEditingCommonValue('enabled')\n        if (currentState === '') this.viewModel.editSelectedTechniques('enabled', false)\n        else                     this.viewModel.editSelectedTechniques('enabled', !currentState)\n    }\n\n    //sanitize the given css so that it can be displayed without error\n    sanitize(css) {\n        return this.sanitizer.bypassSecurityTrustStyle(css);\n    }\n\n    /**\n     * Is score input valid number\n     * @param  event keypress event just in case we need it\n     * @return       true if valid number\n     */\n    validateScoreInput(event) {\n        let result: boolean = isNaN(Number(this.scoreEditField))\n        return result\n    }\n\n    /**\n     * Return whether the given dropdown element would overflow the side of the page if aligned to the right of its anchor\n     * @param  dropdown the DOM node of the panel\n     * @return          true if it would overflow\n     */\n    checkalign(dropdown): boolean {\n        // console.log(anchor)\n        let anchor = dropdown.parentNode;\n        return anchor.getBoundingClientRect().left + dropdown.getBoundingClientRect().width > document.body.clientWidth;\n    }\n\n    /**\n     * open an export layer render tab for the current layer\n     */\n    exportRender(): void {\n        this.tabs.openSVGDialog(this.viewModel);\n    }\n}\n","<!--\n  oooooooo8   ooooooo  oooo   oooo ooooooooooo oooooooooo    ooooooo  ooooo        oooooooo8\no888     88 o888   888o 8888o  88  88  888  88  888    888 o888   888o 888        888\n888         888     888 88 888o88      888      888oooo88  888     888 888         888oooooo\n888o     oo 888o   o888 88   8888      888      888  88o   888o   o888 888      o         888\n 888oooo88    88ooo88  o88o    88     o888o    o888o  88o8   88ooo88  o888ooooo88 o88oooo888\n                                                                                              -->\n\n<div class=\"controlsContainer\">\n    <ul class=\"control-sections\">\n        <li *ngIf=\"configService.getFeatureGroup('selection_controls', 'any') && configService.getFeature('selecting_techniques')\">\n            <div *ngIf=\"configService.getFeatureGroupCount('selection_controls') >= 3\" class=\"section-label\">\n                selection controls\n            </div>\n\n\n            <!-- lock selection locks -->\n            <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"control-row-item\">\n                <div class=\"control-row-button dropdown noselect\"\n                    (click)=\"currentDropdown = currentDropdown !== 'selection_behavior' ? 'selection_behavior' : null;\"\n                    matTooltipPosition=\"below\"\n                    matTooltip=\"selection behavior\">\n                    <img src=\"assets/icons/ic_lock_black_24px.svg\"/>\n                </div>\n                <div class=\"dropdown-container select_behavior\" *ngIf=\"currentDropdown === 'selection_behavior'\" #dropdown [class.left]=\"checkalign(dropdown)\">\n                    <!-- selectTechniquesAcrossTactics -->\n                    <div>\n                        <input id=\"select_behavior_tactic\" class=\"checkbox-custom\" type=\"checkbox\" [(ngModel)]=\"viewModel.selectTechniquesAcrossTactics\">\n                        <label for=\"select_behavior_tactic\" class=\"checkbox-custom-label noselect\">select techniques across tactics</label>\n                    </div>\n                    <!-- selectSubtechniquesWithParent -->\n                    <div *ngIf=\"configService.getFeature('subtechniques')\">\n                        <input id=\"select_behavior_subtechnique\" class=\"checkbox-custom\" type=\"checkbox\"  [(ngModel)]=\"viewModel.selectSubtechniquesWithParent\">\n                        <label for=\"select_behavior_subtechnique\" class=\"checkbox-custom-label noselect\">select sub-techniques with parent</label>\n                    </div>\n                </div>\n            </div>\n\n\n            <!-- Search -->\n            <div *ngIf=\"configService.getFeature('search')\" class=\"control-row-item\">\n\n                <div class=\"control-row-button noselect\"\n                    (click)=\"(viewModel.sidebarOpened = (viewModel.sidebarContentType !== 'search') ? true : !viewModel.sidebarOpened) && (viewModel.sidebarContentType = 'search')\"\n                    matTooltipPosition=\"below\"\n                    matTooltip=\"search & multiselect\">\n                    <img src=\"assets/icons/ic_search_black_24px.svg\"/>\n                </div>\n            </div>\n\n            <!-- deselect all -->\n            <div *ngIf=\"configService.getFeature('deselect_all')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                     (click)=\"viewModel.clearSelectedTechniques(); currentDropdown = null;\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"deselect {{this.viewModel.getSelectedTechniqueCount()}} techniques\">\n                    <img src=\"assets/icons/ic_clear_black_24px.svg\" alt=\"deselect all\"/>\n                    <span class=\"deselectNumber\">{{this.viewModel.getSelectedTechniqueCount()}}</span>\n                </div>\n            </div>\n\n\n        </li>\n        <li *ngIf=\"configService.getFeatureGroup('layer_controls', 'any')\">\n            <div *ngIf=\"configService.getFeatureGroupCount('layer_controls') >= 2\" class=\"section-label\">\n                layer controls\n            </div>\n\n            <!-- layer name, description and metadata -->\n            <div *ngIf=\"configService.getFeature('layer_info')\" class=\"control-row-item\">\n\n                <div class=\"control-row-button dropdown noselect\"\n                     (click)=\"currentDropdown = currentDropdown !== 'description' ? 'description' : null\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"layer information\">\n                     <img src=\"assets/icons/ic_description_black_24px.svg\" alt=\"layer information\" />\n                 </div>\n\n                 <!-- description input (invisible, absolute) -->\n                 <div class=\"dropdown-container inputfield layer_info\"  #dropdown [class.left]=\"checkalign(dropdown)\"\n                      *ngIf=\"currentDropdown === 'description'\">\n\n                    <!-- layer name field -->\n                    <div class=\"name_desc\">\n                        <mat-form-field>\n                                <input matInput\n                                        type=\"text\"\n                                        placeholder=\"name\"\n                                        [(ngModel)]=\"viewModel.name\" />\n                            </mat-form-field>\n\n                            <!-- layer description field -->\n                            <mat-form-field>\n                                <textarea matInput\n                                            matTextareaAutosize\n                                            placeholder=\"description\"\n                                            [(ngModel)]=\"viewModel.description\">\n                                </textarea>\n                            </mat-form-field>\n\n                            <!-- layer domain (uneditable) -->\n                            <mat-form-field>\n                                <input matInput readonly disabled\n                                    type=\"text\"\n                                    placeholder=\"domain\"\n                                    [(ngModel)]=\"dataService.getDomain(viewModel.domainID).name\" />\n                            </mat-form-field>\n\n                            <!-- layer version (uneditable) -->\n                            <mat-form-field>\n                                <input matInput readonly disabled\n                                    type=\"text\"\n                                    placeholder=\"version\"\n                                    [(ngModel)]=\"dataService.getDomain(viewModel.domainID).version\" />\n                            </mat-form-field>\n\n                    </div>\n                    <div class=\"metadata_input\">\n                        <b class=\"metadata-label\">Metadata</b>\n                        <table>\n                            <tr class=\"formfield-group\" *ngFor=\"let metadata of viewModel.metadata; let $i = index\">\n                                <td></td>\n                                <td>\n                                    <mat-form-field>\n                                            <input matInput\n                                                    type=\"text\"\n                                                    placeholder=\"name\"\n                                                    [(ngModel)]=\"metadata.name\" />\n                                        </mat-form-field>\n                                        <mat-form-field>\n                                            <input matInput\n                                                type=\"text\"\n                                                placeholder=\"value\"\n                                                [(ngModel)]=\"metadata.value\" />\n                                        </mat-form-field>\n                                        <button class=\"button\" (click)=\"viewModel.removeMetadata($i)\">remove this metadata</button>\n                                </td>\n                            </tr>\n                            <tr>\n                                <td colspan=2 class=\"addmore\">\n                                        <button class=\"button\" (click)=\"viewModel.addMetadata()\">add more metadata</button>\n                                </td>\n                            </tr>\n                        </table>\n\n                    </div>\n                 </div>\n             </div>\n\n\n\n            <!-- save locally as JSON -->\n            <div *ngIf=\"configService.getFeature('download_layer')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                    (click)=\"saveLayerLocally()\"\n                    matTooltipPosition=\"below\"\n                    matTooltip=\"download layer as json\">\n                    <img src=\"assets/icons/ic_file_download_black_24px.svg\" alt=\"save layer\"/>\n                </div>\n            </div>\n\n            <!-- export to excel -->\n            <div *ngIf=\"configService.getFeature('export_excel')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                    (click)=\"saveLayerLocallyExcel()\"\n                    matTooltipPosition=\"below\"\n                    matTooltip=\"export to excel\">\n                    <img src=\"assets/icons/baseline-grid_on-24px.svg\" alt=\"save layer\"/>\n                </div>\n            </div>\n\n\n            <!-- render layer to SVG -->\n            <div *ngIf=\"configService.getFeature('export_render')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                    (click)=\"exportRender()\"\n                    matTooltipPosition=\"below\"\n                    matTooltip=\"render layer to SVG\">\n                    <img src=\"assets/icons/ic_camera_alt_black_24px.svg\" alt=\"export render\"/>\n                </div>\n            </div>\n\n            <!-- Filters -->\n            <div *ngIf=\"configService.getFeature('filters')\" class=\"control-row-item\">\n\n                <div class=\"control-row-button dropdown noselect\"\n                    (click)=\"currentDropdown = currentDropdown !== 'filters' ? 'filters' : null;\"\n                    matTooltipPosition=\"below\"\n                    matTooltip=\"filters\">\n                    <img src=\"assets/icons/ic_filter_list_black_24px.svg\"/>\n                </div>\n                <div class=\"dropdown-container filters\" *ngIf=\"currentDropdown === 'filters'\" #dropdown [class.left]=\"checkalign(dropdown)\">\n                    <div class=\"filter\" *ngFor=\"let filter of ['platforms']\">\n                        <b class=\"filter-label\">{{filter}}</b>\n                        <div *ngIf=\"viewModel.filters[filter].options.length !== 0\">\n                            <div class=\"filter-option\" *ngFor=\"let filterOption of viewModel.filters[filter].options\" >\n                                <!-- <label class=\"noselect\"><input type=\"checkbox\" (click)=\"viewModel.filters.toggleInFilter(filter, filterOption); filterTechniques()\" [checked]=\"viewModel.filters.inFilter(filter, filterOption)\">{{filterOption}}</label> -->\n                                <input [id]=\"filterOption\" class=\"checkbox-custom\" type=\"checkbox\" (click)=\"viewModel.filters.toggleInFilter(filter, filterOption);\" [checked]=\"viewModel.filters.inFilter(filter, filterOption)\">\n                                <label [for]=\"filterOption\" class=\"checkbox-custom-label noselect\">{{filterOption}}</label>\n                            </div>\n                        </div>\n                        <div *ngIf=\"viewModel.filters[filter].options.length == 0\">\n                            Data does not include {{filter}}\n                        </div>\n                        <!-- <div class=\"filter-option\" *ngFor=\"let filterOption of viewModel.filters[filter].options\" (click)=\"viewModel.filters.toggleInFilter(filter, filterOption); filterTechniques()\">\n                            {{filterOption}}  {{viewModel.filters.inFilter(filter, filterOption)}}\n                        </div> -->\n                    </div>\n                    <!-- <mat-select placeholder=\"platforms\" [(ngModel)]=\"platformControl\"\n                        multiple disableRipple autofocus (change)=\"filterTechniques(); viewModel.filters.platforms.selection = platformsControl\">\n                        <mat-option *ngFor=\"let platformOption of viewModel.filters.platforms.options\" [value]=\"platformOption\">{{platformOption}}</mat-option>\n                    </mat-select> -->\n                    <!-- <filter-menu [dataTable]=\"this\"></filter-menu> -->\n                </div>\n            </div>\n\n            <!-- sorting -->\n            <div *ngIf=\"configService.getFeature('sorting')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                    (click)=\"viewModel.sorting = (viewModel.sorting + 1) % 4;\"\n                    matTooltipPosition=\"below\"\n                    [matTooltip]=\"['sorting alphabetically ascending', 'sorting alphabetically descending', 'sorting by score ascending', 'sorting by score descending'][viewModel.sorting]\">\n                    <img [src]=\"['assets/icons/ic_sort_alphabetically_ascending_black_24px.svg', 'assets/icons/ic_sort_alphabetically_descending_black_24px.svg', 'assets/icons/ic_sort_numerically_ascending_black_24px.svg', 'assets/icons/ic_sort_numerically_descending_black_24px.svg'][viewModel.sorting]\" alt=\"sorting\"/>\n                </div>\n            </div>\n\n            <!-- color setup -->\n            <div *ngIf=\"configService.getFeature('color_setup')\" class=\"control-row-item\">\n                <div class=\"control-row-button dropdown noselect\"\n                    (click)=\"currentDropdown = currentDropdown !== 'colorSetup' ? 'colorSetup' : null; viewModel.updateGradient()\"\n                    matTooltipPosition=\"below\"\n                    matTooltip=\"color setup\">\n                    <img src=\"assets/icons/ic_palette_black_24px.svg\"/>\n                </div>\n                <div class=\"dropdown-container colorSetup\" *ngIf=\"currentDropdown === 'colorSetup'\" #dropdown [class.left]=\"checkalign(dropdown)\">\n\n                    <div class=\"tacticRowColor\">\n                        <div class=\"gradient-section-label\">\n                            Tactic Row Background\n                        </div>\n                        <div class=\"gradient-section-content\">\n                            <input id=\"showTacticRowBackground\" type=\"checkbox\" class=\"checkbox-custom\" [(ngModel)]=viewModel.showTacticRowBackground>\n                            <label for=\"showTacticRowBackground\" class=\"checkbox-custom-label noselect\">show</label>\n                            <input class=\"colorpicker\" [(colorPicker)]=\"viewModel.tacticRowBackground\" [(ngModel)]=\"viewModel.tacticRowBackground\" [style.background]=\"viewModel.tacticRowBackground\" cpPosition=\"bottom\" [cpPresetColors]=\"['#ddd', '#aaaaaa', '#205B8F', '#B9482D']\">\n                        </div>\n                    </div>\n                    <div class=\"gradient\">\n                        <div class=\"gradient-section-label\">\n                            Scoring Gradient\n                        </div>\n                        <div class=\"gradient-controls gradient-section-content\">\n                            <table>\n                                <tr class=\"minmax top\">\n                                    <td>Low value:</td>\n                                    <td class=\"col2\"><input type=\"number\" (input)=\"viewModel.updateGradient()\" [(ngModel)]=\"viewModel.gradient.minValue\" [max]=viewModel.gradient.maxValue></td>\n                                </tr>\n                                <tr>\n                                    <td class=\"buttons\">\n                                        <div *ngFor=\"let gradientStep of viewModel.gradient.colors; let $i = index\">\n                                            <div class=\"left\">\n                                                <button (click)=\"viewModel.removeGradientColor($i)\" [disabled]=\"viewModel.gradient.colors.length == 2\">remove</button>\n                                            </div>\n                                            <div class=\"right\">\n                                                <input class=\"colorpicker\" (colorPickerChange)=\"viewModel.updateGradient()\" (cpPresetColorsChange)=\"viewModel.updateGradient()\" (cpSliderChange)=\"viewModel.updateGradient()\" (cpInputChange)=\"viewModel.updateGradient()\" [(colorPicker)]=\"gradientStep.color\" [(ngModel)]=\"gradientStep.color\" [style.background]=\"gradientStep.color\" cpPosition=\"bottom\" [cpPresetColors]=\"viewModel.gradient.options\">\n                                                <!-- <select [(ngModel)]=\"gradientStep.color\" (ngModelChange)=\"viewModel.updateGradient()\">\n                                                    <option *ngFor=\"let color of viewModel.gradient.options\" [ngValue]=\"color\">{{color}}</option>\n                                                    option shows up if a nonstandard option is selected, from uploading a custom layer\n                                                    <option *ngIf=\"!(viewModel.gradient.labelToColor.hasOwnProperty(gradientStep.color))\" [ngValue]=gradientStep.color>{{gradientStep.color}}</option>\n                                                </select> -->\n                                            </div>\n                                        </div>\n                                    </td>\n                                    <td class=\"col2\" [style.background-image]=\"sanitize(viewModel.gradient.gradient.css('linear', 'to bottom'))\"> </td>\n                                </tr>\n                                <tr>\n                                    <td><button class=\"addcolor\" (click)=\"viewModel.addGradientColor();\">add another color</button></td>\n                                </tr>\n                                <tr class=\"minmax bottom\">\n                                    <td>High value: </td>\n                                    <td class=\"col2 \"><input type=\"number\" (input)=\"viewModel.updateGradient()\" [(ngModel)]=\"viewModel.gradient.maxValue\" [min]=viewModel.gradient.minValue></td>\n                                </tr>\n                            </table>\n                            <div class=\"display-buttons\">\n                                <div class=\"squarebutton dropdown noselect\" (click)=\"presetsMenuVisible = !presetsMenuVisible\">\n                                    presets<span style=\"font-size:5pt\">▼</span>\n                                </div >\n                                <div class=\"dropdown-container presetsmenu\" *ngIf=\"presetsMenuVisible\">\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('redgreen'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('redgreen'))\">red to green</div>\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('greenred'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('greenred'))\">green to red</div>\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('bluered'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('bluered'))\">blue to red</div>\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('redblue'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('redblue'))\">red to blue</div>\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('whiteblue'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('whiteblue'))\">white to blue</div>\n                                    <div class=\"squarebutton noselect gradient\" (click)=\"viewModel.gradient.setGradientPreset('whitered'); presetsMenuVisible = false; viewModel.updateGradient()\" [style.background-image]=\"sanitize(viewModel.gradient.presetToTinyColor('whitered'))\">white to red</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- show or hide disabled techniques -->\n            <div *ngIf=\"configService.getFeature('toggle_hide_disabled')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                     (click)=\"viewModel.hideDisabled = !viewModel.hideDisabled;\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"show/hide disabled\">\n                     <img [src]=\"viewModel.hideDisabled ? 'assets/icons/ic_visibility_off_black_24px.svg' : 'assets/icons/ic_visibility_black_24px.svg'\" [alt]=\"viewModel.hideDisabled ? 'show disabled' : 'hide disabled'\"/>\n                 </div>\n             </div>\n\n            <!-- expand all sub-techniques -->\n            <div *ngIf=\"configService.getFeature('subtechniques')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                     (click)=\"expandSubtechniques()\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"expand sub-techniques\">\n                     <img [src]=\"viewModel.layout.layout == 'mini' ? 'assets/icons/unfold_more_gray_24px.svg' : 'assets/icons/unfold_more_black_24px.svg'\" alt=\"expand sub-techniques\"/>\n                 </div>\n             </div>\n\n            <!-- expand only annotated sub-techniques -->\n            <div *ngIf=\"configService.getFeature('subtechniques')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                     (click)=\"expandSubtechniques(true)\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"expand annotated sub-techniques\">\n                     <img [src]=\"viewModel.layout.layout == 'mini' ? 'assets/icons/unfold_more_alt_gray_24px.svg' : 'assets/icons/unfold_more_alt_black_24px.svg'\" alt=\"expand annotated sub-techniques\"/>\n                 </div>\n             </div>\n\n            <!-- collapse all sub-techniques -->\n            <div *ngIf=\"configService.getFeature('subtechniques')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                     (click)=\"collapseSubtechniques()\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"collapse sub-techniques\">\n                     <img [src]=\"viewModel.layout.layout == 'mini' ? 'assets/icons/unfold_less_gray_24px.svg' : 'assets/icons/unfold_less_black_24px.svg'\" alt=\"collapse sub-techniques\"/>\n                 </div>\n             </div>\n\n             <!-- layout -->\n             <div *ngIf=\"configService.getFeature('layout_controls')\" class=\"control-row-item\">\n                 <div class=\"control-row-button dropdown noselect\"\n                      (click)=\"currentDropdown = currentDropdown !== 'layout' ? 'layout' : null;\"\n                      matTooltipPosition=\"below\"\n                      matTooltip=\"matrix configuration\">\n                      <img src=\"assets/icons/ic_view_large_black_24px.svg\"/>\n                 </div>\n                 <div class=\"dropdown-container layout\" *ngIf=\"currentDropdown === 'layout'\" #dropdown [class.left]=\"checkalign(dropdown)\">\n                     <div class=\"section\">\n                         <select [(ngModel)]=\"viewModel.layout.layout\" placeholder=\"layout\">\n                             <option *ngFor=\"let option of viewModel.layout.layoutOptions\" [value]=\"option\">{{option}} layout</option>\n                         </select>\n                     </div>\n                     <div class=\"section\">\n                        <b class=\"filter-label\">labels</b>\n                        <div>\n                             <input [disabled]=\"viewModel.layout.layout == 'mini'\" id=\"showID-option\" class=\"checkbox-custom\" type=\"checkbox\" [(ngModel)]=\"viewModel.layout.showID\">\n                             <label [class.disabled]=\"viewModel.layout.layout == 'mini'\" for=\"showID-option\" class=\"checkbox-custom-label noselect\">show IDs</label>\n\n                        </div>\n                        <div>\n                            <input [disabled]=\"viewModel.layout.layout == 'mini'\" id=\"showName-option\" class=\"checkbox-custom\" type=\"checkbox\"  [(ngModel)]=\"viewModel.layout.showName\">\n                            <label [class.disabled]=\"viewModel.layout.layout == 'mini'\" for=\"showName-option\" class=\"checkbox-custom-label noselect\">show names</label>\n                        </div>\n                    </div>\n                    <div class=\"section\">\n                        <b class=\"filter-label\">aggregate scores</b>\n                        <div>\n                            <input id=\"showAggregateScores-option\" class=\"checkbox-custom\" type=\"checkbox\"  [(ngModel)]=\"viewModel.layout.showAggregateScores\">\n                            <label for=\"showAggregateScores-option\" class=\"checkbox-custom-label noselect\">show aggregate scores</label>\n                        </div>\n                        <div>\n                            <input [disabled]=\"!viewModel.layout.showAggregateScores || viewModel.layout.aggregateFunction !== 'average'\"\n                                id=\"countUnscored-option\" class=\"checkbox-custom\" type=\"checkbox\"\n                                [(ngModel)]=\"viewModel.layout.countUnscored\">\n                            <label [class.disabled]=\"!viewModel.layout.showAggregateScores || viewModel.layout.aggregateFunction !== 'average'\"\n                                for=\"countUnscored-option\"\n                                class=\"checkbox-custom-label noselect\">count unscored techniques as 0</label>\n                        </div>\n                        <div class=\"subsection\">\n                            <label for=\"aggregateFunctionDropdown\">aggregate function: </label>\n                            <div class=\"inner-dropdown-container\">\n                                <select\n                                    [disabled]=\"!viewModel.layout.showAggregateScores\"\n                                    id=\"aggregateFunctionDropdown\"\n                                    [(ngModel)]=\"viewModel.layout.aggregateFunction\" placeholder=\"function\">\n                                    <option *ngFor=\"let option of viewModel.layout.aggregateFunctionOptions\"\n                                            [value]=\"option\">{{option}}</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n        </li>\n        <li *ngIf=\"configService.getFeatureGroup('technique_controls', 'any') && configService.getFeature('selecting_techniques')\">\n            <div *ngIf=\"configService.getFeatureGroupCount('technique_controls') >= 3\" class=\"section-label\">\n                technique controls\n            </div>\n            <!-- TECHNIQUE CONTROLS -->\n            <!-- enable/disable technique -->\n            <div *ngIf=\"configService.getFeature('disable_techniques')\" class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                     (click)=\"setSelectedState()\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"toggle state\"\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\n                     <img [src]=\"viewModel.isCurrentlyEditing() ? 'assets/icons/ic_texture_black_24px.svg' : 'assets/icons/ic_texture_gray_24px.svg'\" alt=\"toggle state\"/>\n                 </div>\n             </div>\n\n            <!-- background color -->\n            <div *ngIf=\"configService.getFeature('manual_color')\" class=\"control-row-item\">\n\n                <div class=\"control-row-button dropdown noselect\"\n                     (click)=\"viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== 'colorpicker' ? 'colorpicker' : null : continue\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"background color\"\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\"\n                     [style.color]=\"viewModel.isCurrentlyEditing() ? '#000000' : '#aaaaaa'\">\n\n                    <svg border=\"#dddddd\" [attr.fill]=\"viewModel.isCurrentlyEditing() ? '#000000' : '#aaaaaa'\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                        <path d=\"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"/>\n                        <path [attr.class]=\"viewModel.isCurrentlyEditing() ? viewModel.getEditingCommonValue('color') : none\" d=\"M0 20h24v4H0z\"/>\n                    </svg>\n                </div>\n                <!-- color picker (invisible, absolute)-->\n                <div class=\"colorpicker dropdown-container\" #dropdown [class.left]=\"checkalign(dropdown)\"\n                     *ngIf=\"currentDropdown === 'colorpicker'\">\n\n                    <div class=\"color-block wide noselect dropdown\"\n                         (click)=\"viewModel.editSelectedTechniques('color', '')\">\n                        no color\n                    </div>\n                    <div class=\"color-block square\"\n                         *ngFor=\"let color of viewModel.backgroundPresets\"\n                         [style.background]=\"color\"\n                         (click)=\"viewModel.editSelectedTechniques('color', color)\"></div>\n                </div>\n            </div>\n\n\n            <!-- score -->\n            <div *ngIf=\"configService.getFeature('scoring')\" class=\"control-row-item\" >\n                <div class=\"control-row-button dropdown noselect\"\n                     (click)=\"viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== 'score' ? 'score' : null : continue\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"scoring\"\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\"\n                     [style.color]=\"viewModel.isCurrentlyEditing() ? '#000000' : '#aaaaaa'\">\n                     <img [src]=\"viewModel.isCurrentlyEditing() ? 'assets/icons/ic_insert_chart_black_24px.svg' : 'assets/icons/ic_insert_chart_gray_24px.svg'\" alt=\"score\"/>\n                </div>\n                <div class=\"dropdown-container inputfield\" #dropdown [class.left]=\"checkalign(dropdown)\"\n                     *ngIf=\"currentDropdown === 'score'\">\n                     <mat-form-field>\n                         <!-- update data whenever it is typed in -->\n                         <input matInput\n                                type=\"text\"\n                                onkeypress=\"return (event.charCode >= 48 && event.charCode <= 57) || event.charCode == 46 || event.charCode == 45\"\n                                [(ngModel)]=\"scoreEditField\"\n                                placeholder=\"score\"\n                                (input)=\"viewModel.editSelectedTechniques('score', $event.target.value); viewModel.editSelectedTechniques('scoreColor', viewModel.gradient.getColor($event.target.value));\">\n                         <mat-hint style=\"color: red\" align=\"start\" *ngIf=\"validateScoreInput()\">not a number</mat-hint>\n                     </mat-form-field>\n                </div>\n            </div>\n\n\n            <!-- comment -->\n            <div *ngIf=\"configService.getFeature('comments')\"  class=\"control-row-item\">\n\n                <div class=\"control-row-button dropdown noselect\"\n                     (click)=\"viewModel.isCurrentlyEditing() ? currentDropdown = currentDropdown !== 'comment' ? 'comment' : null : continue\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"comment\"\n                     [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\"\n                     [style.color]=\"viewModel.isCurrentlyEditing() ? '#000000' : '#aaaaaa'\">\n                     <img [src]=\"viewModel.isCurrentlyEditing() ? 'assets/icons/ic_insert_comment_black_24px.svg' : 'assets/icons/ic_insert_comment_gray_24px.svg'\" alt=\"comment\" />\n                 </div>\n                 <!-- comment input (invisible, absolute) -->\n                 <div class=\"dropdown-container inputfield left\" #dropdown [class.left]=\"checkalign(dropdown)\"\n                      *ngIf=\"currentDropdown === 'comment'\">\n\n                    <mat-form-field>\n                        <textarea matInput\n                                  matTextareaAutosize\n                                  placeholder=\"comment\"\n                                  [(ngModel)]=\"commentEditField\"\n                                  (input)=\"viewModel.editSelectedTechniques('comment', $event.target.value)\">\n                        </textarea>\n                    </mat-form-field>\n                 </div>\n             </div>\n             <!-- remove all annotations -->\n             <div *ngIf=\"configService.getFeature('clear_annotations')\" class=\"control-row-item\">\n                 <div class=\"control-row-button noselect\"\n                      (click)=\"viewModel.resetSelectedTechniques(); populateEditFields()\"\n                      matTooltipPosition=\"below\"\n                      matTooltip=\"clear annotations on selected\"\n                      [matTooltipDisabled]=\"!viewModel.isCurrentlyEditing()\">\n                      <img [src]=\"viewModel.isCurrentlyEditing() ? 'assets/icons/ic_layers_clear_black_24px.svg' : 'assets/icons/ic_layers_clear_gray_24px.svg'\" alt=\"remove all annotations\"/>\n                  </div>\n              </div>\n        </li>\n    </ul>\n</div>\n\n<!--\noooo     oooo      o   ooooooooooo oooooooooo  ooooo ooooo  oooo\n 8888o   888      888  88  888  88  888    888  888    888  88\n 88 888o8 88     8  88     888      888oooo88   888      888\n 88  888  88    8oooo88    888      888  88o    888     88 888\no88o  8  o88o o88o  o888o o888o    o888o  88o8 o888o o88o  o888o\n                                                                 -->\n<div class=\"matrices\">\n    <div oncontextmenu=\"return false\">\n        <div class=\"spinner\" *ngIf=\"!dataService.getDomain(viewModel.domainID).dataLoaded\">\n            <mat-progress-spinner mode=\"indeterminate\"></mat-progress-spinner>\n        </div>\n        <mat-drawer-container autosize>\n            <mat-drawer-content>\n                <div class=\"matrices-columns\">\n                    <div class=\"matrix-column\" *ngFor=\"let matrix of dataService.getDomain(viewModel.domainID).matrices\">\n                        <div *ngIf=\"dataService.getDomain(viewModel.domainID).matrices.length > 1\" class=\"matrix-name\">{{matrix.name}}</div>\n                        <div *ngIf=\"viewModel.layout.layout == 'side'\">\n                            <matrix-side [matrix]=\"matrix\" [viewModel]=\"viewModel\" (selectionChanged)=\"onTechniqueSelect()\"></matrix-side>\n                        </div>\n                        <div *ngIf=\"viewModel.layout.layout == 'flat'\">\n                            <matrix-flat [matrix]=\"matrix\" [viewModel]=\"viewModel\" (selectionChanged)=\"onTechniqueSelect()\"></matrix-flat>\n                        </div>\n                        <div *ngIf=\"viewModel.layout.layout == 'mini'\">\n                            <matrix-mini [matrix]=\"matrix\" [viewModel]=\"viewModel\" (selectionChanged)=\"onTechniqueSelect()\"></matrix-mini>\n                        </div>\n                    </div>\n                </div>\n            </mat-drawer-content>\n            <mat-drawer mode=\"side\" position=\"end\" #sidebar [opened]=\"viewModel.sidebarOpened\">\n                <sidebar [viewModel]=\"viewModel\"></sidebar>\n            </mat-drawer>\n        </mat-drawer-container>\n    </div>\n</div>\n\n\n<!--\nooooo       ooooooooooo  ooooooo8 ooooooooooo oooo   oooo ooooooooo\n 888         888    88 o888    88  888    88   8888o  88   888    88o\n 888         888ooo8   888    oooo 888ooo8     88 888o88   888    888\n 888      o  888    oo 888o    88  888    oo   88   8888   888    888\no888ooooo88 o888ooo8888 888ooo888 o888ooo8888 o88o    88  o888ooo88\n                                                                      -->\n\n<div class=\"legendBar\" (click)=\"showingLegend = !showingLegend\" *ngIf=\"!showingLegend && configService.getFeature('legend')\">\n    <img src=\"assets/icons/ic_keyboard_arrow_up_black_24px.svg\" style=\"position: absolute; left:4px; top: 3px;\">\n    <div class=\"noselect\" style=\"padding:4px; font-size:14px; position: absolue; width: 100%; text-align:center\">\n        legend\n    </div>\n</div>\n\n<div class=\"legend\" *ngIf=\"showingLegend && configService.getFeature('legend')\">\n    <div class=\"legendBar\" (click)=\"showingLegend = !showingLegend\" style=\"position: absolute; top:0px; left:0px;\">\n        <img src=\"assets/icons/ic_keyboard_arrow_down_black_24px.svg\" style=\"position: absolute; left:4px; top: 3px;\">\n        <div class=\"noselect\" style=\"padding:4px; font-size:14px; position: absolue; width: 100%; text-align:center\">\n            legend\n        </div>\n    </div>\n    <div class=\"itemArea\">\n        <div class=\"item\" *ngFor=\"let item of viewModel.legendItems; let Even=even; let i=index\" [class.even]=\"!Even\">\n            <input [(colorPicker)]=\"item.color\" [(ngModel)]=\"item.color\" [style.background]=\"item.color\" [cpPosition]=\"'top'\" [cpPresetColors]=\"viewModel.legendColorPresets\" style=\"width:75px;\"/>\n            <!-- <input class=\"label\" [(ngModel)]=\"item.label\"> -->\n            <mat-form-field class=\"label\">\n                    <input matInput\n\n                    [(ngModel)]=\"item.label\">\n\n            </mat-form-field>\n            <img src=\"assets/icons/ic_clear_gray_24px.svg\" style=\"position: relative; top:5px; right:0px;\" (click)=\"viewModel.deleteLegendItem(i);\">\n        </div>\n        <button style=\"margin-left:75px; margin-top:10px; margin-bottom:10px;\" class=\"button\" (click)=\"viewModel.addLegendItem();\">Add Item</button>\n        <button style=\"margin-top:10px; margin-bottom:10px;\" class=\"button\" (click)=\"viewModel.clearLegend();\">Clear</button>\n    </div>\n</div>\n","/* (ignored) */","import { Component, OnInit, Input, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { Technique, Tactic } from '../../../data.service';\nimport { ViewModel, TechniqueVM } from '../../../viewmodels.service';\nimport { ConfigService, ContextMenuItem } from '../../../config.service';\nimport { CellPopover } from '../cell-popover';\n\n@Component({\n  selector: 'app-contextmenu',\n  templateUrl: './contextmenu.component.html',\n  styleUrls: ['./contextmenu.component.scss']\n})\nexport class ContextmenuComponent extends CellPopover implements OnInit {\n    @Input() technique: Technique;\n    @Input() tactic: Tactic;\n    @Input() viewModel: ViewModel;\n    public placement: string;\n    @Output() close = new EventEmitter<any>();\n\n    private get techniqueVM(): TechniqueVM {\n        return this.viewModel.getTechniqueVM(this.technique, this.tactic);\n    }\n\n    constructor(private element: ElementRef, public configService: ConfigService) {\n        super(element);\n    }\n\n    ngOnInit() {\n        this.placement = this.getPosition();\n    }\n\n    public closeContextmenu() {\n        this.close.emit();\n    }\n\n    public select() {\n        this.viewModel.clearSelectedTechniques();\n        this.viewModel.selectTechnique(this.technique, this.tactic);\n        this.closeContextmenu();\n    }\n\n    public addSelection() {\n        this.viewModel.selectTechnique(this.technique, this.tactic);\n        this.closeContextmenu();\n    }\n\n    public removeSelection() {\n        this.viewModel.unselectTechnique(this.technique, this.tactic);\n        this.closeContextmenu();\n    }\n\n    public selectAll() {\n        this.viewModel.selectAllTechniques();\n        this.closeContextmenu();\n    }\n\n    public deselectAll() {\n        this.viewModel.clearSelectedTechniques();\n        this.closeContextmenu();\n    }\n\n    public invertSelection() {\n        this.viewModel.invertSelection();\n        this.closeContextmenu();\n    }\n\n    public selectAnnotated() {\n        this.viewModel.selectAnnotated();\n        this.closeContextmenu();\n    }\n\n    public selectUnannotated() {\n        this.viewModel.selectUnannotated();\n        this.closeContextmenu();\n    }\n\n    public selectAllInTactic(){\n        this.viewModel.selectAllTechniquesInTactic(this.tactic);\n        this.closeContextmenu();\n    }\n\n    public deselectAllInTactic(){\n        this.viewModel.unselectAllTechniquesInTactic(this.tactic);\n        this.closeContextmenu();\n    }\n\n    public viewTechnique() {\n        window.open(this.technique.url, \"_blank\");\n        this.closeContextmenu();\n    }\n\n    public viewTactic() {\n        window.open(this.tactic.url, \"_blank\");\n        this.closeContextmenu();\n    }\n\n    public openCustomContextMenuItem(customItem: ContextMenuItem) {\n        window.open(customItem.getReplacedURL(this.technique, this.tactic), \"_blank\");\n        this.closeContextmenu();\n    }\n}\n","<div class=\"contextmenu\" (contextmenu)=\"closeContextmenu()\">\n    <!-- covers entire screen -->\n    <div class=\"cover\" (click)=\"closeContextmenu()\"></div>\n    <!-- the actual menu -->\n    <div [ngClass]=\"'menu ' + placement\">\n        <div class=\"contextMenu-section\">\n            <div class=\"contextMenu-header\">\n                {{technique.name}} ({{technique.attackID}})\n            </div>\n        </div>\n        <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"contextMenu-section\">\n            <div class=\"contextMenu-button\" (click)=\"select()\">\n                select\n            </div>\n            <div class=\"contextMenu-button\" (click)=\"addSelection()\">\n                add to selection\n            </div>\n            <div class=\"contextMenu-button\" (click)=\"removeSelection()\">\n                remove from selection\n            </div>\n        </div>\n        <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"contextMenu-section\">\n            <div class=\"contextMenu-button\" (click)=\"selectAll()\">\n                select all\n            </div>\n            <div class=\"contextMenu-button\" (click)=\"deselectAll()\">\n                deselect all\n            </div>\n            <div class=\"contextMenu-button\" (click)=\"invertSelection()\">\n                invert selection\n            </div>\n        </div>\n        <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"contextMenu-section\">\n            <div class=\"contextMenu-button\" (click)=\"selectAnnotated()\">\n                select annotated\n            </div>\n            <div class=\"contextMenu-button\" (click)=\"selectUnannotated()\">\n                select unannotated\n            </div>\n        </div>\n        <div *ngIf=\"configService.getFeature('selecting_techniques')\" class=\"contextMenu-section\">\n            <div class=\"contextMenu-button\" (click)=\"selectAllInTactic()\">\n                select all techniques in tactic\n            </div>\n            <div class=\"contextMenu-button\" (click)=\"deselectAllInTactic()\">\n                deselect all techniques in tactic\n            </div>\n        </div>\n        <div class=\"contextMenu-section\">\n            <div class=\"contextMenu-button\" (click)=\"viewTechnique()\">\n                view technique\n            </div>\n            <div class=\"contextMenu-button\" (click)=\"viewTactic()\">\n                view tactic\n            </div>\n        </div>\n        <div class=\"contextMenu-section\" *ngIf=\"configService.contextMenuItems.length > 0\">\n            <div class=\"contextMenu-button\" *ngFor=\"let contextMenuItem of configService.contextMenuItems\" (click)=\"openCustomContextMenuItem(contextMenuItem)\">\n                {{contextMenuItem.label}}\n            </div>\n        </div>\n    </div>\n</div>","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { Component, OnInit } from '@angular/core';\nimport { MatrixCommon } from '../matrix-common';\nimport { ConfigService } from '../../config.service';\n\n@Component({\n  selector: 'matrix-mini',\n  templateUrl: './matrix-mini.component.html',\n  styleUrls: ['./matrix-mini.component.scss']\n})\nexport class MatrixMiniComponent extends MatrixCommon implements OnInit  {\n\n    constructor(configService: ConfigService) { \n        super(configService);\n    }\n\n    ngOnInit() {}\n}\n","<table class=\"matrix mini\">\n    <thead>\n        <tr>\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic header\">\n                <tactic-cell [viewModel]=\"viewModel\" [tactic]=\"tactic\"></tactic-cell>\n            </td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic body\">\n                <ng-container *ngFor=\"let technique of applyControls(tactic.techniques, tactic)\">\n                    <div class=\"cell-container supertechnique-group\" *ngIf=\"technique.subtechniques.length > 0 else elseblock\">\n                        <div class=\"cell-container supertechnique\">\n                            <technique-cell #elseblock\n                                        [tactic]=\"tactic\"\n                                        [technique]=\"technique\" \n                                        [viewModel]=\"viewModel\"\n                                        [matrix]=\"matrix\"\n                                        (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\n                                        (rightclick)=\"onTechniqueRightClick($event, technique)\"\n                                        (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\n                                        (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                            </technique-cell>\n                        </div>\n                        <div class=\"cell-container subtechnique\" *ngFor=\"let subtechnique of applyControls(technique.subtechniques, tactic)\">\n                            <technique-cell\n                                        [tactic]=\"tactic\"\n                                        [technique]=\"subtechnique\" \n                                        [viewModel]=\"viewModel\"\n                                        [matrix]=\"matrix\"\n                                        (leftclick)=\"onTechniqueLeftClick($event, subtechnique, tactic)\"\n                                        (rightclick)=\"onTechniqueRightClick($event, subtechnique)\"\n                                        (highlight)=\"onTechniqueHighlight($event, subtechnique, tactic)\"\n                                        (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                            </technique-cell>\n                        </div>\n                    </div>\n                    <ng-template #elseblock>\n                        <div class=\"cell-container\">\n                            <technique-cell \n                                            [tactic]=\"tactic\"\n                                            [technique]=\"technique\" \n                                            [viewModel]=\"viewModel\"\n                                            [matrix]=\"matrix\"\n                                            (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\n                                            (rightclick)=\"onTechniqueRightClick($event, technique)\"\n                                            (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\n                                            (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                            </technique-cell>\n                        </div>\n                    </ng-template>\n                </ng-container>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewModel, TechniqueVM } from \"../viewmodels.service\";\nimport { ConfigService } from \"../config.service\";\nimport { Technique, DataService, Tactic, Matrix } from '../data.service';\nimport * as is from 'is_js';\ndeclare var d3: any; //d3js\ndeclare var tinycolor: any; //use tinycolor2\nimport { ColorPickerModule } from 'ngx-color-picker';\n\n@Component({\n    selector: 'exporter',\n    templateUrl: './exporter.component.html',\n    styleUrls: ['./exporter.component.scss']\n})\nexport class ExporterComponent implements OnInit {\n    \n    public currentDropdown: string = null;\n    viewModel: ViewModel;\n    public config: any = {}\n    \n    public isIE() {\n        return is.ie();\n    }\n\n    private svgDivName = \"svgInsert_tmp\"\n    unitEnum = 0; //counter for unit change ui element\n    constructor(private dialogRef: MatDialogRef<ExporterComponent>, \n                private configService: ConfigService, \n                private dataService: DataService,\n                @Inject(MAT_DIALOG_DATA) public data) {\n        this.config = { \n            \"width\": 11,\n            \"height\": 8.5,\n            \"headerHeight\": 1,\n\n            \"unit\": \"in\",\n\n            \"showSubtechniques\": \"expanded\",\n\n            \"font\": 'sans-serif',\n            \"tableBorderColor\": \"#6B7279\",\n\n            \"showHeader\": true,\n\n            \"legendDocked\": true,\n            \"legendX\": 0,\n            \"legendY\": 0,\n            \"legendWidth\": 2,\n            \"legendHeight\": 1,\n\n            \"showLegend\": true,\n            \"showGradient\": true,\n            \"showFilters\": true,\n            \"showAbout\": true,\n            \"showDomain\": true,\n            \"showAggregate\": false,\n        }\n    }\n\n    ngOnInit() {\n        this.viewModel = this.data.vm;\n        this.svgDivName = \"svgInsert\" + this.viewModel.uid;\n        \n        let self = this;\n        //determine if the layer has any scores\n        for (let matrix of this.dataService.getDomain(this.viewModel.domainID).matrices) {\n            for (let tactic of this.viewModel.filterTactics(matrix.tactics, matrix)) {\n                for (let technique of this.viewModel.filterTechniques(tactic.techniques, tactic, matrix)) {\n                    if (technique.subtechniques.length > 0) {\n                        for (let subtechnique of this.viewModel.filterTechniques(technique.subtechniques, tactic, matrix)) {\n                            if (self.viewModel.hasTechniqueVM(subtechnique, tactic)) {\n                                if (self.viewModel.getTechniqueVM(subtechnique, tactic).score != \"\") self.hasScores = true;\n                            }\n                        }\n                    }\n                    if (self.viewModel.hasTechniqueVM(technique, tactic)) {\n                        if (self.viewModel.getTechniqueVM(technique, tactic).score != \"\") self.hasScores = true;\n                    }\n                }\n            }\n        }\n        // dynamic legend height according to content;\n        let legendSectionCount = 0;\n        if (self.hasScores) legendSectionCount++;\n        if (self.hasLegendItems()) legendSectionCount++;\n        self.config.legendHeight = 0.5 * legendSectionCount; \n        //initial legend position for undocked legend\n        this.config.legendX = this.config.width - this.config.legendWidth - 0.1;\n        this.config.legendY = this.config.height - this.config.legendHeight - 0.1;\n        if (this.config.showHeader) this.config.legendY -= this.config.headerHeight; \n\n        //put at the end of the function queue so that the page can render before building the svg\n        window.setTimeout(function() {self.buildSVG(self)}, 0)\n    }\n\n    //visibility of SVG parts\n    //assess data in viewModel\n    hasName(): boolean {return this.viewModel.name.length > 0}\n    hasDomain(): boolean {return this.viewModel.domainID.length > 0}\n    hasDescription(): boolean {return this.viewModel.description.length > 0}\n    hasScores: boolean; //does the viewmodel have scores? built in ngAfterViewInit\n    hasLegendItems(): boolean {return this.viewModel.legendItems.length > 0;}\n\n    //above && user preferences\n    showName(): boolean {return this.config.showAbout && this.hasName() && this.config.showHeader}\n    showDomain(): boolean {return this.config.showDomain && this.hasDomain() && this.config.showHeader}\n    showAggregate(): boolean {return this.viewModel.layout.showAggregateScores && this.config.showHeader}\n    showDescription(): boolean {return this.config.showAbout && this.hasDescription() && this.config.showHeader}\n    showLayerInfo(): boolean {return (this.showName() || this.showDescription()) && this.config.showHeader}\n    showFilters(): boolean {return this.config.showFilters && this.config.showHeader};\n    showGradient(): boolean {return this.config.showGradient && this.hasScores && this.config.showHeader}\n    showLegend(): boolean {return this.config.showLegend && this.hasLegendItems()}\n    showLegendContainer(): boolean{return this.showLegend() || this.showGradient()}\n    showLegendInHeader(): boolean {return this.config.legendDocked}\n    // showItemCount(): boolean {return this.config.showTechniqueCount}\n    buildSVGDebounce = false;\n    buildSVG(self?, bypassDebounce=false): void {\n        if (!self) self = this; //in case we were called from somewhere other than ngViewInit\n\n        console.log(\"settings changed\")\n        if (self.buildSVGDebounce && !bypassDebounce) {\n            // console.log(\"skipping debounce...\")\n            return;\n        }\n        if (!bypassDebounce) {\n            // console.log(\"debouncing...\");\n            self.buildSVGDebounce = true;\n            window.setTimeout(function() {self.buildSVG(self, true)}, 500)\n            return;\n        }\n        self.buildSVGDebounce = false;\n\n        console.log(\"building SVG\");\n\n        //check preconditions, make sure they're in the right range\n        let margin = {top: 5, right: 5, bottom: 5, left: 5};\n\n        let width = Math.max(self.convertToPx(self.config.width, self.config.unit)  - (margin.right + margin.left), 10); console.log(\"width\", width);\n        let height = Math.max(self.convertToPx(self.config.height, self.config.unit) - (margin.top + margin.bottom), 10); console.log(\"height\", height)\n        let headerHeight = Math.max(self.convertToPx(self.config.headerHeight, self.config.unit), 1); console.log(\"headerHeight\", headerHeight);\n\n        let legendX = Math.max(self.convertToPx(self.config.legendX, self.config.unit), 0);\n        let legendY = Math.max(self.convertToPx(self.config.legendY, self.config.unit), 0);\n        let legendWidth = Math.max(self.convertToPx(self.config.legendWidth, self.config.unit), 10);\n        let legendHeight = Math.max(self.convertToPx(self.config.legendHeight, self.config.unit), 10);\n\n        //remove previous graphic\n        let element = <HTMLElement>document.getElementById(self.svgDivName);\n        element.innerHTML = \"\";\n\n        let svg = d3.select(\"#\" + self.svgDivName).append(\"svg\")\n            .attr(\"width\", width + margin.left + margin.right)\n            .attr(\"height\", height + margin.top + margin.bottom)\n            .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n            .attr(\"id\", \"svg\" + self.viewModel.uid) //Tag for downloadSVG\n            .append(\"g\")\n            .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n            .style(\"font-family\", self.config.font);\n        let stroke_width = 1;\n\n        // ooooo ooooo            o888                                                 \n        //  888   888  ooooooooo8  888 ooooooooo    ooooooooo8 oo oooooo    oooooooo8  \n        //  888ooo888 888oooooo8   888  888    888 888oooooo8   888    888 888ooooooo  \n        //  888   888 888          888  888    888 888          888                888 \n        // o888o o888o  88oooo888 o888o 888ooo88     88oooo888 o888o       88oooooo88  \n        //                             o888                                            \n\n        // Essentially, the following functions brute force the optimal text arrangement for each cell \n        // in the matrix to maximize text size. The algorithm tries different combinations of line breaks\n        // in the cell text.\n\n        /**\n         * Divide distance into divisions equidistant anchor points S.T they all have equal\n         * padding from each other and the beginning and end of the distance\n         * @param  distance  distance to divide\n         * @param  divisions number of divisions\n         * @return           number[] where each number corresponds to a division-center offset\n         */\n        function getSpacing(distance, divisions) {\n            distance = distance - 1; //1px padding for border\n            let spacing = distance/(divisions*2);\n            let res = []\n            for (let i = 1; i <= divisions*2; i+=2) {\n                res.push(1 + (spacing * i))\n            }\n            return res\n        };\n\n        /**\n         * Magic function to insert line breaks. \n        * @param  {string[]} words         array of words to space\n        * @param  {dom node} self          the dom element with the text\n        * @param  {number} xpos            x pos to place multiline text at\n        * @param  {number} ypos            same but with y\n        * @param  {number} totalDistance   total distance to contain broken text.\n        *                                  amt in excess of spacingDistance\n        *                                  becomes v padding.\n        * @param  {number} spacingDistance total distance to space text inside,\n        *                                  should be < totalDistance\n        * @param {boolean} center          if true, center the text in the node, else left-align\n        * @param {number} cellWidth        total width of the cell to put the text in\n        */\n        function insertLineBreaks(words, node, padding, xpos, ypos, totalDistance, spacingDistance, center, cellWidth) {\n            let el = d3.select(node)\n            // el.attr(\"y\", y + (totalDistance - spacingDistance) / 2);\n\n            //clear previous content\n            el.text('');\n            while(node.firstChild) node.removeChild(node.firstChild);\n\n            let spacing = getSpacing(spacingDistance, words.length)\n            for (var i = 0; i < words.length; i++) {\n                var tspan = el.append('tspan').text(words[i]);\n                if (center) tspan.attr(\"text-anchor\",\"middle\");\n                // if (i > 0)\n                let offsetY = ((totalDistance - spacingDistance) / 2) + ypos + spacing[i]\n                tspan\n                    .attr('x', center? xpos + (cellWidth/2) : xpos + padding)\n                    .attr('y', offsetY);\n            }\n        };\n\n        /**\n         * Given an array of words, find the optimal font size for the array of words to be\n         * broken onto 1 line each.\n         * @param  {string[]} words     to be broken onto each line\n         * @param  {dom node} node      the dom node of the cell\n         * @param  {cellWidth} number   the width of the cell\n         * @param  {cellHeight} number  the height of the cell\n         * @param {boolean} center      center the text?\n         * @param {number} maxFontSize  max font size, default is 12\n         * @return {number}             the largest possible font size\n         *                              not larger than 12\n         */\n        function findSpace(words: string[], node, cellWidth: number, cellHeight: number, center: boolean, maxFontSize=12) {\n            let padding = 4; //the amount of padding on the left and right\n            //break into multiple lines\n            let breakDistance = Math.min(cellHeight, (maxFontSize + 3) * words.length)\n            insertLineBreaks(words, node, padding, 0, 0, cellHeight, breakDistance, center, cellWidth)\n\n            //find right size to fit the height of the cell\n            let breakTextHeight = breakDistance / words.length;\n            let fitTextHeight = Math.min(breakTextHeight, cellHeight) * 0.8; //0.8\n\n            //find right size to fit the width of the cell\n            // let longestWord = words.sort(function(a,b) {return b.length - a.length})[0]\n            let longestWordLength = -Infinity;\n            for (let w = 0; w < words.length; w++) {\n                let word = words[w];\n                longestWordLength = Math.max(longestWordLength, word.length)\n            }\n            let fitTextWidth = ((cellWidth - (2 * padding)) / longestWordLength) * 1.45;\n\n            //the min fitting text size not larger than MaxFontSize\n            let size = Math.min(maxFontSize, fitTextHeight, fitTextWidth);\n\n            // if (size < 5) return \"0px\"; //enable for min text size\n            return size;\n        }\n\n        /**\n         * Given text, a dom node, and sizing parameters, \n         * try all combinations of word breaks to maximize font size inside of the given space\n         * returns font size in pixels\n         * @param {string} text                   the text to render in the cell\n         * @param {dom node} node                 the node for the cell\n         * @param {number} cellWidth              width of the cell to get the font size for\n         * @param {number} cellHeight             height of the cell to get the font size for\n         * @param {boolean} center                center the text?\n         * @param {number} maxFontSize            max font size, default is 12\n         * @return {string}                       the size in pixels\n         */\n        function optimalFontSize(text: string, node, cellWidth: number, cellHeight: number, center: boolean, maxFontSize=12): number {\n            let words = text.split(\" \");\n            let bestSize = -Infinity; //beat this size\n            let bestWordArrangement = [];\n\n            /**\n             * determine placement of line breaks to try. Shorter lists of words can try more positions\n             * @param {number} num_spaces the number of spaces in the words, aka words.length - 1\n             * @param {number} [num_breaks=3]  the number of breaks to insert\n             * @returns str[] where each index is a combination of breaks represented as [01]+ where 1 is a break and 0 is a space\n             */\n            function find_breaks(num_spaces:number, num_breaks=3) {\n                let breaks = new Set<string>();\n                function recurse(breakset_inherit, depth, num_breaks) {\n                    for (let i = 0; i < breakset_inherit.length; i++) {\n                        let breakset = JSON.parse(JSON.stringify(breakset_inherit)); //deep copy\n                        breakset[i] = 1; // insert break at this location\n                        breaks.add(breakset.join(\"\")); //save this combination\n                        if (depth < num_breaks - 1) recurse(breakset, depth + 1, num_breaks);\n                    }\n                }\n                let initial_breaks = []\n                while (initial_breaks.length < num_spaces) initial_breaks.push(0); //fill with 0s\n                breaks.add(initial_breaks.join(\"\")); //save this combination\n                recurse(initial_breaks, 0, num_breaks)\n                return breaks\n            }\n\n            let num_spaces = words.length;\n            // longer strings can't try as many combinations without the page lagging\n            let num_breaks = 1;\n            if (num_spaces < 20) num_breaks = 3;\n            else if (num_spaces < 50) num_breaks = 2;\n            else num_breaks = 1;\n            let breaks = Array.from(find_breaks(num_spaces, num_breaks))\n            for (let binaryString of breaks) { // find the best option of the proposed placements generated by find_breaks\n                //binaryString: binary representation of newline locations, e.g 001011\n                //where 1 is newline and 0 is no newline\n                let wordSet = []; //build this array\n                \n                for (let k = 0; k < binaryString.length; k++) {\n                    if (binaryString[k] === \"0\") {//join with space\n                        if (wordSet.length == 0) wordSet.push(words[k]);\n                        else wordSet[wordSet.length - 1] = wordSet[wordSet.length - 1] + \" \" + words[k]; //append to previous word in array\n                    } else { //linebreak\n                        wordSet.push(words[k]) //new word in array\n                    }\n                }\n\n                let size = findSpace(wordSet, node, cellWidth, cellHeight, center, maxFontSize);\n                if (size > bestSize) { //found new optimum\n                    bestSize = size;\n                    bestWordArrangement = wordSet;\n                }\n                if (size == maxFontSize) break; //if largest text found, no need to search more\n            }\n\n            findSpace(bestWordArrangement, node, cellWidth, cellHeight, center, maxFontSize);\n            return bestSize;\n        }\n\n        // add properties to the node to set the vertical alignment to center without using\n        // dominant-baseline, which isn't widely supported\n        function centerValign(node, fontSize=null) {\n            if (node.children && node.children.length > 0) {\n                for (let child of node.children) centerValign(child, node.getAttribute(\"font-size\"));\n            } else {\n                // base case\n                // transform by half the font size - 1/2px for proper centering\n                fontSize = fontSize ? fontSize : node.getAttribute(\"font-size\");\n                if (fontSize.endsWith(\"px\")) fontSize = Number(fontSize.split(\"px\")[0])\n                let currY = node.hasAttribute(\"y\") ? Number(node.getAttribute(\"y\")) : 0;\n                let newY = currY + Math.floor((fontSize * 0.3))\n                d3.select(node).attr(\"y\", newY);\n            }\n        }\n\n        class HeaderSectionContent {\n            label: string;\n            // either string to display in box, or a callback to create complex content in the box\n            // callback function option takes params node, width, height, and appends data to node\n            data: string | Function;\n        }\n        class HeaderSection {\n            title: string;\n            contents: HeaderSectionContent[];\n        }\n\n        let legend = {\"title\": \"legend\", \"contents\": []};\n        if (self.hasScores && self.showGradient()) legend.contents.push({\n            \"label\": \"gradient\", \"data\": function(group, sectionWidth, sectionHeight) {\n                let domain = [];\n                for (let i = 0; i < self.viewModel.gradient.colors.length; i++) {\n                    let percent = i / (self.viewModel.gradient.colors.length - 1);\n                    domain.push(d3.interpolateNumber(self.viewModel.gradient.minValue, self.viewModel.gradient.maxValue)(percent))\n                }\n                let colorScale = d3.scaleLinear()\n                    .domain(domain)\n                    .range(self.viewModel.gradient.colors.map(function (color) { return color.color; }))\n                let nCells = domain.length * 2;\n                let valuesRange = self.viewModel.gradient.maxValue - self.viewModel.gradient.minValue;\n                group.append(\"g\")\n                    .attr(\"transform\", \"translate(0, 5)\")\n                    .call(d3.legendColor()\n                    .shapeWidth((sectionWidth / nCells))\n                    .shapePadding(0)\n                    .cells(nCells)\n                    .shape(\"rect\")\n                    .orient(\"horizontal\")\n                    .scale(colorScale)\n                    .labelOffset(2)\n                    .labelFormat(d3.format(\"0.02r\"))\n                    \n                    // .labelFormat( valuesRange < nCells ? d3.format(\"0.01f\") : d3.format(\".2\"))\n                )\n            }\n        });\n        if (self.showLegend()) legend.contents.push({\n            \"label\": \"legend\", \"data\": function(group, sectionWidth, sectionHeight) {\n                let colorScale = d3.scaleOrdinal()\n                    .domain(self.viewModel.legendItems.map(function(item) { return item.label; }))\n                    .range(self.viewModel.legendItems.map(function(item) { return item.color; }))\n                group.append(\"g\")\n                    .attr(\"transform\", \"translate(0, 5)\")\n                    .call(d3.legendColor()\n                    .shapeWidth((sectionWidth / self.viewModel.legendItems.length))\n                    .shapePadding(0)\n                    .shape(\"rect\")\n                    .orient(\"horizontal\")\n                    .scale(colorScale)\n                    .labelOffset(2)\n                )\n            }\n        })\n\n        function descriptiveBox(group, sectionData: HeaderSection, boxWidth: number, boxHeight: number) {\n            let boxPadding = 5;\n            let boxGroup = group.append(\"g\")\n                .attr(\"transform\", `translate(0,${boxPadding})`);\n            // adjust height for padding\n            boxHeight -= 2 * boxPadding;\n            let outerbox = boxGroup.append(\"rect\")\n                .attr(\"class\", \"header-box\")\n                .attr(\"width\", boxWidth)\n                .attr(\"height\", boxHeight)\n                .attr(\"stroke\", \"black\")\n                .attr(\"fill\", \"white\")\n                .attr(\"rx\", boxPadding); //rounded corner\n            let titleEl = boxGroup.append(\"text\")\n                .attr(\"class\", \"header-box-label\")\n                .text(sectionData.title)\n                .attr(\"x\", 2 * boxPadding)\n                .attr(\"font-size\", 12)\n                .each(function() { centerValign(this); })\n                // .attr(\"dominant-baseline\", \"middle\")\n            // add cover mask so that the box lines crop around the text\n            let bbox = titleEl.node().getBBox();\n            let coverPadding = 2;\n            let cover = boxGroup.append(\"rect\")\n                .attr(\"class\", \"label-cover\")\n                .attr(\"x\", bbox.x - coverPadding)\n                .attr(\"y\", bbox.y - coverPadding)\n                .attr(\"width\", bbox.width + 2*coverPadding)\n                .attr(\"height\", bbox.height + 2*coverPadding)\n                .attr(\"fill\", \"white\")\n                .attr(\"rx\", boxPadding); //rounded corner just in case it's being shown on a transparent background\n            titleEl.raise(); //push title to front;\n\n            // add content to box\n            let boxContentGroup = boxGroup.append(\"g\")\n                .attr(\"class\", \"header-box-content\")\n                .attr(\"transform\", `translate(${boxPadding}, 0)`)\n            let boxContentHeight = boxHeight;// - 2*boxPadding;\n            let boxContentWidth = boxWidth - 2*boxPadding;\n\n            let boxGroupY = d3.scaleBand()\n                .padding(0.05)\n                .align(0.5)\n                .domain(sectionData.contents.map(function(content) { return content.label }))\n                .range([0, boxContentHeight]);\n            for (let i = 0; i < sectionData.contents.length; i++) {\n                let subsectionContent = sectionData.contents[i];\n                let contentGroup = boxContentGroup.append(\"g\")\n                    .attr(\"transform\", `translate(0, ${boxGroupY( subsectionContent.label )})`);\n                if (typeof(subsectionContent.data) == \"string\") {\n                    // add text to contentGroup\n                    contentGroup.append(\"text\")\n                        .text(subsectionContent)\n                        .attr(\"font-size\", function() {\n                            return optimalFontSize(subsectionContent.data as string, this, boxContentWidth, boxGroupY.bandwidth(), false, 32)\n                        })\n                        .each(function() { centerValign(this); })\n                        // .attr(\"dominant-baseline\", \"middle\")\n                } else {\n                    //call callback to add complex data to contentGroup\n                    (subsectionContent.data as Function)(contentGroup, boxContentWidth, boxGroupY.bandwidth());\n                }\n                if (i != sectionData.contents.length - 1) contentGroup.append(\"line\") //dividing line\n                    .attr(\"x1\", 0)\n                    .attr(\"x2\", boxContentWidth)\n                    .attr(\"y1\", boxGroupY.bandwidth())\n                    .attr(\"y2\", boxGroupY.bandwidth())\n                    .attr(\"stroke\", \"#dddddd\");\n            }\n        }\n\n        // ooooo ooooo                             oooo                        \n        //  888   888  ooooooooo8  ooooooo    ooooo888  ooooooooo8 oo oooooo   \n        //  888ooo888 888oooooo8   ooooo888 888    888 888oooooo8   888    888 \n        //  888   888 888        888    888 888    888 888          888        \n        // o888o o888o  88oooo888 88ooo88 8o  88ooo888o  88oooo888 o888o       \n                                                                            \n\n        if (self.config.showHeader) {\n            let headerSections: HeaderSection[] = []\n\n            if (self.showName() || self.showDescription()) {\n                let about = {\"title\": \"about\", \"contents\": []};\n                if (self.showName()) about.contents.push({\"label\": \"name\", \"data\": this.viewModel.name});\n                if (self.showDescription()) about.contents.push({\"label\": \"description\", \"data\": this.viewModel.description});\n                headerSections.push(about)\n            }\n\n            const config = {\"title\": \"domain\", \"contents\": []};\n            let filterConfig = {\"title\": \"platforms\", \"contents\": []};\n            if (self.showDomain()) {\n                let domain = this.dataService.getDomain(this.viewModel.domainID);\n                config.contents.push({\"label\": \"domain\", \"data\": domain.name + \" \" + domain.version});\n            }\n            if (self.showFilters()) {\n              const filterData = {\"label\": \"platforms\", \"data\": this.viewModel.filters.platforms.selection.join(\", \")};\n              if (self.showAggregate()) {\n                config.title = \"domain & platforms\";\n                config.contents.push(filterData);\n              } else filterConfig.contents.push(filterData);\n            }\n            if (config.contents.length > 0) headerSections.push(config);\n            if (filterConfig.contents.length > 0) headerSections.push(filterConfig);\n\n            if (self.showAggregate()) {\n              const aggregateConfig = { \"title\": \"aggregate\", \"contents\": []};\n              aggregateConfig.contents.push({\"label\": \"function\", \"data\": \"showing aggregate scores using the \" + this.viewModel.layout.aggregateFunction + \" aggregate function\"});\n              if (this.viewModel.layout.countUnscored) aggregateConfig.contents.push({\"label\": \"unscored\", \"data\": \"includes unscored techniques as having a score of 0\"});\n              headerSections.push(aggregateConfig);\n            }\n\n            if (self.showLegendContainer() && self.showLegendInHeader()) headerSections.push(legend);\n\n            let headerGroup = svg.append(\"g\");\n\n            let headerX = d3.scaleBand()\n                .paddingInner(0.05)\n                // .align(0.5)\n                .domain(headerSections.map(function(section: HeaderSection) { return section.title }))\n                .range([0, width]);\n            \n            for (let section of headerSections) {\n                let sectionGroup = headerGroup.append(\"g\");\n                if (headerSections.length > 1) sectionGroup.attr(\"transform\", `translate(${headerX(section.title)}, 0)`);\n                descriptiveBox(sectionGroup, section, headerSections.length == 1? width : headerX.bandwidth(), headerHeight);\n            }\n\n            if (headerSections.length == 0) headerHeight = 0; //no header sections to show\n        } else { //no header\n            headerHeight = 0\n        }\n\n\n\n        // oooo     oooo            o8              o88               \n        //  8888o   888   ooooooo o888oo oo oooooo  oooo  oooo   oooo \n        //  88 888o8 88   ooooo888 888    888    888 888    888o888   \n        //  88  888  88 888    888 888    888        888    o88 88o   \n        // o88o  8  o88o 88ooo88 8o 888o o888o      o888o o88o   o88o \n                                                                   \n\n        let tablebody = svg.append(\"g\")\n            .attr(\"transform\", \"translate(0,\" + (headerHeight + 1) + \")\")\n\n        // build data model\n        let matrices: RenderableMatrix[] = this.dataService.getDomain(this.viewModel.domainID).matrices.map(function(matrix: Matrix) {\n            return new RenderableMatrix(matrix, self.viewModel, self.config);\n        });\n\n        let tactics: RenderableTactic[] = [];\n        //flattened list of tactics\n        for (let matrix of matrices) { tactics = tactics.concat(matrix.tactics); }\n        \n\n        let x = d3.scaleBand()\n            .paddingInner(0.1)\n            .align(0.01)\n            .domain(tactics.map(function(tactic: RenderableTactic) { return tactic.tactic.id; }))\n            .range([0, width])\n\n        let y = d3.scaleLinear()\n            .domain([d3.max(tactics, function(tactic: RenderableTactic) { return tactic.height}), 0])\n            .range([height - (headerHeight), 0])\n            \n        // let subtechniqueIndent = (1/3) * x.bandwidth(); //2/3 of full techinque width\n        // let subtechniqueIndent = 2 * y(1); //2*the height of a cell, to make room for y(1) width sidebar\n        let subtechniqueIndent = Math.min(2 * y(1), 15);     \n        \n        //add tactic row backgroun\n        if (self.viewModel.showTacticRowBackground) {\n            tablebody.append(\"rect\")\n                .attr(\"class\", \"tactic-header-background\")\n                .attr(\"width\", width)\n                .attr(\"height\", y(1))\n                .attr(\"fill\", self.viewModel.tacticRowBackground)\n                .attr(\"stroke\", self.config.tableBorderColor)\n        }\n\n        let tacticGroups = tablebody.append(\"g\").selectAll(\"g\")\n            .data(tactics)\n            .enter().append(\"g\")\n            .attr(\"class\", function(tactic: RenderableTactic) { return \"tactic \" + tactic.tactic.shortname; })\n            .attr(\"transform\", function(tactic: RenderableTactic) {\n                return `translate(${x(tactic.tactic.id)}, 0)`;\n            })\n        // add technique and subtechnique groups\n        let techniqueGroups = tacticGroups.append(\"g\")\n            .attr(\"class\", \"techniques\").selectAll(\"g\")\n            .data(function(tactic: RenderableTactic) { return tactic.techniques})\n            .enter().append(\"g\")\n            .attr(\"class\", function(technique: RenderableTechnique) { return \"technique \" + technique.technique.attackID; })\n            .attr(\"transform\", function(technique: RenderableTechnique) {\n                return `translate(0, ${y(technique.yPosition)})`\n            });\n        let subtechniqueGroups = tacticGroups.append(\"g\")\n            .attr(\"class\", \"subtechniques\").selectAll(\"g\")\n            .data(function(tactic: RenderableTactic) { return tactic.subtechniques})\n            .enter().append(\"g\")\n            .attr(\"class\", function(subtechnique: RenderableTechnique) { return \"subtechnique \" + subtechnique.technique.attackID; })\n            .attr(\"transform\", function(subtechnique: RenderableTechnique) {\n                return `translate(${subtechniqueIndent}, ${y(subtechnique.yPosition)})`\n            });\n        // add cells to techniques and subtechniques\n        let techniqueRects = techniqueGroups.append(\"rect\")\n            .attr(\"class\", \"cell\")\n            .attr(\"height\", y(1))\n            .attr(\"width\", x.bandwidth())\n            .attr(\"fill\", function(technique: RenderableTechnique) { return technique.fill })\n            .attr(\"stroke\", self.config.tableBorderColor);\n        let subtechniqueRects = subtechniqueGroups.append(\"rect\")\n            .attr(\"class\", \"cell\")\n            .attr(\"height\", y(1))\n            .attr(\"width\", x.bandwidth() - subtechniqueIndent)\n            .attr(\"fill\", function(subtechnique: RenderableTechnique) { return subtechnique.fill })\n            .attr(\"stroke\", self.config.tableBorderColor);\n        // add sidebar\n        // let sidebarWidth = y(1);\n        let sidebarWidth = 3;\n\n        let sidebar = subtechniqueGroups.append(\"rect\")\n            .attr(\"class\", \"cell\")\n            .attr(\"height\", y(1))\n            .attr(\"width\", sidebarWidth)\n            .attr(\"transform\",  `translate(${-sidebarWidth}, 0)`)\n            .attr(\"fill\", self.config.tableBorderColor)\n            .attr(\"stroke\", self.config.tableBorderColor);\n        let sidebarAngle = techniqueGroups.append(\"polygon\")\n            .attr(\"class\", \"sidebar\")\n            .attr(\"transform\", `translate(0, ${y(1)})`)\n            .attr(\"points\", function(technique: RenderableTechnique) {\n                return [\n                    \"0,0\",\n                    `${subtechniqueIndent - sidebarWidth},0`,\n                    `${subtechniqueIndent - sidebarWidth},${Math.min(subtechniqueIndent - sidebarWidth, y(self.viewModel.filterTechniques(technique.technique.subtechniques, technique.tactic, technique.matrix).length))}`\n                ].join(\" \");\n            })\n            .attr(\"fill\", self.config.tableBorderColor)\n            .attr(\"visibility\", function(technique: RenderableTechnique) { return technique.technique.subtechniques.length > 0 && technique.showSubtechniques ? \"visible\" : \"hidden\"});\n\n        //   oooooooo8             o888  o888       ooooooooooo                          o8   \n        // o888     88  ooooooooo8  888   888       88  888  88 ooooooooo8 oooo   oooo o888oo \n        // 888         888oooooo8   888   888           888    888oooooo8    888o888    888   \n        // 888o     oo 888          888   888           888    888           o88 88o    888   \n        //  888oooo88    88oooo888 o888o o888o         o888o     88oooo888 o88o   o88o   888o \n                                                                                           \n        \n\n        techniqueGroups.append(\"text\")\n            .text(function(technique: RenderableTechnique) { \n                return technique.text;\n            })\n            .attr(\"font-size\", function(technique: RenderableTechnique) {\n                return optimalFontSize(technique.text, this, x.bandwidth(), y(1), false);\n            })\n            // .attr(\"dominant-baseline\", \"middle\")\n            .each(function() { centerValign(this); })\n            .attr(\"fill\", function(technique: RenderableTechnique) { return technique.textColor; })\n\n        subtechniqueGroups.append(\"text\")\n            .text(function(subtechnique: RenderableTechnique) { \n                return subtechnique.text;\n            })\n            .attr(\"font-size\", function(subtechnique: RenderableTechnique) {\n                return optimalFontSize(subtechnique.text, this, x.bandwidth() - subtechniqueIndent, y(1), false);\n            })\n            // .attr(\"dominant-baseline\", \"middle\")\n            .attr(\"fill\", function(subtechnique: RenderableTechnique) { return subtechnique.textColor; })\n            .each(function() { centerValign(this); })\n    \n        let tacticLabels = tacticGroups.append(\"g\")\n            .attr(\"class\", \"tactic-label\");\n        tacticLabels.append(\"text\")\n            .text(function(tactic: RenderableTactic) {\n                return tactic.tactic.name;\n            })\n            .attr(\"font-size\", function(tactic: RenderableTactic) {\n                return optimalFontSize(tactic.tactic.name, this, x.bandwidth(), y(1), true);\n            })\n            // .attr(\"dominant-baseline\", \"middle\")\n            .attr(\"fill\", function(tactic: RenderableTactic) {\n                if (self.viewModel.showTacticRowBackground) return tinycolor.mostReadable(self.viewModel.tacticRowBackground, [\"white\", \"black\"]); \n                else return \"black\";\n            })\n            .attr(\"font-weight\", \"bold\")\n            .each(function() { centerValign(this); })\n\n        //ooooo  oooo                  oooo                       oooo                         oooo      ooooo                                                            oooo \n        // 888    88 oo oooooo    ooooo888   ooooooo     ooooooo   888  ooooo ooooooooo8  ooooo888        888         ooooooooo8   oooooooo8 ooooooooo8 oo oooooo    ooooo888  \n        // 888    88  888   888 888    888 888     888 888     888 888o888   888oooooo8 888    888        888        888oooooo8  888    88o 888oooooo8   888   888 888    888  \n        // 888    88  888   888 888    888 888     888 888         8888 88o  888        888    888        888      o 888          888oo888o 888          888   888 888    888  \n        // 888oo88  o888o o888o  88ooo888o  88ooo88     88ooo888 o888o o888o  88oooo888  88ooo888o      o888ooooo88   88oooo888 888     888  88oooo888 o888o o888o  88ooo888o \n        //                                                                                                                         888ooo888                                    \n\n\n        if (self.showLegendContainer() && !self.showLegendInHeader()) {\n            let legendGroup = tablebody.append(\"g\")\n                .attr(\"transform\", `translate(${legendX}, ${legendY})`)\n            descriptiveBox(legendGroup, legend, legendWidth, legendHeight);\n        }\n    }\n\n    downloadSVG() {\n        let svgEl = document.getElementById(\"svg\" + this.viewModel.uid);\n        svgEl.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n        let svgData = new XMLSerializer().serializeToString(svgEl);\n        // // var svgData = svgEl.outerHTML;\n        // console.log(svgData)\n        // let svgData2 = new XMLSerializer().serializeToString(svgEl);\n        // console.log(svgData2)\n        let filename = this.viewModel.name.split(' ').join('_');\n        filename = filename.replace(/\\W/g, \"\")  + \".svg\"; // remove all non alphanumeric characters\n        var preface = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n';\n        var svgBlob = new Blob([preface, svgData], {type:\"image/svg+xml;charset=utf-8\"});\n        if (is.ie()) { //internet explorer\n            window.navigator.msSaveBlob(svgBlob, filename)\n        } else {\n            var svgUrl = URL.createObjectURL(svgBlob);\n            var downloadLink = document.createElement(\"a\");\n            downloadLink.href = svgUrl;\n            downloadLink.download = filename\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n        }\n    }\n\n    /**\n     * Convert any length in various units to pixels\n     * @param  quantity what length\n     * @param  unit     which unit system (in, cm, px?)\n     * @return          that length in pixels\n     */\n    convertToPx(quantity: number, unit: string): number {\n        let factor;\n\n        switch(unit) {\n            case \"in\": {\n                factor = 96\n                break\n            }\n            case \"cm\": {\n                factor = 3.779375 * 10;\n                break;\n            }\n            case \"px\": {\n                factor = 1;\n                break;\n            }\n            case \"em\": {\n                factor = 16;\n                break;\n            }\n            case \"pt\": {\n                factor = 1.33;\n            }\n            default: {\n                console.error(\"unknown unit\", unit)\n                factor = 0;\n            }\n        }\n\n        return quantity * factor;\n    }\n\n    // wrap(text, width, padding) {\n    //     var self = d3.select(this),\n    //     textLength = self.node().getComputedTextLength(),\n    //     text = self.text();\n    //     while (textLength > (width - 2 * padding) && text.length > 0) {\n    //         text = text.slice(0, -1);\n    //         self.text(text + '...');\n    //         textLength = self.node().getComputedTextLength();\n    //     }\n    // }\n\n    /**\n     * wrap the given text svg element\n     * @param  text       element to wrap\n     * @param  width      width to wrap to\n     * @param  cellheight stop appending wraps after this height\n     * @param  self       reference to self this component because of call context\n     */\n    wrap(text, width, cellheight, self): void {\n        text.each(function() {\n            var text = d3.select(this),\n            words = text.text().split(/\\s+/).reverse(),\n            word,\n            line = [],\n            lineHeight = 1.1, // ems\n            y = text.attr(\"y\"),\n            dy = parseFloat(text.attr(\"dy\")),\n            tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n            while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                    line.pop();\n                    tspan.text(line.join(\" \"));\n                    line = [word];\n                    let thisdy = lineHeight + dy\n                    // if (self.convertToPx(thisdy, \"em\") > cellheight) return;\n                    tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", thisdy + \"em\").text(word);\n                }\n            }\n        });\n    }\n\n    /**\n     * Recenter the selected element's tspan elements\n     * @param  height [description]\n     * @param  self   [description]\n     */\n    recenter(text, height, self): void {\n        text.each(function() {\n            text.selectAll('tspan').each(function(d, i, els) {\n                let numTSpan = els.length;\n                let location = self.getSpacing(height, numTSpan)[i]\n\n                let tspan = d3.select(this)\n                    .attr(\"y\", ( location))\n                    .attr(\"dy\", \"0\")\n            })\n        })\n    }\n\n    // Capitalizes the first letter of each word in a string\n    toCamelCase(str){\n        return str.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});\n    }\n\n    //following two functions are only used for iterating over tableconfig options: remove when tableconfig options are hardcoded in html\n    getKeys(obj) { return Object.keys(obj) }\n    type(obj) { return typeof(obj) }\n\n    /**\n     * Return whether the given dropdown element would overflow the side of the page if aligned to the right of its anchor\n     * @param  dropdown the DOM node of the panel\n     * @return          true if it would overflow\n     */\n    checkalign(dropdown): boolean {\n        // console.log(anchor)\n        let anchor = dropdown.parentNode;\n        return anchor.getBoundingClientRect().left + dropdown.getBoundingClientRect().width > document.body.clientWidth;\n    }\n\n    /**\n     * Divide distance into divisions equidestant anchor points S.T they all have equal\n     * padding from each other and the beginning and end of the distance\n     * @param  distance  distance to divide\n     * @param  divisions number of divisions\n     * @return           number[] where each number corresponds to a division-center offset\n     */\n    getSpacing(distance: number, divisions: number): number[] {\n        distance = distance - 1; //1px padding for border\n        let spacing = distance/(divisions*2);\n        let res = []\n        for (let i = 1; i <= divisions*2; i+=2) {\n            res.push(1 + (spacing * i))\n        }\n        return res\n    }\n}\n\n\n\nclass RenderableMatrix {\n    public readonly matrix: Matrix;\n    public readonly tactics: RenderableTactic[] = [];\n    public get height() {\n        let heights = this.tactics.map(function(tactic: RenderableTactic) { return tactic.height; })\n        return Math.max(...heights);\n    }\n    constructor(matrix: Matrix, viewModel: ViewModel, renderConfig: any) {\n        this.matrix = matrix;\n        let filteredTactics = viewModel.filterTactics(matrix.tactics, matrix);\n        for (let tactic of filteredTactics) {\n            this.tactics.push(new RenderableTactic(tactic, matrix, viewModel, renderConfig));\n        }\n    }\n}\n\nclass RenderableTactic {\n    public readonly tactic: Tactic;\n    public readonly techniques: RenderableTechnique[] = [];\n    public readonly subtechniques: RenderableTechnique[] = [];\n    public readonly height: number;\n    constructor(tactic: Tactic, matrix: Matrix, viewModel: ViewModel, renderConfig: any) {\n        this.tactic = tactic;\n        let filteredTechniques = viewModel.sortTechniques(viewModel.filterTechniques(tactic.techniques, tactic, matrix), tactic);\n        let yPosition = 1; //start at 1 to make space for tactic label\n        for (let technique of filteredTechniques) {\n            let techniqueVM = viewModel.getTechniqueVM(technique, tactic);\n            let filteredSubtechniques = viewModel.filterTechniques(technique.subtechniques, tactic, matrix);\n            \n            let showSubtechniques = renderConfig.showSubtechniques == \"all\" || (renderConfig.showSubtechniques == \"expanded\" && techniqueVM.showSubtechniques)\n\n            this.techniques.push(new RenderableTechnique(yPosition++, technique, tactic, matrix, viewModel, showSubtechniques));\n\n            \n            if (filteredSubtechniques.length > 0 && showSubtechniques) {\n                for (let subtechnique of filteredSubtechniques) {\n                    this.subtechniques.push(new RenderableTechnique(yPosition++, subtechnique, tactic, matrix, viewModel, renderConfig));\n                }\n            }\n        }\n        this.height = yPosition;\n    }\n}\n\nclass RenderableTechnique {\n    public readonly yPosition: number;\n    public readonly technique: Technique;\n    public readonly tactic: Tactic;\n    public readonly matrix: Matrix;\n    public readonly showSubtechniques;\n    private readonly viewModel: ViewModel;\n    constructor(yPosition, technique: Technique, tactic: Tactic, matrix: Matrix, viewModel: ViewModel, showSubtechniques=false) {\n        this.yPosition = yPosition;\n        this.technique = technique;\n        this.tactic = tactic;\n        this.matrix = matrix;\n        this.viewModel = viewModel;\n        this.showSubtechniques = showSubtechniques;\n    }\n\n    public get fill() {\n        if (this.viewModel.hasTechniqueVM(this.technique, this.tactic)) {\n            let techniqueVM: TechniqueVM = this.viewModel.getTechniqueVM(this.technique, this.tactic);\n            if (!techniqueVM.enabled) return \"white\";\n            if (techniqueVM.color) return techniqueVM.color;\n            if (this.viewModel.layout.showAggregateScores && techniqueVM.aggregateScoreColor) return techniqueVM.aggregateScoreColor;\n            if (techniqueVM.score) return techniqueVM.scoreColor;\n        } \n        return \"white\"; //default\n    }\n\n    public get textColor() {\n        if (this.viewModel.hasTechniqueVM(this.technique, this.tactic)) {\n            let techniqueVM: TechniqueVM = this.viewModel.getTechniqueVM(this.technique, this.tactic);\n            if (!techniqueVM.enabled) return \"#aaaaaa\";\n        }\n        return tinycolor.mostReadable(this.fill, [\"white\", \"black\"]); //default;\n    }\n\n    public get text() {\n        let text = [];\n        if (this.viewModel.layout.showID) text.push(this.technique.attackID);\n        if (this.viewModel.layout.showName) text.push(this.technique.name);\n        return text.join(\": \")\n    }\n}\n\n","<div class=\"controlsContainer\">\n    <ul class=\"control-sections\">\n        <li class=\"iewarning\" *ngIf=\"isIE()\">\n            Warning: this interface is not fully compatable with your browser. For best results please switch to Edge, Chrome, or Firefox.\n        </li>\n        <li>\n            <div class=\"control-row-item noselect\">\n                <!-- {{config.unit}} -->\n                <div class=\"control-row-button\"\n                     (click)=\"unitEnum = (unitEnum + 1) % 3; config.unit = ['in', 'cm', 'px'][unitEnum]; buildSVG()\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"toggle measurement unit\">\n                    <svg fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <text x=\"4px\" y=\"50%\" dominant-baseline=\"middle\" style=\"font-size: 14px; font-weight: bold; font-family:monospace\">{{config.unit}}</text>\n                    </svg>\n                </div>\n            </div>\n\n        </li>\n        <li>\n            <div class=\"control-row-item\">\n                <div class=\"control-row-button dropdown noselect\"\n                     (click)=\"currentDropdown = currentDropdown !== 'imgsize' ? 'imgsize' : null;\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"image size\">\n                    <img src=\"assets/icons/ic_photo_size_select_large_black_24px.svg\"/>\n                </div>\n                <div class=\"dropdown-container size left\" *ngIf=\"currentDropdown === 'imgsize'\">\n                    <ul>\n                        <li>\n                            <mat-form-field>\n                                <input matInput\n                                       class=\"has-suffix\"\n                                       type=\"number\"\n                                       placeholder=\"width\"\n                                       step=\"0.01\"\n                                       [(ngModel)]=\"config.width\"\n                                       (input)=\"buildSVG()\" />\n                                <span matSuffix>{{config.unit}}</span>\n                            </mat-form-field>\n                        </li>\n                        <li>\n                            <mat-form-field>\n                                <input matInput\n                                       class=\"has-suffix\"\n                                       type=\"number\"\n                                       placeholder=\"height\"\n                                       step=\"0.01\"\n                                       [(ngModel)]=\"config.height\"\n                                       (input)=\"buildSVG()\" />\n                                <span matSuffix>{{config.unit}}</span>\n                            </mat-form-field>\n                        </li>\n                        <li>\n                            <mat-form-field>\n                                <input matInput\n                                       class=\"has-suffix\"\n                                       type=\"number\"\n                                       placeholder=\"header height\"\n                                       step=\"0.01\"\n                                       [disabled]=\"!config.showHeader\"\n                                       [(ngModel)]=\"config.headerHeight\"\n                                       (input)=\"buildSVG()\" />\n                                <span matSuffix  [style.color]=\"!config.showHeader ? 'rgba(0,0,0,0.42)' : 'black'\">{{config.unit}}</span>\n                            </mat-form-field>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <div class=\"control-row-item\">\n                <div class=\"control-row-button dropdown noselect\"\n                     (click)=\"currentDropdown = currentDropdown !== 'font' ? 'font' : null;\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"text\">\n                    <img src=\"assets/icons/ic_format_size_black_24px.svg\"/>\n                </div>\n                <div class=\"dropdown-container font left\" *ngIf=\"currentDropdown === 'font'\">\n                    <ul>\n                        <li>\n                            <mat-form-field>\n                                <mat-select placeholder=\"font\" [(ngModel)]=\"config.font\" (selectionChange)=\"buildSVG()\">\n                                    <mat-option value=\"serif\">serif</mat-option>\n                                    <mat-option value=\"sans-serif\">sans-serif</mat-option>\n                                    <mat-option value=\"monospace\">monospace</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"control-row-item\">\n                <div class=\"control-row-button dropdown noselect\"\n                     (click)=\"showLegendContainer()? currentDropdown = currentDropdown !== 'legend' ? 'legend' : null : null;\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"legend\"\n                     [style.color]=\"showLegendContainer() ? '#000000' : '#aaaaaa'\">\n                    <img [src]=\"showLegendContainer()? 'assets/icons/ic_view_list_black_24px.svg' : 'assets/icons/ic_view_list_grey_24px.svg'\"/>\n                </div>\n                <div class=\"dropdown-container legend left\" *ngIf=\"currentDropdown === 'legend'\">\n                    <ul>\n                        <li>\n                            <input [id]=\"uid + 'legendDockedCheckbox'\"type=\"checkbox\" class=\"checkbox-custom\" [(ngModel)]=\"config.legendDocked\" (change)=\"buildSVG()\">\n                            <label [for]=\"uid + 'legendDockedCheckbox'\" class=\"checkbox-custom-label noselect\">\n                                dock legend in header\n                            </label>\n                        </li>\n                        <li>\n                            <mat-form-field>\n                                <input matInput\n                                       class=\"has-suffix\"\n                                       type=\"number\"\n                                       placeholder=\"legend X position\"\n                                       [disabled]=\"config.legendDocked\"\n                                       step=\"1\"\n                                       [(ngModel)]=\"config.legendX\"\n                                       (input)=\"buildSVG()\" />\n                                <span [style.color]=\"config.legendDocked ? 'rgba(0,0,0,0.42)' : 'black'\" matSuffix>{{config.unit}}</span>\n                            </mat-form-field>\n                        </li>\n                        <li>\n                            <mat-form-field>\n                                <input matInput\n                                       class=\"has-suffix\"\n                                       type=\"number\"\n                                       placeholder=\"legend Y position\"\n                                       [disabled]=\"config.legendDocked\"\n                                       step=\"1\"\n                                       [(ngModel)]=\"config.legendY\"\n                                       (input)=\"buildSVG()\" />\n                                <span [style.color]=\"config.legendDocked ? 'rgba(0,0,0,0.42)' : 'black'\" matSuffix>{{config.unit}}</span>\n                            </mat-form-field>\n                        </li>\n                        <li>\n                            <mat-form-field>\n                                <input matInput\n                                       class=\"has-suffix\"\n                                       type=\"number\"\n                                       placeholder=\"legend width\"\n                                       [disabled]=\"config.legendDocked\"\n                                       step=\"1\"\n                                       [(ngModel)]=\"config.legendWidth\"\n                                       (input)=\"buildSVG()\" />\n                                <span [style.color]=\"config.legendDocked ? 'rgba(0,0,0,0.42)' : 'black'\" matSuffix>{{config.unit}}</span>\n                            </mat-form-field>\n                        </li>\n                        <li>\n                            <mat-form-field>\n                                <input matInput\n                                       class=\"has-suffix\"\n                                       type=\"number\"\n                                       placeholder=\"legend height\"\n                                       [disabled]=\"config.legendDocked\"\n                                       step=\"1\"\n                                       [(ngModel)]=\"config.legendHeight\"\n                                       (input)=\"buildSVG()\" />\n                                <span [style.color]=\"config.legendDocked ? 'rgba(0,0,0,0.42)' : 'black'\" matSuffix>{{config.unit}}</span>\n                            </mat-form-field>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"control-row-item\">\n                <div class=\"control-row-button dropdown noselect\"\n                     (click)=\"currentDropdown = currentDropdown !== 'visibility' ? 'visibility' : null;\"\n                     matTooltipPosition=\"below\"\n                     matTooltip=\"display settings\">\n                    <img src=\"assets/icons/ic_visibility_black_24px.svg\"/>\n                </div>\n                <div class=\"dropdown-container visibility left\" *ngIf=\"currentDropdown === 'visibility'\">\n                    <ul>\n                        <li>\n                            <input [id]=\"uid+'checkboxheader'\" type=\"checkbox\" class=\"checkbox-custom\" [(ngModel)]=\"config.showHeader\" (change)=\"buildSVG()\">\n                            <label [for]=\"uid+'checkboxheader'\" class=\"checkbox-custom-label noselect\">show header</label>\n                        </li>\n                        <li>\n                            <input [id]=\"uid+'checkboxAbout'\" type=\"checkbox\" [disabled]=\"(!hasName() && !hasDescription()) || !config.showHeader\" class=\"checkbox-custom\" [(ngModel)]=\"config.showAbout\" (change)=\"buildSVG()\">\n                            <label [for]=\"uid+'checkboxAbout'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"(!hasName() && !hasDescription()) || !config.showHeader\">show about</label>\n                        </li>\n                        <li>\n                            <input [id]=\"uid+'checkboxDomain'\" type=\"checkbox\" [disabled]=\"(!hasDomain()) || !config.showHeader\" class=\"checkbox-custom\" [(ngModel)]=\"config.showDomain\" (change)=\"buildSVG()\">\n                            <label [for]=\"uid+'checkboxDomain'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"(!hasDomain()) || !config.showHeader\">show domain</label>\n                        </li>\n                        <li>\n                            <input [id]=\"uid+'checkboxfilters'\" type=\"checkbox\" class=\"checkbox-custom\" [disabled]=\"!config.showHeader\"[(ngModel)]=\"config.showFilters\" (change)=\"buildSVG()\">\n                            <label [for]=\"uid+'checkboxfilters'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"!config.showHeader\">show filters</label>\n                        </li>\n                        <li>\n                            <input [id]=\"uid+'checkboxlegend'\" type=\"checkbox\" [disabled]=\"!hasLegendItems()\" class=\"checkbox-custom\" [(ngModel)]=\"config.showLegend\" (change)=\"buildSVG()\">\n                            <label [for]=\"uid+'checkboxlegend'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"!hasLegendItems()\">show legend</label>\n                        </li>\n                        <li>\n                            <input [id]=\"uid+'checkboxGradient'\" type=\"checkbox\" [disabled]=\"!hasScores\" class=\"checkbox-custom\" [(ngModel)]=\"config.showGradient\" (change)=\"buildSVG()\">\n                            <label [for]=\"uid+'checkboxGradient'\" class=\"checkbox-custom-label noselect\" [class.disabled]=\"!hasScores\">show gradient score</label>\n                        </li>\n                        <li *ngIf=\"configService.getFeature('subtechniques')\" style=\"padding: 0 5px\">\n                            <mat-form-field>\n                                <mat-select placeholder=\"sub-techniques\" [(ngModel)]=\"config.showSubtechniques\" (selectionChange)=\"buildSVG()\">\n                                    <mat-option value=\"all\">show all</mat-option>\n                                    <mat-option value=\"expanded\">show expanded</mat-option>\n                                    <mat-option value=\"none\">show none</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </li>\n                        <!-- <li>\n                            <input [id]=\"uid+'checkboxtcount'\" type=\"checkbox\" class=\"checkbox-custom\" [(ngModel)]=\"config.showTechniqueCount\" (change)=\"buildSVG()\">\n                            <label [for]=\"uid+'checkboxtcount'\" class=\"checkbox-custom-label noselect\">show technique count</label>\n                        </li> -->\n                        <li>\n                            <input [id]=\"uid+'tableBorderInput'\" class=\"colorpicker\" [(colorPicker)]=\"config.tableBorderColor\" [style.background]=\"config.tableBorderColor\" cpPosition=\"bottom\" [cpPresetColors]=\"['#6B7279', '#aaaaaa', '#205B8F', '#B9482D', '#ffffff', '#000000']\"\n                             (colorPickerSelect)=\"buildSVG()\" [cpOKButton]=\"true\" [cpOKButtonText]=\"'apply'\" [cpCancelButton]=\"true\" style=\"width: 14px; margin: 5px 0 0 5px;\">\n                             <label [for]=\"uid+'tableBorderInput'\" class=\"noselect\">cell border</label>\n\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </li>\n        <li>\n            <div class=\"control-row-item\">\n                <div class=\"control-row-button noselect\"\n                [id]=\"'download-button' + viewModel.uid\"\n                    (click)=\"downloadSVG()\"\n                    matTooltipPosition=\"below\"\n                    matTooltip=\"download SVG\">\n                    <img src=\"assets/icons/ic_file_download_black_24px.svg\" alt=\"save layer\"/>\n                </div>\n            </div>\n\n        </li>\n    </ul>\n</div>\n\n<div class=\"svgcontainer\" [id]=\"'svgInsert' + viewModel.uid\">\n    loading...\n</div>\n\n<div class=\"close-button\">\n    <button mat-button mat-dialog-close>close</button>\n</div>","import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\nimport { ViewModel } from '../viewmodels.service';\nimport { BaseStix, DataService, Group, Mitigation, Software, Technique } from '../data.service';\n\n@Component({\n  selector: 'app-search-and-multiselect',\n  templateUrl: './search-and-multiselect.component.html',\n  styleUrls: ['./search-and-multiselect.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\n\nexport class SearchAndMultiselectComponent implements OnInit {\n    @Input() viewModel: ViewModel;\n    public stixTypes: any[];\n\n    public fields = [\n        {\n            \"label\": \"name\",\n            \"field\": \"name\",\n            \"enabled\": true\n        },\n        {\n            \"label\": \"ATT&CK ID\",\n            \"field\": \"attackID\",\n            \"enabled\": true\n        },\n        // {\n        //     \"label\": \"STIX ID\",\n        //     \"field\": \"id\",\n        //     \"enabled\": false\n        // },\n        {\n            \"label\": \"description\",\n            \"field\": \"description\",\n            \"enabled\": true\n        },\n        {\n            \"label\": \"data sources\",\n            \"field\": \"datasources\",\n            \"enabled\": true\n        }\n    ]\n\n    private debounceFunction;\n    private previousQuery: string = \"\";\n    private _query: string = \"\";\n    public set query(newQuery: string) {\n        this._query = newQuery;\n        if (!this.debounceFunction) {\n            this.debounceFunction = setTimeout(() => {\n                this.getResults(this._query);\n                this.debounceFunction = null;\n                this.previousQuery = this._query;\n                }, 300);\n        }\n    }\n\n    public get queryLength(): number {\n        return this._query.length;\n    }\n\n    public techniqueResults: Technique[] = [];\n\n    constructor(private dataService: DataService) {\n        this.stixTypes = [];\n    }\n\n    ngOnInit() {\n        this.getResults();\n    }\n\n    /**\n     * filterAndSort() takes an array of items and does the following:\n     *       1) if the query is empty, then it sorts the array\n     *       2) if the query is not empty, then it filters the already sorted array until nothing is left, or until\n     *          the query is cleared out and empty again\n     * @param items BaseStix[] or Technique[] objects to be filtered and sorted\n     * @param query user-input query in search bar\n     * @param sortTechniquesAndSubtechniques will be true if called from getTechniqueResults(),\n     *                                       to sort techniques and all its subtechniques,\n     *                                       otherwise just sort BaseStix items by name\n     */\n    filterAndSort(items: BaseStix[], query = \"\", sortTechniquesAndSubtechniques = false): any[] {\n        let self = this;\n        let results = items;\n        if (query.trim() === \"\") {\n            if (sortTechniquesAndSubtechniques) {\n                results.sort((tA: Technique, tB: Technique) => {\n                    let c1 = tA.isSubtechnique ? tA.parent.name : tA.name;\n                    let c2 = tB.isSubtechnique ? tB.parent.name : tB.name;\n                    return c1.localeCompare(c2)\n                });\n            } else {\n                results.sort((a, b) => a.name.toLowerCase().localeCompare(b.name.toLowerCase()));\n            }\n        } else {\n            // deconflict IDs for cross-tactic techniques\n            let seenIDs = new Set();\n            results = results.filter(function (technique: Technique) {\n                if (seenIDs.has(technique.id)) return false;\n                for (let field of self.fields) {\n                    if (field.enabled) {\n                        // query in this field\n                        if (technique[field.field]?.toLowerCase().includes(query.trim().toLowerCase())) {\n                            seenIDs.add(technique.id);\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            });\n        }\n        return results;\n    }\n\n    // getResults() checks if this._query is:\n    // 1) valid, and\n    // 2) part of last query, otherwise call getTechniques() and getStixData() to search all objects again\n    getResults(query = \"\", fieldToggled = false) {\n        if (query.trim() != \"\" && query.includes(this.previousQuery) && !fieldToggled) {\n            this.techniqueResults = this.filterAndSort(this.techniqueResults, query, true);\n            this.stixTypes.forEach(item => item['objects'] = this.filterAndSort(item['objects'], query));\n        } else {\n            this.getTechniques();\n            this.getStixData();\n        }\n    }\n\n    getTechniques() {\n        //get master list of techniques and sub-techniques\n        let allTechniques = this.dataService.getDomain(this.viewModel.domainID).techniques;\n        for (let technique of allTechniques) {\n            allTechniques = allTechniques.concat(technique.subtechniques);\n        }\n        this.techniqueResults = this.filterAndSort(allTechniques, this._query, true);\n    }\n\n    getStixData() {\n        let domain = this.dataService.getDomain(this.viewModel.domainID);\n\n        this.stixTypes = [{\n            \"label\": \"threat groups\",\n            \"objects\": this.filterAndSort(domain.groups, this._query)\n        }, {\n            \"label\": \"software\",\n            \"objects\": this.filterAndSort(domain.software, this._query)\n        }, {\n            \"label\": \"mitigations\",\n            \"objects\": this.filterAndSort(domain.mitigations, this._query)\n        }]\n    }\n\n    public toggleFieldEnabled(field: string) {\n        for (let thefield of this.fields) {\n            if (thefield.field == field) {\n                thefield.enabled = !thefield.enabled;\n                // set query to empty string to trigger getResults() in the case that:\n                // 1) a field was toggled, and\n                // 2) the query did not change\n                this.getResults(\"\", true);\n                break;\n            }\n        }\n    }\n\n    public mouseEnter(technique: Technique, isTechnique = true): void {\n        if (!isTechnique) {\n            for (let t of this.getRelated(technique)) {\n                this.viewModel.selectTechniqueAcrossTactics(t, true, true);\n            }\n        } else {\n            this.viewModel.highlightTechnique(technique);\n        }\n    }\n\n    public mouseLeave(): void {\n        this.viewModel.clearHighlight();\n    }\n\n    public select(stixObject: any, isTechnique= true): void {\n        if (isTechnique) {\n            this.viewModel.selectTechniqueAcrossTactics(stixObject);\n        }\n        else if (!isTechnique) {\n            for (let technique of this.getRelated(stixObject)) {\n                this.viewModel.selectTechniqueAcrossTactics(technique);\n            }\n        }\n    }\n\n    public deselect(stixObject: any, isTechnique = true): void {\n        if (isTechnique) {\n            this.viewModel.unselectTechniqueAcrossTactics(stixObject);\n        }\n        else if (!isTechnique) {\n            for (let technique of this.getRelated(stixObject)) {\n                this.viewModel.unselectTechniqueAcrossTactics(technique);\n            }\n        }\n    }\n\n    public selectAll(items: any[], isTechniqueArray = true): void {\n        if (isTechniqueArray) {\n            for (let result of items) this.select(result, isTechniqueArray);\n        }\n        else if (!isTechniqueArray) {\n            for (let stixObject of items) this.select(stixObject, isTechniqueArray);\n        }\n    }\n\n    public deselectAll(items: any[], isTechniqueArray = true): void {\n        if (isTechniqueArray) {\n            for (let result of items) this.deselect(result, isTechniqueArray);\n        }\n        else if (!isTechniqueArray) {\n            for (let stixObject of items) this.deselect(stixObject, isTechniqueArray);\n        }\n    }\n\n    public getRelated(stixObject: BaseStix): Technique[] {\n        // master list of all techniques and sub-techniques\n        let techniques = this.dataService.getDomain(this.viewModel.domainID).techniques;\n        let allTechniques = techniques.concat(this.dataService.getDomain(this.viewModel.domainID).subtechniques);\n        let domainID = this.viewModel.domainID;\n\n        if (stixObject instanceof Group) {\n            return allTechniques.filter((technique: Technique) => (stixObject as Group).relatedTechniques(domainID).includes(technique.id));\n        } else if (stixObject instanceof Software) {\n            return allTechniques.filter((technique: Technique) => (stixObject as Software).relatedTechniques(domainID).includes(technique.id));\n        } else if (stixObject instanceof Mitigation) {\n            return allTechniques.filter((technique: Technique) => (stixObject as Mitigation).relatedTechniques(domainID).includes(technique.id));\n        }\n    }\n}\n","<div class=\"search-and-multiselect\">\n    <mat-form-field appearance=\"outline\">\n        <mat-label>Search</mat-label>\n        <span matPrefix><img src=\"assets/icons/ic_search_black_24px.svg\"></span>\n        <input matInput [(ngModel)]=\"query\" placeholder=\"Search\">\n    </mat-form-field>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"sidebar-content\">\n        <mat-card>\n            <div class=\"settings\">\n                <mat-card-title><h4 class=\"title\">Search Settings</h4></mat-card-title>\n                <mat-card-content>\n                    <div class=\"fields\">\n                        <div class=\"field\" *ngFor=\"let field of fields\">\n                            <input [id]=\"field.field\" class=\"checkbox-custom\" type=\"checkbox\"\n                                   (click)=\"toggleFieldEnabled(field.field)\" [checked]=\"field.enabled\">\n                            <label [for]=\"field.field\" class=\"checkbox-custom-label noselect\">{{field.label}}</label>\n                        </div>\n                    </div>\n                </mat-card-content>\n            </div>\n        </mat-card>\n    </div>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"sidebar-content\">\n        <mat-accordion multi>\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <h4>Techniques ({{techniqueResults.length}})</h4>\n                </mat-panel-title>\n                <mat-panel-description>\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n\n            <div>\n                <div class=\"allresults-buttons\">\n                    <button class=\"button\" (click)=\"selectAll(techniqueResults)\">select all</button>\n                    <button class=\"button\" (click)=\"deselectAll(techniqueResults)\">deselect all</button>\n                </div>\n                <div class=\"results\">\n                    <table class=\"results\" *ngIf=\"techniqueResults.length > 0; else noTechniquesResults\">\n                        <tr *ngFor=\"let result of techniqueResults\">\n                            <td (mouseenter)=\"mouseEnter(result)\" (mouseleave)=\"mouseLeave()\">\n                                <span *ngIf=\"result.isSubtechnique\">{{result.parent.name}}: </span>{{result.name}}\n                            </td>\n                            <td><a href=\"{{result.url}}\" target=\"_blank\">view</a></td>\n                            <td>\n                                <button class=\"button\" (click)=\"select(result)\">select</button>\n                            </td>\n                            <td>\n                                <button class=\"button\" (click)=\"deselect(result)\">deselect</button>\n                            </td>\n                        </tr>\n                    </table>\n                    <ng-template #noTechniquesResults><div class=\"no-results\">no results for techniques</div></ng-template>\n                </div>\n            </div>\n        </mat-expansion-panel>\n\n        <mat-expansion-panel *ngFor=\"let stixType of stixTypes\" class=\"stixType\">\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    <h4>\n                        {{stixType.label | titlecase }} ({{stixType.objects.length}})\n                    </h4>\n                </mat-panel-title>\n                <mat-panel-description>\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <div class=\"allresults-buttons\">\n                <button class=\"button\" (click)=\"selectAll(stixType.objects, false)\">select all</button>\n                <button class=\"button\" (click)=\"deselectAll(stixType.objects, false)\">deselect all</button>\n            </div>\n            <div class=\"results objects\">\n                <table *ngIf=\"stixType.objects.length > 0; else noResults\">\n                    <tr *ngFor=\"let stixObject of stixType.objects\">\n                        <td (mouseenter)=\"mouseEnter(stixObject, false)\"\n                            (mouseleave)=\"mouseLeave()\">\n                            {{stixObject.name}}\n                        </td>\n                        <td><a href=\"{{stixObject.url}}\" target=\"_blank\">view</a></td>\n                        <td>\n                            <button class=\"button\" (click)=\"select(stixObject, false)\">select</button>\n                        </td>\n                        <td>\n                            <button class=\"button\" (click)=\"deselect(stixObject, false)\">deselect</button>\n                        </td>\n                    </tr>\n                </table>\n                <ng-template #noResults><div class=\"no-results\">no results for {{stixType.label}}</div></ng-template>\n            </div>\n        </mat-expansion-panel>\n    </mat-accordion>\n    </div>\n\n    <mat-divider></mat-divider>\n\n    <div class=\"button-container sidebar-content\">\n        <button (click)=\"viewModel.sidebarOpened = !viewModel.sidebarOpened\" mat-raised-button>Close</button>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n// import { Http } from '@angular/http'\nimport { Observable } from \"rxjs/Rx\"\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { TaxiiConnect, Server, Collections, Collection, Status } from './taxii2lib';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class DataService {\n\n    constructor(private http: HttpClient) {\n        console.log(\"initializing data service singleton\")\n        let subscription = this.getConfig().subscribe({\n            next: (config) => {\n                this.setUpURLs(config[\"versions\"]);\n            },\n            complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\n        })\n    }\n\n    public domain_backwards_compatibility = {\n        \"mitre-enterprise\": \"enterprise-attack\",\n        \"mitre-mobile\": \"mobile-attack\"\n    }\n    public domains: Domain[] = [];\n    public versions: any[] = [];\n\n    public subtechniquesEnabled: boolean = true;\n\n    /**\n     * Callback functions passed to this function will be called after data is loaded\n     * @param {*} callback callback function to call when data is done loading\n     */\n    public onDataLoad(domainID, callback) {\n        this.getDomain(domainID).dataLoadedCallbacks.push(callback);\n    }\n\n    /**\n     * Parse the given stix bundle into the relevant data holders\n     * @param {any[]} stixBundle: the STIX bundle to parse\n     */\n    parseBundle(domain: Domain, stixBundles: any[]): void {\n        let platforms = new Set<String>();\n        let seenIDs = new Set<String>();\n        for (let bundle of stixBundles) {\n            let techniqueSDOs = [];\n            let matrixSDOs = [];\n            let idToTechniqueSDO = new Map<string, any>();\n            let idToTacticSDO = new Map<string, any>();\n            for (let sdo of bundle.objects) { //iterate through stix domain objects in the bundle\n                // ignore deprecated and revoked objects in the bundle?\n                if (sdo.x_mitre_deprecated || sdo.revoked) continue;\n                \n                // Filter out object not included in this domain if domains field is available\n                if (\"x_mitre_domains\" in sdo && !sdo.x_mitre_domains.includes(domain.domain_identifier)) continue; \n                \n                // filter out duplicates\n                if (!seenIDs.has(sdo.id)) seenIDs.add(sdo.id)\n                else continue;\n\n                // parse according to type\n                switch(sdo.type) {\n                    case \"intrusion-set\":\n                        domain.groups.push(new Group(sdo, this));\n                        break;\n                    case \"malware\":\n                    case \"tool\":\n                        let soft = new Software(sdo, this)\n                        domain.software.push(soft);\n                        break;\n                    case \"course-of-action\":\n                        domain.mitigations.push(new Mitigation(sdo, this));\n                        break;\n                    case \"relationship\":\n                        if (sdo.relationship_type == \"subtechnique-of\" && this.subtechniquesEnabled) {\n                            // record subtechnique:technique relationship\n                            if (domain.relationships[\"subtechniques_of\"].has(sdo.target_ref)) {\n                                let ids = domain.relationships[\"subtechniques_of\"].get(sdo.target_ref);\n                                ids.push(sdo.source_ref);\n                            } else {\n                                domain.relationships[\"subtechniques_of\"].set(sdo.target_ref, [sdo.source_ref])\n                            }\n                        } else if (sdo.relationship_type == \"uses\") {\n                            if (sdo.source_ref.startsWith(\"intrusion-set\") && sdo.target_ref.startsWith(\"attack-pattern\")) {\n                                // record group:technique relationship\n                                if (domain.relationships[\"group_uses\"].has(sdo.source_ref)) {\n                                    let ids = domain.relationships[\"group_uses\"].get(sdo.source_ref);\n                                    ids.push(sdo.target_ref);\n                                } else {\n                                    domain.relationships[\"group_uses\"].set(sdo.source_ref, [sdo.target_ref])\n                                }\n                            } else if ((sdo.source_ref.startsWith(\"malware\") || sdo.source_ref.startsWith(\"tool\")) && sdo.target_ref.startsWith(\"attack-pattern\")) {\n                                // record software:technique relationship\n                                if (domain.relationships[\"software_uses\"].has(sdo.source_ref)) {\n                                    let ids = domain.relationships[\"software_uses\"].get(sdo.source_ref);\n                                    ids.push(sdo.target_ref);\n                                } else {\n                                    domain.relationships[\"software_uses\"].set(sdo.source_ref, [sdo.target_ref])\n                                }\n                            }\n                        } else if (sdo.relationship_type == \"mitigates\") {\n                            if (domain.relationships[\"mitigates\"].has(sdo.source_ref)) {\n                                let ids = domain.relationships[\"mitigates\"].get(sdo.source_ref);\n                                ids.push(sdo.target_ref);\n                            } else {\n                                domain.relationships[\"mitigates\"].set(sdo.source_ref, [sdo.target_ref])\n                            }\n                        }\n                        break;\n                    case \"attack-pattern\":\n                        idToTechniqueSDO.set(sdo.id, sdo);\n                        if (sdo.x_mitre_is_subtechnique) {\n                            if (this.subtechniquesEnabled) {\n                                domain.subtechniques.push(new Technique(sdo, [], this));\n                            }\n                        } else techniqueSDOs.push(sdo);\n                        break;\n                    case \"x-mitre-tactic\":\n                        idToTacticSDO.set(sdo.id, sdo);\n                        break;\n                    case \"x-mitre-matrix\":\n                        matrixSDOs.push(sdo);\n                        break;\n                    case \"note\":\n                        domain.notes.push(new Note(sdo));\n                        break;\n                }\n            }\n\n            //create techniques\n            for (let techniqueSDO of techniqueSDOs) {\n                let subtechniques: Technique[] = [];\n                if (this.subtechniquesEnabled) {\n                    if (domain.relationships.subtechniques_of.has(techniqueSDO.id)) {\n                        domain.relationships.subtechniques_of.get(techniqueSDO.id).forEach((sub_id) => {\n                            if (idToTechniqueSDO.has(sub_id)) subtechniques.push(new Technique(idToTechniqueSDO.get(sub_id), [], this));\n                            // else the target was revoked or deprecated and we can skip honoring the relationship\n                        })\n                    }\n                }\n                domain.techniques.push(new Technique(techniqueSDO, subtechniques, this));\n            }\n\n            //create matrices, which also creates tactics and filters techniques\n            for (let matrixSDO of matrixSDOs) {\n                domain.matrices.push(new Matrix(matrixSDO, idToTacticSDO, domain.techniques, this));\n            }\n\n            // parse platforms\n            for (let technique of domain.techniques) {\n                if (technique.platforms) {\n                    for (let platform of technique.platforms) {\n                        platforms.add(platform)\n                    }\n                }\n            }\n            for (let subtechnique of domain.subtechniques) {\n                for (let platform of subtechnique.platforms) {\n                    platforms.add(platform)\n                }\n            }\n        }\n        domain.platforms = Array.from(platforms); // convert to array\n\n        // data loading complete; update watchers\n        domain.dataLoaded = true;\n        console.log(\"data.service parsing complete\")\n        for (let callback of domain.dataLoadedCallbacks) {\n            callback();\n        }\n    }\n\n    // Observable for data in config.json\n    private configData$: Observable<Object>;\n\n    // Observable for data\n    private domainData$: Observable<Object>;\n\n    // URLs in case config file doesn't load properly\n    private enterpriseAttackURL: string = \"https://raw.githubusercontent.com/mitre/cti/master/enterprise-attack/enterprise-attack.json\";\n    private mobileAttackURL: string = \"https://raw.githubusercontent.com/mitre/cti/master/mobile-attack/mobile-attack.json\";\n\n    /**\n     * Set up the URLs for data\n     * @param {versions} list of versions and domains defined in the configuration file\n     * @memberof DataService\n     */\n    setUpURLs(versions: []){\n        versions.forEach( (version: any) => {\n            let v: string = version[\"name\"];\n            this.versions.push(v);\n            version[\"domains\"].forEach( (domain: any) => {\n                let id = this.getDomainID(domain[\"name\"], v);\n                let name = domain[\"name\"];\n                let domainObject = new Domain(id, name, v)\n\n                if (domain[\"taxii_url\"] && domain[\"taxii_collection\"]) {\n                    domainObject.taxii_url = domain[\"taxii_url\"];\n                    domainObject.taxii_collection = domain[\"taxii_collection\"];\n                } else {\n                    domainObject.urls = domain[\"data\"]\n                }\n                this.domains.push(domainObject);\n            });\n        });\n\n        if (this.domains.length == 0) { // issue loading config\n            let currVersion = \"ATT&CK v7\";\n            let enterpriseDomain = new Domain(this.getDomainID(\"Enterprise\", currVersion), \"Enterprise\", currVersion);\n            enterpriseDomain.urls = [this.enterpriseAttackURL];\n            let mobileDomain = new Domain(this.getDomainID(\"Mobile\", currVersion), \"Mobile\", currVersion);\n            mobileDomain.urls = [this.mobileAttackURL];\n\n            this.versions.push(currVersion);\n            this.domains.push(enterpriseDomain);\n            this.domains.push(mobileDomain);\n            console.log(this.domains)\n        }\n    }\n\n    /**\n     * get the current config\n     * @param {boolean} refresh: if true fetches the config from file. Otherwise, only fetches if it's never been fetched before\n     */\n    getConfig(refresh:boolean = false){\n        if (refresh || !this.configData$) {\n            this.configData$ = this.http.get(\"./assets/config.json\");\n        }\n        return this.configData$;\n    }\n\n    /**\n     * Fetch the domain data from the endpoint\n     */\n    getDomainData(domain: Domain, refresh: boolean = false) : Observable<Object>{\n        if (domain.taxii_collection && domain.taxii_url) {\n            console.log(\"fetching data from TAXII server\");\n            let conn = new TaxiiConnect(domain.taxii_url, '', '', 5000);\n            let collectionInfo: any = {\n                'id': domain.taxii_collection,\n                'title': domain.name,\n                'description': '',\n                'can_read': true,\n                'can_write': false,\n                'media_types': ['application/vnd.oasis.stix+json']\n            }\n            const collection = new Collection(collectionInfo, domain.taxii_url + 'stix', conn);\n            this.domainData$ = Observable.forkJoin(fromPromise(collection.getObjects('', undefined)));\n        } else if (refresh || !this.domainData$) {\n            console.log(\"retrieving data\", domain.urls)\n            let bundleData = [];\n            domain.urls.forEach((url) => {\n                bundleData.push(this.http.get(url));\n            });\n\n            this.domainData$ = Observable.forkJoin(bundleData);\n        }\n        return this.domainData$;\n    }\n\n    /**\n     * Load and parse domain data\n     */\n    loadDomainData(domainID: string, refresh: boolean = false): Promise<any> {\n        let dataPromise: Promise<any> = new Promise((resolve, reject) => {\n            let domain = this.getDomain(domainID);\n            if (domain) {\n                let subscription = this.getDomainData(domain, refresh).subscribe({\n                    next: (data: Object[]) => {\n                        this.parseBundle(domain, data);\n                        resolve(null);\n                    },\n                    complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\n                });\n            } else if (!domain) { // domain not defined in config\n                reject(\"'\" + domainID + \"' is not a valid domain.\")\n            }\n        });\n        return dataPromise;\n    }\n\n    /**\n     * Get domain object by domain ID\n     */\n    getDomain(domainID: string): Domain {\n        return this.domains.find((d) => d.id === domainID);\n    }\n\n    /**\n     * Get domain ID from domain name & version\n     */\n    getDomainID(domain: string, version: string): string {\n        if (!version) { // layer with no specified version defaults to current version\n            version = this.versions[0];\n        }\n        return domain.replace(/\\s/g, \"-\").concat('-', version.replace(/\\s/g, \"-\").replace(\"&\", \"a\").toLowerCase()).toLowerCase();\n    }\n\n    /**\n     * Retrieves the first version defined in the config file\n     */\n    getCurrentVersion() {\n        return this.versions[0].match(/v[0-9]/g)[0].toLowerCase();\n    }\n\n    /**\n     * Is the given version supported?\n     */\n    isSupported(version: string) {\n        return version.match(/[0-9]/g)[0] < this.versions[this.versions.length - 1].match(/[0-9]/g)[0]? false : true;\n    }\n}\n\n/**\n * Common attributes for STIX objects\n */\nexport abstract class BaseStix {\n    public readonly id: string;          // STIX ID\n    public readonly attackID: string;    // ATT&CK ID\n    public readonly name: string;        // name of object\n    public readonly description: string; // description of object\n    public readonly url: string;         // URL of object on the ATT&CK website\n    protected readonly dataService: DataService;\n    constructor(stixSDO: any, dataService: DataService) {\n        this.id = stixSDO.id;\n        this.name = stixSDO.name;\n        this.description = stixSDO.description;\n        this.attackID = stixSDO.external_references[0].external_id;\n        this.url = stixSDO.external_references[0].url;\n        this.dataService = dataService;\n    }\n}\n\n/**\n * Object representing an ATT&CK matrix (x-mitre-matrix)\n */\nexport class Matrix extends BaseStix {\n    public readonly tactics: Tactic[]; //tactics found under this Matrix\n    /**\n     * Creates an instance of Matrix.\n     * @param {*} stixSDO for the matrix\n     * @param {Map<string, any>} idToTacticSDO map of tactic ID to tactic SDO\n     * @param {Technique[]} techniques all techniques defined in the domain\n     */\n    constructor(stixSDO: any, idToTacticSDO: Map<string, any>, techniques: Technique[], dataService: DataService) {\n        super(stixSDO, dataService);\n        this.tactics = stixSDO.tactic_refs.map((tacticID) => new Tactic(idToTacticSDO.get(tacticID), techniques, this.dataService))\n    }\n}\n\n/**\n * Object representing a Tactic (x-mitre-tactic) in the ATT&CK matrix\n */\nexport class Tactic extends BaseStix {\n    public readonly techniques: Technique[];  // techniques found under this tactic\n    public readonly shortname: string;        // shortname property, AKA phase-name for techniques' kill-chain phases\n    /**\n     * Creates an instance of Tactic.\n     * @param {*} stixSDO for the tactic\n     * @param {Technique[]} techniques all techniques in the domain\n     */\n    constructor(stixSDO: any, techniques: Technique[], dataService: DataService) {\n        super(stixSDO, dataService);\n        this.shortname = stixSDO.x_mitre_shortname;\n        this.techniques = techniques.filter((technique: Technique) => technique.tactics.includes(this.shortname));\n    }\n}\n/**\n * Object representing a Technique (attack-pattern) in the ATT&CK matrix\n */\nexport class Technique extends BaseStix {\n    public readonly platforms: string[];        // platforms for this technique.\n    public readonly tactics: string[];          // tactics this technique is found under in phase-name format\n    public readonly subtechniques: Technique[]; // subtechniques under this technique\n    public readonly datasources: string;        // data sources of the technique\n    public parent: Technique = null;            // parent technique. Only present if it's a sub-technique\n    public get isSubtechnique() { return this.parent != null; }\n    /**\n     * Creates an instance of Technique.\n     * @param {*} stixSDO for the technique\n     * @param {Technique[]} subtechniques occuring under the technique\n     */\n    constructor(stixSDO: any, subtechniques: Technique[], dataService: DataService) {\n        super(stixSDO, dataService);\n        this.platforms = stixSDO.x_mitre_platforms;\n      \tif (stixSDO.x_mitre_data_sources !== undefined)\n\t\t      this.datasources = stixSDO.x_mitre_data_sources.toString();\n\t    else\n\t\t      this.datasources = \"\";\n        this.tactics = stixSDO.kill_chain_phases.map((phase) => phase.phase_name);\n\n        this.subtechniques = subtechniques;\n        for (let subtechnique of this.subtechniques) {\n            subtechnique.parent = this;\n        }\n    }\n\n    /**\n     * Get an ID identifying this technique under a specific tactic\n     * @param {string|Tactic} tactic tactic name in phase-name/shortname format, or a Tactic object itself\n     * @returns {string} ID for this technique under that tactic\n     */\n    public get_technique_tactic_id(tactic: string | Tactic): string {\n        let tactic_shortname = tactic instanceof Tactic? tactic.shortname : tactic;\n        if (!this.tactics.includes(tactic_shortname)) throw new Error(tactic_shortname + \" is not a tactic of \" + this.attackID);\n        return this.attackID + \"^\" + tactic_shortname;\n    }\n\n    /**\n     * Get all possible IDs identifying this technique under tactics\n     * Basically the same as calling get_technique_tactic_id with all valid tactic values\n     */\n    public get_all_technique_tactic_ids(): string[] {\n        return this.tactics.map((shortname: string) => this.get_technique_tactic_id(shortname));\n    }\n}\n\n/**\n * Object representing a Software (tool, malware) in the ATT&CK catalogue\n */\nexport class Software extends BaseStix {\n    public readonly platforms: string[] = []; //platforms for this software\n\n    /**\n     * Creates an instance of Software.\n     * @param {*} stixSDO for the software\n     * @param {DataService} DataService the software occurs within\n    */\n    constructor(stixSDO: any, dataService: DataService) {\n        super(stixSDO, dataService);\n        this.platforms = stixSDO.x_mitre_platforms;\n    }\n\n    /**\n     * get techniques used by this software\n     * @returns {string[]} technique IDs used by this software\n     */\n    public used(domainID): string[] {\n        let rels = this.dataService.getDomain(domainID).relationships.software_uses;\n        if (rels.has(this.id)) return rels.get(this.id);\n        else return [];\n    }\n    /**\n     * Return all related techniques\n     */\n    public relatedTechniques(domainID): string[] {\n        return this.used(domainID);\n    }\n}\n/**\n * Object representing a Group (intrusion-set) in the ATT&CK catalogue\n */\nexport class Group extends BaseStix {\n    /**\n     * get techniques used by this group\n     * @returns {string[]} technique IDs used by this group\n     */\n    public used(domainID): string[] {\n        let rels = this.dataService.getDomain(domainID).relationships.group_uses;\n        if (rels.has(this.id)) return rels.get(this.id);\n        else return [];\n    }\n    /**\n     * Return all related techniques\n     */\n    public relatedTechniques(domainID): string[] {\n        return this.used(domainID);\n    }\n}\n\n/**\n * Object representing a Mitigation (course-of-action) in the ATT&CK catalogue\n */\nexport class Mitigation extends BaseStix {\n    /**\n     * get techniques mitigated by this mitigation\n     * @returns {string[]} list of technique IDs\n     */\n    public mitigated(domainID): string[] {\n        let rels = this.dataService.getDomain(domainID).relationships.mitigates;\n        if (rels.has(this.id)) {\n            return rels.get(this.id);\n        }\n        else return [];\n    }\n    /**\n     * Return all related techniques\n     */\n    public relatedTechniques(domainID): string[] {\n        return this.mitigated(domainID);\n    }\n}\n\nexport class Note {\n    public readonly abstract?: string; // brief summary of note content\n    public readonly content: string; // content of the note\n    public readonly object_refs: string[]; // list of STIX objects the note is applied to\n\n    /**\n     * Creates an instance of Note.\n     * @param {*} stixSDO for the note\n    */\n    constructor(stixSDO: any) {\n        if (stixSDO.abstract) this.abstract = stixSDO.abstract;\n        this.content = stixSDO.content;\n        this.object_refs = stixSDO.object_refs;\n    }\n}\n\nexport class Domain {\n    public readonly id: string; // domain ID\n    public get domain_identifier(): string { //domain ID without the version suffix\n        let parts = this.id.split(\"-\");\n        parts.pop();\n        return parts.join(\"-\");\n    }\n    public readonly name: string; // domain display name\n    public readonly version: string; // ATT&CK version number\n\n    public urls: string[] = [];\n    public taxii_url: string = \"\";\n    public taxii_collection: string = \"\";\n    public dataLoaded: boolean = false;\n    public dataLoadedCallbacks: any[] = [];\n\n    public matrices: Matrix[] = [];\n    public tactics: Tactic[] = [];\n    public techniques: Technique[] = [];\n    public platforms: String[] = []; // platforms defined on techniques and software of the domain\n    public subtechniques: Technique[] = [];\n    public software: Software[] = [];\n    public groups: Group[] = [];\n    public mitigations: Mitigation[] = [];\n    public notes: Note[] = [];\n    public relationships: any = {\n        // subtechnique subtechnique-of technique\n        // ID of technique to [] of subtechnique IDs\n        subtechniques_of: new Map<string, string[]>(),\n        // group uses technique\n        // ID of group to [] of technique IDs\n        group_uses: new Map<string, string[]>(),\n        // group uses technique\n        // ID of group to [] of technique IDs\n        software_uses: new Map<string, string[]>(),\n        // mitigation mitigates technique\n        // ID of mitigation to [] of technique IDs\n        mitigates: new Map<string, string[]>()\n    }\n\n    constructor(id: string, name: string, version: string) {\n        this.id = id;\n        this.name = name;\n        this.version = version;\n    }\n\n    /**\n     * Get version of this domain\n     */\n    getVersion() {\n        return this.version.match(/[0-9]/g)[0];\n    }\n}\n","import { Component, ViewChild, DoCheck, HostListener } from '@angular/core';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { ConfigService } from './config.service';\nimport * as globals from \"./globals\";\nimport { DataService } from './data.service';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n    @ViewChild(TabsComponent) tabsComponent;\n\n    nav_version: string = globals.nav_version;\n\n    @HostListener('window:beforeunload', ['$event'])\n    promptNavAway($event) {\n        if (!this.configService.getFeature('leave_site_dialog')) return;\n        //this text only shows in the data, not visible to user as far as I can tell\n        //however, if it's not included the window doesn't open.\n        $event.returnValue='Are you sure you want to navigate away? Your data may be lost!';\n    }\n\n    constructor(public configService: ConfigService) {\n        Array.prototype.includes = function(value): boolean {\n            // console.log(\"checking include\")\n            for (let i = 0; i < this.length; i++) {\n                if (this[i] === value) return true\n            }\n            return false;\n        }\n    }\n}\n","<tabs></tabs>\n<span style=\"font-size: 7pt\">Based on MITRE ATT&CK&reg; Navigator v{{nav_version}}</span>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ViewModelsService } from '../viewmodels.service';\nimport { DataService } from '../data.service';\nimport * as globals from './../globals';\n\n@Component({\n    selector: 'app-version-upgrade',\n    templateUrl: './version-upgrade.component.html',\n    styleUrls: ['./version-upgrade.component.scss'],\n    providers: [ViewModelsService]\n})\nexport class VersionUpgradeComponent implements OnInit {\n\n    nav_version = globals.nav_version;\n    currVersion: string;\n    vmVersion: string;\n    layerName: string;\n    dontAsk: boolean = false;\n\n    constructor(private dialogRef: MatDialogRef<VersionUpgradeComponent>, \n                public dataService: DataService,\n                private viewModelsService: ViewModelsService,\n                @Inject(MAT_DIALOG_DATA) public data) { }\n\n    ngOnInit() { \n        this.currVersion = this.data.currVersion;\n        this.vmVersion = this.data.vmVersion;\n        this.layerName = this.data.layerName;\n    }\n\n    upgradeVersion(upgrade: boolean) {\n        this.dialogRef.close({upgrade: upgrade, dontAsk: this.dontAsk});\n    }\n}\n","<div class=\"mat-dialog\">\n    <div>\n        <h3 mat-dialog-title>Upgrade Version</h3>\n        <mat-dialog-content>\n            <p>The layer \"{{layerName}}\" uses an outdated version of ATT&CK ({{vmVersion}}).\n                <em *ngIf=\"!this.dataService.isSupported(this.vmVersion)\">This version is not supported by Navigator v{{nav_version}} and must be upgraded for use.</em>\n            </p>\n            <p>Upgrade layer to ATT&CK {{currVersion}}?</p>\n        </mat-dialog-content>\n    </div>\n\n    <div>\n        <mat-dialog-actions>\n            <button mat-button (click)=\"upgradeVersion(true)\">Yes</button>\n            <button mat-button (click)=\"upgradeVersion(false)\">No</button>\n        </mat-dialog-actions>\n    </div>\n\n    <div>\n        <mat-checkbox [checked]=\"dontAsk\" (change)=\"dontAsk = !dontAsk\">Don't ask me again</mat-checkbox>\n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport 'rxjs/add/operator/map'\n\n// material\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { DataTableComponent } from './datatable/data-table.component';\nimport { TabsComponent } from './tabs/tabs.component';\nimport { HelpComponent } from './help/help.component';\nimport { ExporterComponent } from './exporter/exporter.component';\nimport { TechniqueCellComponent } from './matrix/technique-cell/technique-cell.component';\nimport { MatrixSideComponent } from './matrix/matrix-side/matrix-side.component';\nimport { MatrixFlatComponent } from './matrix//matrix-flat/matrix-flat.component';\nimport { MatrixMiniComponent } from './matrix//matrix-mini/matrix-mini.component';\nimport { TooltipComponent } from './matrix/technique-cell/tooltip/tooltip.component';\nimport { SearchAndMultiselectComponent } from './search-and-multiselect/search-and-multiselect.component';\nimport { ContextmenuComponent } from './matrix/technique-cell/contextmenu/contextmenu.component';\nimport { TacticCellComponent } from './matrix/tactic-cell/tactic-cell.component';\nimport { VersionUpgradeComponent } from './version-upgrade/version-upgrade.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatDividerModule } from \"@angular/material/divider\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DataTableComponent,\n    TabsComponent,\n    HelpComponent,\n    ExporterComponent,\n    TechniqueCellComponent,\n    MatrixSideComponent,\n    MatrixFlatComponent,\n    MatrixMiniComponent,\n    TooltipComponent,\n    SearchAndMultiselectComponent,\n    ContextmenuComponent,\n    TacticCellComponent,\n    VersionUpgradeComponent,\n    SidebarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatCheckboxModule,\n    MatTooltipModule,\n    MatMenuModule,\n    MatExpansionModule,\n    MatDialogModule,\n    ColorPickerModule,\n    MatSidenavModule,\n    MatCardModule,\n    MatDividerModule\n  ],\n  exports: [\n      MatSelectModule,\n      MatInputModule,\n      MatButtonModule,\n      MatTooltipModule,\n      MatMenuModule,\n      MatExpansionModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [ VersionUpgradeComponent, HelpComponent, ExporterComponent ]\n})\nexport class AppModule { }\n","// https://embed.plnkr.co/wWKnXzpm8V31wlvu64od/\nimport { Component, AfterContentInit, ViewChild, TemplateRef, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { DataService, Technique } from '../data.service'; //import the DataService component so we can use it\nimport { ConfigService } from '../config.service';\nimport * as is from 'is_js';\nimport { VersionUpgradeComponent } from '../version-upgrade/version-upgrade.component';\nimport { HelpComponent } from '../help/help.component';\nimport { ExporterComponent } from '../exporter/exporter.component';\nimport { ViewModelsService, ViewModel } from \"../viewmodels.service\";\n\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { HttpClient } from '@angular/common/http';\nimport * as globals from './../globals';\n\ndeclare var math: any; //use mathjs\n\n@Component({\n    selector: 'tabs',\n    templateUrl: './tabs.component.html',\n    styleUrls: ['./tabs.component.scss'],\n    providers: [ViewModelsService],\n    encapsulation: ViewEncapsulation.None\n})\nexport class TabsComponent implements AfterContentInit, AfterViewInit {\n\n    //  _____ _   ___   ___ _____ _   _ ___ ___\n    // |_   _/_\\ | _ ) / __|_   _| | | | __| __|\n    //   | |/ _ \\| _ \\ \\__ \\ | | | |_| | _|| _|\n    //   |_/_/ \\_\\___/ |___/ |_|  \\___/|_| |_|\n\n\n    ds: DataService = null;\n    vms: ViewModelsService = null;\n    activeTab: Tab = null;\n    layerTabs: Tab[] = [];\n    techniques: Technique[] = [];\n\n    alwaysUpgradeVersion: boolean;\n    nav_version = globals.nav_version;\n\n    constructor(private dialog: MatDialog, private viewModelsService: ViewModelsService, private dataService: DataService, private http: HttpClient, private configService: ConfigService) {\n        console.log(\"tabs component initializing\");\n        this.ds = dataService;\n        this.viewModelsService = viewModelsService;\n    }\n\n    @ViewChild('safariWarning') safariWarning : TemplateRef<any>;\n\n    ngAfterContentInit() {\n        let subscription = this.ds.getConfig().subscribe({\n            next: (config: Object) => {\n                this.newBlankTab();\n                this.loadTabs(config[\"default_layers\"]).then( () => {\n                    if (this.layerTabs.length == 0) {\n                        this.newLayer(this.dataService.domains[0].id); // failed load from url, so create new blank layer\n                    }\n                    // let activeTabs = this.layerTabs.filter((tab)=>tab.active);\n\n                    // if there is no active tab set, activate the first\n                    if(!this.activeTab) { this.selectTab(this.layerTabs[0]); }\n                });\n                this.customizedConfig = this.configService.getFeatureList()\n                this.bannerContent = this.configService.banner;\n            },\n            complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\n        });\n    }\n\n    public safariDialogRef;\n    ngAfterViewInit() {\n        if (is.safari()) {\n            this.safariDialogRef = this.dialog.open(this.safariWarning, {\n                width: '350px',\n                disableClose: true\n            });\n        }\n    }\n\n    /**\n     * Open initial tabs on application load\n     */\n     async loadTabs(defaultLayers) {\n            let fragment_value = this.getNamedFragmentValue(\"layerURL\");\n\n            if (fragment_value && fragment_value.length > 0) {\n                let first = true;\n                let self = this;\n\n                    for (var _i = 0, urls_1 = fragment_value; _i < urls_1.length; _i++) {\n                        var url = urls_1[_i];\n                        await self.loadLayerFromURL(url, first);\n                        first = false;\n                    }\n            } else if (defaultLayers[\"enabled\"]) {\n                let first = true;\n                let self = this;\n\n                    for (let url of defaultLayers[\"urls\"]) {\n                        await self.loadLayerFromURL(url, first);\n                        first = false;\n                    }\n            }\n    }\n\n    /**\n     * Open a new tab\n     * @param  {[type]}  title               title of new tab\n     * @param  {[type]}  data                data to put in template\n     * @param  {Boolean} [isCloseable=false] can this tab be closed?\n     * @param  {Boolean} [replace=false]     replace the current tab with the new tab, TODO\n     * @param  {Boolean} [forceNew=false]    force open a new tab even if a tab of that name already exists\n     * @param  {Boolean} [dataTable=false]   is this a data-table tab? if so tab text should be editable\n\n     */\n    openTab(title: string, data, isCloseable = false, replace = true, forceNew = false, dataTable = false) {\n        // determine if tab is already open. If it is, just change to that tab\n        if (!forceNew) {\n            for (let i = 0; i < this.layerTabs.length; i++) {\n                if (this.layerTabs[i].title === title) {\n                    this.selectTab(this.layerTabs[i])\n                    return;\n                }\n            }\n        }\n\n        // create a new tab\n        let domain = data? data.domainID : \"\";\n        let tab = new Tab(title, isCloseable, false, domain, dataTable);\n        tab.dataContext = data;\n\n        // select new tab\n        if (!replace || this.layerTabs.length === 0) {\n            this.layerTabs.push(tab); //don't replace\n            this.selectTab(this.layerTabs[this.layerTabs.length - 1]);\n        } else {\n            // find active tab index\n            for (let i = 0; i < this.layerTabs.length; i++) {\n                if (this.layerTabs[i] == this.activeTab) {\n                    this.closeActiveTab(true) //close current and don't let it create a replacement tab\n                    this.layerTabs.splice(i, 0, tab) //replace\n                    this.selectTab(this.layerTabs[i]);\n                    return\n                }\n            }\n        }\n    }\n\n    /**\n     * Select a given tab: deselects other tabs.\n     * @param  {Tab} tab tab to select\n     */\n    selectTab(tab: Tab){\n        // deactivate all tabs\n        // this.layerTabs.forEach(tab => tab.active = false);\n        this.activeTab = tab;\n        // activate the tab the user has clicked on.\n        // tab.active = true;\n        this.viewModelsService.viewModels.forEach(viewModel => {\n            viewModel.sidebarOpened = false;\n            viewModel.sidebarContentType = \"\";\n        });\n    }\n\n    /**\n     * close a tab\n     * @param  {Tab} tab              tab to close\n     * @param  {[type]}       allowNoTab=false if true, doesn't select another tab, and won't open a new tab if there are none\n     */\n    closeTab(tab: Tab, allowNoTab=false) {\n        let action = 0; //controls post close-tab behavior\n\n        // destroy tab viewmodel\n        this.viewModelsService.destroyViewModel(tab.dataContext);\n\n        for(let i=0; i<this.layerTabs.length;i++) {\n            if(this.layerTabs[i] === tab) { //close this tab\n\n                if (this.layerTabs[i] == this.activeTab) { //is the tab we're closing currently open??\n                    if (i == 0 && this.layerTabs.length > 1) { //closing first tab, first tab is active, and more tabs exist\n                        action = 1;\n                    } else if (i > 0) { //closing not first tab, implicitly more tabs exist\n                        action = 2;\n                    } else { //else closing first tab and no other tab exist\n                        action = 3;\n                    }\n                }\n                // remove the tab from our array\n                this.layerTabs.splice(i,1);\n                break;\n            }\n        }\n\n        // post close-tab behavior: select new tab?\n        if (!allowNoTab) {\n            switch (action) {\n                case 0: //should only occur if the active tab is not closed: don't select another tab\n                    break;\n                case 1: //closing the first tab, more exist\n                    this.selectTab(this.layerTabs[0]) // select first tab\n                    break;\n                case 2: //closing any tab other than the first\n                    this.selectTab(this.layerTabs[0]); //select first tab\n                    break;\n                case 3://closing first tab and no other tab exist\n                    this.newBlankTab(); //make a new blank tab, automatically opens this tab\n                    break;\n                default: //should never occur\n                    console.error(\"post closetab action not specified (this should never happen)\")\n            }\n        }\n    }\n\n    /**\n     * Close the currently selected tab\n     * @param  {[type]} allowNoTab=false if true, doesn't select another tab, and won't open a new tab if there are none\n     */\n    closeActiveTab(allowNoTab=false) {\n        if (this.activeTab) this.closeTab(this.activeTab, allowNoTab);\n        // this.activeTab = null;\n        // let activeTabs = this.layerTabs.filter((tab)=>tab.active);\n        // if(activeTabs.length > 0)  {\n        //     // close the 1st active tab (should only be one at a time)\n        //     this.closeTab(activeTabs[0], allowNoTab);\n        // }\n    }\n\n    getActiveTab() {\n        return this.activeTab;\n        // let activeTabs = this.layerTabs.filter((tab)=>tab.active);\n        // return activeTabs[0];\n    }\n\n    filterDomains(version: string) {\n        return this.dataService.domains.filter((d) => d.version === version)\n    }\n\n    hasFeature(featureName: string): boolean {\n        return this.configService.getFeature(featureName);\n    }\n\n\n    //  _      ___   _____ ___   ___ _____ _   _ ___ ___\n    // | |    /_\\ \\ / / __| _ \\ / __|_   _| | | | __| __|\n    // | |__ / _ \\ V /| _||   / \\__ \\ | | | |_| | _|| _|\n    // |____/_/ \\_\\_| |___|_|_\\ |___/ |_|  \\___/|_| |_|\n\n    /**\n     * open a new \"blank\" tab showing a new layer button and an open layer button\n     * @param  {[type]} replace=false replace the current tab with this blank tab?\n     */\n    newBlankTab(replace=false) {\n        this.openTab('new tab', null, true, replace, true, false)\n    }\n\n    /**\n     * open the help dialog\n     */\n    openHelpDialog() {\n        this.dialog.open(HelpComponent);\n    }\n\n    /**\n     * open the SVG exporter dialog\n     * @param {ViewModel} vm    the viewModel to render\n     */\n    openSVGDialog(vm: ViewModel) {\n        this.dialog.open(ExporterComponent, \n            { data: {vm: vm},\n              panelClass: 'dialog-custom'\n            });\n    }\n\n    /**\n     * Given a unique root, returns a layer name that does not conflict any existing layers, e.g 'new layer' -> 'new layer 1'\n     * @param  {string} root the root string to get the non-conflicting version of\n     * @return {string}      non-conflicted version\n     */\n    getUniqueLayerName(root: string) {\n        let conflictNumber = 0;\n        let viewModels = this.viewModelsService.viewModels\n\n        function isInteger(str) {\n            var n = Math.floor(Number(str));\n            return String(n) === str;\n        }\n\n        for (let i = 0; i < viewModels.length; i++) {\n            if (!viewModels[i].name.startsWith(root)) continue;\n            if (viewModels[i].name === root) { //case where it's \"new layer\" aka  \"new layer 0\"\n                conflictNumber = Math.max(conflictNumber, 1);\n                continue;\n            }\n\n            let numberPortion = viewModels[i].name.substring(root.length, viewModels[i].name.length)\n\n            //find lowest number higher than existing number\n            if (isInteger(numberPortion)) {\n                conflictNumber = Math.max(conflictNumber, Number(numberPortion) + 1)\n            }\n        }\n        // if no layers of this name exist (conflictNumber == 0) just return root\n        if (conflictNumber != 0) root = root + conflictNumber\n        return root;\n    }\n\n    /**\n     * Open a new blank layer tab\n     */\n    newLayer(domainID: string) {\n        // load domain data, if not yet loaded\n        if (!this.dataService.getDomain(domainID).dataLoaded) {\n            this.dataService.loadDomainData(domainID, true);\n        }\n\n        // find non conflicting name\n        let name = this.getUniqueLayerName(\"layer\")\n\n        // create and open VM\n        let vm = this.viewModelsService.newViewModel(name, domainID);\n        vm.loadVMData();\n        this.openTab(name, vm, true, true, true, true)\n    }\n\n    /**\n     * Get a layer score expression variable for a tab\n     * @param  index index of tab\n     * @return       char expression variable\n     */\n    indexToChar(index: number) {\n        let realIndex = 0;\n        for (let i = 0; i < index; i++) {\n            if (this.layerTabs[i].dataContext) realIndex++;\n        }\n        return String.fromCharCode(97+realIndex);\n    }\n\n    /**\n     * Inverse of indextoChar, maps char to the tab it corresponds to\n     * @param  char score expression variable\n     * @return      tab index\n     */\n    charToIndex(char: string): number {\n        // console.log(\"searching for char\", char)\n        let realIndex = 0;\n        for (let i = 0; i < this.layerTabs.length; i++) {\n            if (this.layerTabs[i].dataContext) {\n                let charHere = String.fromCharCode(97+realIndex);\n                realIndex++;\n                if (charHere == char) return i;\n            }\n        }\n    }\n\n    domain: string = \"\";\n    gradient: ViewModel = null;\n    coloring: ViewModel = null;\n    comments: ViewModel = null;\n    enabledness: ViewModel = null;\n    filters: ViewModel = null;\n    scoreExpression: string = \"\";\n    legendItems: ViewModel = null;\n    /**\n     * layer layer operation\n     */\n    layerByOperation(): void {\n        // build score expression map, mapping inline variables to their actual VMs\n        let scoreVariables = new Map<string, ViewModel>();\n        let regex = /\\b[a-z]\\b/g //\\b matches word boundary\n        let matches = this.scoreExpression.match(regex);\n        let self = this;\n        if (matches) {\n            matches.forEach(function(match) {\n                // trim\n                let index = self.charToIndex(match);\n                let vm = self.layerTabs[index].dataContext;\n                scoreVariables.set(match, vm);\n            });\n        }\n\n        let layerName = this.getUniqueLayerName(\"layer by operation\")\n        try {\n            // all layers must be of the same domain/version\n            let vms = Array.from(scoreVariables.values());\n            if(vms && !vms.every((vm) => vm.domainID === vms[0].domainID)) {\n                throw {message: \"cannot apply operations to layers of different domains\"};\n            }\n            let vm = this.viewModelsService.layerLayerOperation(this.domain, this.scoreExpression, scoreVariables, this.comments, this.gradient, this.coloring, this.enabledness, layerName, this.filters, this.legendItems)\n            if (!this.dataService.getDomain(this.domain).dataLoaded) {\n                this.dataService.loadDomainData(this.domain, true).then( () => {\n                    vm.loadVMData();\n                    vm.updateGradient();\n                    this.openTab(layerName, vm, true, true, true, true)\n                })\n            } else {\n                vm.loadVMData();\n                vm.updateGradient();\n                this.openTab(layerName, vm, true, true, true, true)\n            }\n        } catch (err) {\n            console.error(err)\n            alert(\"Layer Layer operation error: \" + err.message)\n        }\n\n\n    }\n\n    /**\n     * Retrieves a list of view models with the chosen domain\n     */\n    getLayers(): ViewModel[] {\n        return this.viewModelsService.viewModels.filter((vm) => vm.domainID == this.domain)\n    }\n\n    /**\n     * Check if there's an error in the score expression (syntax, etc)\n     * @return error or null if no error\n     */\n    getScoreExpressionError(): string {\n        let self = this;\n        try {\n            // build fake scope\n            let regex = /\\b[a-z]\\b/g //\\b matches word boundary\n            let matches = self.scoreExpression.match(regex);\n\n            let scope = {}\n            if (matches) {\n                let noMatch = \"\"\n                matches.forEach(function(match) {\n                    // trim\n                    scope[match] = 0;\n                    // check if letter is too large\n                    // console.log(\"chartoindex[\"+match+\"]\", self.charToIndex(match))\n                    if (typeof(self.charToIndex(match)) == \"undefined\") {\n                        noMatch = \"Variable \" + match + \" does not match any layers\"\n                    } else if (self.domain && self.layerTabs[self.charToIndex(match)].dataContext.domainID !== self.domain) {\n                        noMatch = \"Layer \" + match + \" does not match the chosen domain\"\n                    }\n                });\n                // console.log(noMatch)\n                if (noMatch.length > 0) return noMatch;\n            }\n            let result = math.eval(self.scoreExpression, scope)\n            // console.log(result)\n            return null\n        } catch(err) {\n            // console.log(err.message)\n            return err.message\n        }\n    }\n\n    /**\n     * open upload new layer prompt\n     */\n    openUploadPrompt(): void {\n        var input = (<HTMLInputElement>document.getElementById(\"uploader\"));\n        input.click();\n    }\n\n    /**\n     * Dialog to upgrade version if layer is not the latest version\n     */\n    versionUpgradeDialog(viewModel): Promise<any> {\n        let dataPromise: Promise<any> = new Promise((resolve, reject) => {\n            let currVersion = this.dataService.getCurrentVersion();\n            if (this.alwaysUpgradeVersion) { // remember user choice to always upgrade layer\n                viewModel.version = currVersion;\n                viewModel.domainID = this.dataService.getDomainID(viewModel.domain, viewModel.version);\n                resolve(null);\n            } else if (viewModel.version !== currVersion && this.alwaysUpgradeVersion == undefined) { // ask to upgrade\n                const dialogConfig = new MatDialogConfig();\n                dialogConfig.disableClose = true;\n                dialogConfig.width = '25%';\n                dialogConfig.data = {\n                    layerName: viewModel.name,\n                    vmVersion: viewModel.version,\n                    currVersion: currVersion\n                }\n                const dialogRef = this.dialog.open(VersionUpgradeComponent, dialogConfig);\n                let subscription = dialogRef.afterClosed().subscribe({\n                    next: (result) => {\n                        if (!result.upgrade && !this.dataService.isSupported(viewModel.version)) {\n                            reject(\"Uploaded layer version (\" + String(viewModel.version) + \") is not supported by Navigator v\" + globals.nav_version)\n                        }\n                        if (result.dontAsk) {\n                            this.alwaysUpgradeVersion = result.upgrade;\n                        }\n                        if (result.upgrade) {\n                            viewModel.version = currVersion\n                            viewModel.domainID = this.dataService.getDomainID(viewModel.domain, viewModel.version);\n                        }\n                        resolve(null);\n                    },\n                    complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\n                });\n            } else { // remember user choice not to upgrade or layer is already current version\n                resolve(null);\n            }\n        });\n        return dataPromise;\n    }\n\n    /**\n     * Loads an existing layer into a tab\n     */\n    loadLayerFromFile(): void {\n        var input = (<HTMLInputElement>document.getElementById(\"uploader\"));\n        if(input.files.length < 1){\n            alert(\"You must select a file to upload!\")\n            return;\n        }\n        this.readJSONFile(input.files[0]);\n    }\n\n    /**\n     * Retrieves a file from the input element,\n     * reads the json,\n     * and adds the properties to a new viewModel, and loads that viewmodel into a new layer.\n     */\n    readJSONFile(file: File) {\n        // var input = (<HTMLInputElement>document.getElementById(\"uploader\"));\n        var reader = new FileReader();\n        let viewModel = this.viewModelsService.newViewModel(\"loading layer...\", undefined);\n\n        reader.onload = (e) =>{\n            var string = String(reader.result);\n            try{\n                viewModel.deSerializeDomainID(string);\n                if (!this.dataService.getDomain(viewModel.domainID)) {\n                    throw {message: \"Error: '\" + viewModel.domain + \"' (\" + viewModel.version + \") is an invalid domain.\"};\n                }\n                this.versionUpgradeDialog(viewModel).then( () => {\n                    this.openTab(\"new layer\", viewModel, true, true, true, true);\n                    if (!this.dataService.getDomain(viewModel.domainID).dataLoaded) {\n                        this.dataService.loadDomainData(viewModel.domainID, true).then( () => {\n                            viewModel.deSerialize(string);\n                            viewModel.loadVMData();\n                        });\n                    } else {\n                        viewModel.deSerialize(string);\n                        viewModel.loadVMData();\n                    }\n                })\n                .catch( (err) => {\n                    console.error(err.message);\n                    alert(\"ERROR parsing file, check the javascript console for more information.\");\n                });\n            }\n            catch(err){\n                console.error(\"ERROR: Either the file is not JSON formatted, or the file structure is invalid.\", err);\n                alert(\"ERROR: Either the file is not JSON formatted, or the file structure is invalid.\");\n                this.viewModelsService.destroyViewModel(viewModel);\n            }\n        }\n        reader.readAsText(file);\n    }\n\n    loadURL: string = \"\";\n    /**\n     * attempt an HTTP GET to loadURL, and load the response (if it exists) as a layer.\n     */\n    loadLayerFromURL(loadURL, replace): Promise<any> {\n        let layerPromise: Promise<any> = new Promise((resolve, reject) => {\n            // if (!loadURL.startsWith(\"http://\") && !loadURL.startsWith(\"https://\") && !loadURL.startsWith(\"FTP://\")) loadURL = \"https://\" + loadURL;\n            let subscription = this.http.get(loadURL).subscribe({\n                next: (res) => {\n                    let viewModel = this.viewModelsService.newViewModel(\"loading layer...\", undefined);\n                    try {\n                        viewModel.deSerializeDomainID(res);\n                        if (!this.dataService.getDomain(viewModel.domainID)) {\n                            throw {message: \"Error: '\" + viewModel.domain + \"' (\" + viewModel.version + \") is an invalid domain.\"};\n                        }\n                        this.versionUpgradeDialog(viewModel).then( () => {\n                            this.openTab(\"new layer\", viewModel, true, replace, true, true);\n                            if (!this.dataService.getDomain(viewModel.domainID).dataLoaded) {\n                                this.dataService.loadDomainData(viewModel.domainID, true).then( () => {\n                                    viewModel.deSerialize(res);\n                                    viewModel.loadVMData();\n                                    resolve(null);\n                                });\n                            } else {\n                                viewModel.deSerialize(res);\n                                viewModel.loadVMData();\n                                resolve(null);\n                            }\n                        })\n                        .catch( (err) => {\n                            console.error(err.message);\n                            alert(\"ERROR parsing layer from \" + loadURL + \", check the javascript console for more information.\");\n                            resolve(null);\n                        });\n                        console.log(\"loaded layer from\", loadURL);\n                    } catch(err) {\n                        console.error(err)\n                        this.viewModelsService.destroyViewModel(viewModel);\n                        alert(\"ERROR parsing layer from \" + loadURL + \", check the javascript console for more information.\")\n                        resolve(null); //continue\n                    }\n                }, \n                error: (err) => {\n                    console.error(err)\n                    if (err.status == 0) {\n                        // no response\n                        alert(\"ERROR retrieving layer from \" + loadURL + \", check the javascript console for more information.\")\n                    } else {\n                        // response, but not a good one\n                        alert(\"ERROR retrieving layer from \" + loadURL + \", check the javascript console for more information.\")\n                    }\n                    resolve(null); //continue\n                },\n                complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks\n            });\n        });\n        return layerPromise;\n    }\n\n\n    //   ___ _   _ ___ _____ ___  __  __ ___ _______ ___    _  _   ___   _____ ___   _ _____ ___  ___   ___ _____ _   _ ___ ___\n    //  / __| | | / __|_   _/ _ \\|  \\/  |_ _|_  / __|   \\  | \\| | /_\\ \\ / /_ _/ __| /_\\_   _/ _ \\| _ \\ / __|_   _| | | | __| __|\n    // | (__| |_| \\__ \\ | || (_) | |\\/| || | / /| _|| |) | | .` |/ _ \\ V / | | (_ |/ _ \\| || (_) |   / \\__ \\ | | | |_| | _|| _|\n    //  \\___|\\___/|___/ |_| \\___/|_|  |_|___/___|___|___/  |_|\\_/_/ \\_\\_/ |___\\___/_/ \\_\\_| \\___/|_|_\\ |___/ |_|  \\___/|_| |_|\n    // layerLinkURL = \"\"; //the user inputted layer link which will get parsed into a param\n    layerLinkURLs: string[] = [];\n    customizedConfig = [];\n    bannerContent: string;\n\n    /**\n     * Helper function to track which layerLinkURLs have been added or removed\n     */\n    trackByFunction(index: number, obj: any): any {\n        return index;\n    }\n\n    /**\n     * Add a new empty layer link to the layerLinkURLs array\n     */\n    addLayerLink(): void {\n        this.layerLinkURLs.push(\"\");\n    }\n\n    /**\n     * Remove the given layer link URL from layerLinkURLs\n     * @param {number} index the index to remove\n     */\n    removeLayerLink(index: number): void {\n        console.log(\"removing index\", index)\n        console.log(this.layerLinkURLs);\n        if (this.layerLinkURLs.length == 1) this.layerLinkURLs = [];\n        else this.layerLinkURLs.splice(index, 1);\n        console.log(this.layerLinkURLs);\n    }\n\n    /**\n     * Convert layerLinkURL to a query string value for layerURL query string\n     * @return URL such that when opened will create navigator instance with a query String\n     *         specifying layerLinkURL as the URL to fetch the default layer from\n     */\n    getLayerLink(): string {\n        // if (!this.layerLinkURL) return \"\";\n        let str = window.location.href.split(\"#\")[0];\n        let join = \"#\" //hash first, then ampersand\n        for (let layerLinkURL of this.layerLinkURLs) {\n            str += join + \"layerURL=\" + encodeURIComponent(layerLinkURL)\n            join = \"&\";\n        }\n        for (let i = 0; i < this.customizedConfig.length; i++) {\n            if (this.customizedConfig[i].subfeatures) {\n                for (let j = 0; j < this.customizedConfig[i].subfeatures.length; j++) {\n                    if (!this.customizedConfig[i].subfeatures[j].enabled) {\n                        str += join + this.customizedConfig[i].subfeatures[j].name + \"=false\"\n                        join = \"&\";\n                    }\n                }\n            } else {\n                if (!this.customizedConfig[i].enabled) {\n                    str += join + this.customizedConfig[i].name + \"=false\"\n                    join = \"&\";\n                }\n            }\n        }\n\n        return str\n    }\n    /**\n     * Select the layer link field text\n     */\n    selectLayerLink(): void {\n        let copyText = <HTMLInputElement>document.getElementById(\"layerLink\");\n        console.log(copyText)\n        console.log(copyText.value)\n        copyText.select();\n    }\n\n    copiedRecently = false; // true if copyLayerLink has been called recently -- reverts to false after 2 seconds\n    /**\n     * copy the created layer link to the user's clipboard\n     */\n    copyLayerLink(): void {\n        console.log(\"attempting copy\")\n        this.selectLayerLink();\n        document.execCommand(\"Copy\");\n        this.copiedRecently = true;\n        let self = this;\n        window.setTimeout(function() {self.copiedRecently = false}, 2000);\n    }\n\n    /**\n     * Return true if the text is only letters a-z, false otherwise\n     * @param  text text to eval\n     * @return      true if a-z, false otherwise\n     */\n    alphabetical(text: string): boolean {\n        return /^[a-z]+$/.test(text);\n    }\n\n    /**\n     * get a key=value fragment value by key\n     * @param  {string} name name of param to get the value of\n     * @param  {string} url  optional, if unspecified searches in current window location. Otherwise searches this string\n     * @return {string}      fragment param value\n     */\n    getNamedFragmentValue(name: string, url?: string): any {\n\n        if (!url) url = window.location.href;\n        name = name.replace(/[\\[\\]]/g, \"\\\\$&\");\n        var regex = new RegExp(\"[#&]\" + name + \"(?:=([^&#]*)|&|#|$)\", \"g\");\n        //match as many results as exist under the name\n        let results = [];\n        let match = regex.exec(url);\n        while (match != null) {\n            results.push(decodeURIComponent(match[1].replace(/\\+/g, \" \")));\n            match = regex.exec(url);\n        }\n        return results\n    }\n\n}\n\nexport class Tab {\n    title: string;\n    dataContext;\n    domain: string = \"\";\n    isDataTable: boolean;\n\n    isCloseable: boolean = false;\n    showScoreVariables: boolean = false;\n\n    constructor(title: string, isCloseable: boolean, showScoreVariables: boolean, domain: string, dataTable: boolean) {\n        this.title = title;\n        this.isCloseable = isCloseable;\n        this.showScoreVariables = showScoreVariables;\n        this.domain = domain;\n        this.isDataTable = dataTable;\n    }\n}\n","<link href=\"https://fonts.googleapis.com/css?family=Roboto+Mono:500\" rel=\"stylesheet\">\n\n<!-- Banner -->\n<div *ngIf=\"hasFeature('header') && bannerContent\" class=\"header\">\n    <div class=\"banner\">\n        <span class=\"bannerContent\" role=\"alert\" [innerHTML]=\"bannerContent\"></span>\n        <div [style.margin-bottom]=\"hasFeature('tabs') ? '0px' : '15px'\" class=\"bannerLinks\">\n            <div>\n                <a href=\"https://github.com/mitre-attack/attack-navigator\">Based on MITRE ATT&CK&reg; Navigator</a>\n            </div>\n            <div *ngIf=\"hasFeature('tabs')\" class=\"helpIcon\" matTooltip=\"help\" (click)=\"openHelpDialog()\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"18px\" viewBox=\"0 0 24 24\" width=\"18px\" fill=\"#FFFFFF\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"/></svg>\n            </div>\n        </div>\n    </div>\n</div>\n\n<!-- Header/Help -->\n<div *ngIf=\"hasFeature('header') && !bannerContent\" [style.margin-bottom]=\"hasFeature('tabs') ? '0px' : '15px'\" class=\"header\" >\n    <div class=\"logo\">\n        <a href=\"https://github.com/mitre-attack/attack-navigator\">Based on MITRE ATT&CK&reg; Navigator</a>\n    </div>\n    <div *ngIf=\"hasFeature('tabs')\" class=\"helpButton\" matTooltip=\"help\" (click)=\"openHelpDialog()\">\n        ?\n    </div>\n</div>\n\n<!-- Tabs display -->\n<div [style.margin-top]=\"hasFeature('header') ? '0px' : '15px'\" *ngIf=\"layerTabs.length > 0 && hasFeature('tabs')\">\n    <ul class=\"tabs\">\n        <!-- dynamic tabs (can be opened and closed) -->\n        <li *ngFor=\"let tab of layerTabs; let $i = index\" (click)=\"selectTab(tab)\" [class.active]=\"tab == activeTab\">\n            <span *ngIf=\"!tab == activeTab || !tab.isDataTable\" class=\"tab-title\" [style.cursor]=\"tab == activeTab ? 'default' : 'pointer'\">{{tab.isDataTable ? tab.dataContext.name : tab.title}}</span>\n            <input *ngIf=\"!(!tab == activeTab || !tab.isDataTable)\" [style.cursor]=\"tab == activeTab ? tab.isDataTable ? 'text' : 'default' : 'pointer'\" type=\"text\" [(ngModel)]=\"tab.dataContext.name\" [style.width]=\"tab.isDataTable ? ((tab.dataContext.name.length) * 8.4) + 'px' : (tab.title.length * 8.4) + 'px' \">\n            <span class=\"tab-close\" *ngIf=\"tab.isCloseable\" (click)=\"closeTab(tab)\">x</span>\n\n            <!-- tab enumerator (for layer operations) -->\n            <span class=\"tabEnumerator\" *ngIf=\"getActiveTab().showScoreVariables && tab.isDataTable && (!domain || tab.domain === domain) && alphabetical(indexToChar($i))\">{{indexToChar($i)}}</span>\n        </li>\n\n        <!-- open new tab button -->\n        <li *ngIf=\"layerTabs.length < 10\" class=\"addTab\" (click)=\"newBlankTab()\">+</li>\n    </ul>\n</div>\n<div *ngIf=\"layerTabs.length == 0\" class=\"newTab\">\n    <!-- you shouldn't ever see this, but just in case -->\n    <button (click)=\"newBlankTab()\">Start</button>\n</div>\n\n<ng-template #safariWarning>\n    <div class=\"safari-warning\">\n        <h3>WARNING</h3>\n        <p>\n            We’ve detected that you are using the Safari browser. As of Navigator version <b>4.2</b>, Safari is no longer supported due to an unfixable freeze that can occur when selecting a layer tab.\n        </p>\n        <p>\n            We recommend you use Chrome or Firefox instead. You can continue to use the Navigator in Safari, but you may lose work if the application freezes.\n        </p>\n        <button mat-button (click)=\"safariDialogRef.close()\">Dismiss</button>\n    </div>\n</ng-template>\n\n<!-- New tab template -->\n<ng-template [ngIf]=\"activeTab && !activeTab.isDataTable\">\n    <div class=\"newTab border\">\n        <mat-accordion class=\"headers-align\">\n\n            <!-- Create new layer interface -->\n            <mat-expansion-panel #newlayer>\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        Create New Layer\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        Create a new empty layer\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <!-- Domain buttons for latest version -->\n                <table class=\"btn-group\" role=\"group\">\n                    <ng-template ngFor let-domain [ngForOf]=\"filterDomains(ds.versions[0])\" let-domainIndex=\"index\">\n                        <td><button mat-raised-button (click)=\"newLayer(domain.id)\">{{domain.name}}</button></td>\n                    </ng-template>\n                </table>\n\n                <!-- More domain/version options -->\n                <mat-expansion-panel>\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                More Options\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                    <table class=\"layerOpTable\">\n                        <!-- Choose version -->\n                        <tr>\n                            <td>\n                                <mat-form-field>\n                                    <mat-select placeholder=\"version\" [(ngModel)]=\"nVersion\" required>\n                                        <mat-option [value]=\"null\">none</mat-option>\n                                        <mat-option *ngFor=\"let nVersion of this.dataService.versions\" [value]=\"nVersion\">{{nVersion}}</mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </td>\n                            <td>\n                                Choose the version for the new layer. <em>*Versions prior to {{ds.versions[ds.versions.length-1]}} are not supported by Navigator v{{nav_version}}.</em>\n                            </td>\n                        </tr>\n                        <!-- Choose domain -->\n                        <tr>\n                            <td>\n                                <mat-form-field>\n                                    <mat-select placeholder=\"domain\" [(ngModel)]=\"nDomain\" [disabled]=\"!nVersion\" required>\n                                        <mat-option [value]=\"null\">none</mat-option>\n                                        <mat-option *ngFor=\"let nDomain of filterDomains(nVersion)\" [value]=nDomain>{{nDomain.name}}</mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                            </td>\n                            <td [ngClass]=\"{disabled: !nVersion}\">\n                                Choose a domain for the new layer.\n                            </td>\n                        </tr>\n                    </table>\n\n                    <!-- Create new layer with chosen version & domain -->\n                    <button mat-button [disabled]=\"!nVersion || !nDomain\" (click)=\"newLayer(nDomain.id)\">Create</button>\n                </mat-expansion-panel>\n            </mat-expansion-panel>\n\n            <!-- Open existing layer interface -->\n            <mat-expansion-panel>\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                    Open Existing Layer\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        Load a layer from your computer or a URL\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n                <table class=\"inputTable\">\n                    <tr>\n                        <!-- Upload file from local -->\n                        <td><button mat-button (click)=\"openUploadPrompt()\">Upload from local</button>\n                        <input id=\"uploader\" type=\"file\" style=\"display: none\" (change)=\"loadLayerFromFile()\"/></td>\n\n                        <td><b style=\"font-size: 8pt\">OR</b></td>\n\n                        <!-- Upload layer via URL -->\n                        <td><mat-form-field>\n                            <input type=\"text\"\n                                   matInput\n                                   placeholder=\"Load from URL\"\n                                   [(ngModel)]=\"loadURL\"/>\n                            <button mat-button matSuffix mat-icon-button aria-label=\"go\" *ngIf=\"loadURL\" (click)=\"loadLayerFromURL(loadURL, true)\">></button>\n                        </mat-form-field></td>\n                    </tr>\n                </table>\n            </mat-expansion-panel>\n\n            <!-- Create layer from other layers -->\n            <mat-expansion-panel (opened)=\"activeTab.showScoreVariables = true\" (closed)=\"activeTab.showScoreVariables = false\">\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        Create Layer from other layers\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        Choose layers to inherit properties from\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <table class=\"layerOpTable\">\n                    <!-- Domain -->\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder=\"domain\" [(ngModel)]=\"domain\" required>\n                                    <mat-option [value]=\"null\">none</mat-option>\n                                    <mat-option *ngFor=\"let domain of this.dataService.domains\" [value]=domain.id>{{domain.name}} {{domain.version}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td>\n                            Choose the domain and version for the new layer. Only layers of the same domain and version can be merged.\n                        </td>\n                    </tr>\n\n                    <!-- Score expression -->\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <input type=\"text\"\n                                       matInput\n                                       placeholder=\"score expression\"\n                                       [disabled]=\"!domain\"\n                                       [(ngModel)]=\"scoreExpression\"\n                                       (keyup)=\"scoreExpression = scoreExpression.toLowerCase()\"\n                                       style=\"letter-spacing: 2px\" />\n                                <mat-hint style=\"color: red\" align=\"start\">{{getScoreExpressionError()}}</mat-hint>\n                            </mat-form-field>\n                        </td>\n                        <td [ngClass]=\"{disabled: !domain}\">\n                            Use constants (numbers) and layer variables (yellow, above) to write an expression for the initial value of scores in the new layer. A full list of supported operations can be found <a href=\"http://mathjs.org/docs/expressions/syntax.html#operators\">here</a>. Leave blank to initialize scores to 0.\n                        </td>\n                    </tr>\n\n                    <!-- Gradient -->\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder=\"gradient\" [(ngModel)]=\"gradient\" [disabled]=\"!domain\">\n                                    <mat-option [value]=\"null\">none</mat-option>\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td [ngClass]=\"{disabled: !domain}\">\n                            Choose which layer to import the scoring gradient from. Leave blank to initialize with the default scoring gradient.\n                        </td>\n                    </tr>\n\n                    <!-- Coloring -->\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder=\"coloring\" [(ngModel)]=\"coloring\" [disabled]=\"!domain\">\n                                    <mat-option [value]=\"null\">none</mat-option>\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td [ngClass]=\"{disabled: !domain}\">\n                            Choose which layer to import manually assigned colors from. Leave blank to initialize with no colors.\n                        </td>\n                    </tr>\n\n                    <!-- Comments -->\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder=\"comments\" [(ngModel)]=\"comments\" [disabled]=\"!domain\">\n                                    <mat-option [value]=\"null\">none</mat-option>\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td [ngClass]=\"{disabled: !domain}\">\n                            Choose which layer to import comments from. Leave blank to initialize with no comments.\n                        </td>\n                    </tr>\n\n                    <!-- States -->\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder=\"states\" [(ngModel)]=\"enabledness\" [disabled]=\"!domain\">\n                                    <mat-option [value]=\"null\">none</mat-option>\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td [ngClass]=\"{disabled: !domain}\">\n                            Choose which layer to import enabled/disabled states from. Leave blank to initialize all to enabled.\n                        </td>\n                    </tr>\n\n                    <!-- Filters -->\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder=\"filters\" [(ngModel)]=\"filters\" [disabled]=\"!domain\">\n                                    <mat-option [value]=\"null\">none</mat-option>\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td [ngClass]=\"{disabled: !domain}\">\n                            Choose which layer to import filters from. Leave blank to initialize with no filters.\n                        </td>\n                    </tr>\n\n                    <!-- Legend -->\n                    <tr>\n                        <td>\n                            <mat-form-field>\n                                <mat-select placeholder=\"legend\" [(ngModel)]=\"legendItems\" [disabled]=\"!domain\">\n                                    <mat-option [value]=\"null\">none</mat-option>\n                                    <mat-option *ngFor=\"let vm of getLayers()\" [value]=vm>{{vm.name}}</mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </td>\n                        <td [ngClass]=\"{disabled: !domain}\">\n                            Choose which layer to import the legend from. Leave blank to initialize with an empty legend.\n                        </td>\n                    </tr>\n                </table>\n\n                <!-- Create -->\n                <button mat-button [disabled]=\"getScoreExpressionError() || !domain\" (click)=\"layerByOperation(); showScoreVariables = false\">Create</button>\n            </mat-expansion-panel>\n\n            <!-- Customized Navigator-->\n            <mat-expansion-panel>\n                <mat-expansion-panel-header>\n                    <mat-panel-title>\n                        Create Customized Navigator\n                    </mat-panel-title>\n                    <mat-panel-description>\n                        Create a hyperlink to a customized ATT&CK Navigator\n                    </mat-panel-description>\n                </mat-expansion-panel-header>\n\n                <table class=\"inputTable\">\n                    <!-- Default layers -->\n                    <tr>\n                        <td><h1>Default Layers</h1></td>\n                        <td></td>\n                    </tr>\n                    <tr class=\"custom_nav_inputsection\">\n                        <td>\n                            <ul class=\"layerLinks\">\n                                <li *ngFor=\"let layerLinkURL of layerLinkURLs; let i = index trackBy:trackByFunction\">\n                                    <mat-form-field>\n                                        <input type=\"text\" matInput\n                                            [placeholder]=\"'default layer URL ' + (i + 1)\" [(ngModel)]=\"layerLinkURLs[i]\"/>\n                                        <button mat-button matSuffix mat-icon-button aria-label=\"remove\" (click)=\"removeLayerLink(i)\">\n                                            x\n                                        </button>\n                                    </mat-form-field>\n                                </li>\n                                <li>\n                                    <button mat-button (click)=\"addLayerLink()\">\n                                        add {{layerLinkURLs.length > 0? \"another\" : \"a\"}} layer link\n                                    </button>\n                                </li>\n                            </ul>\n                        </td>\n                        <td>Enter the URLs of layers hosted on the web. The custom navigator will open these layers by default.</td>\n                    </tr>\n\n                    <!-- Navigator Features -->\n                    <tr>\n                        <td><h1>Navigator Features</h1></td>\n                        <td></td>\n                    </tr>\n                    <ng-template ngFor let-featureItem [ngForOf]=\"customizedConfig\" let-featureItemIndex=\"index\">\n                        <!-- features -->\n                        <tr class=\"featureRow noselect\" *ngIf=\"!featureItem.subfeatures\"  (click)=\"featureItem.enabled = !featureItem.enabled\">\n                            <td class=\"featureRow-button\">\n                                <img height=\"16px\" [src]=\"featureItem.enabled ? 'assets/icons/ic_check_box_black_24px.svg' : 'assets/icons/ic_check_box_outline_blank_black_24px.svg'\"/> {{featureItem.name.split(\"_\").join(\" \")}}\n                            </td>\n                            <td>{{featureItem.description}}</td>\n                        </tr>\n                        <!-- sub-featuers -->\n                        <tr *ngIf=\"featureItem.subfeatures\">\n                            <td>\n                                <h2>{{featureItem.name.split(\"_\").join(\" \")}}</h2>\n                            </td>\n                            <td></td>\n                        </tr>\n                        <ng-template ngFor let-subfeature [ngForOf]=\"featureItem.subfeatures\" let-subfeatureIndex=\"index\" let-last=\"last\">\n                            <tr class=\"featureRow noselect\" (click)=\"subfeature.enabled = !subfeature.enabled\">\n                                <td class=\"featureRow-button subfeature\" [class.last]=\"last\" style=\"padding-left: 20px\" >\n                                    <img height=\"16px\" [src]=\"subfeature.enabled ? 'assets/icons/ic_check_box_black_24px.svg' : 'assets/icons/ic_check_box_outline_blank_black_24px.svg'\"/> {{subfeature.name.split(\"_\").join(\" \")}}\n                                </td>\n                                <td class=\"subfeature\" [class.last]=\"last\">{{subfeature.description}}</td>\n                            </tr>\n                        </ng-template>\n                    </ng-template>\n                </table>\n\n                <!-- Custom Navigator URL -->\n                <div style=\"text-align: center; margin-top: 20px\">\n                    <mat-form-field id=\"layerlinkfield\">\n                        <input id=\"layerLink\" type=\"text\"\n                        matInput\n                        readonly=\"readonly\"\n                        (click)=\"selectLayerLink()\"\n                        [value]=\"getLayerLink()\"\n                        placeholder=\"custom navigator URL\"/>\n                        <button (click)=\"copyLayerLink()\" mat-button matSuffix mat-icon-button aria-label=\"copy\"><img src=\"assets/icons/ic_content_copy_black_24px.svg\" width=\"14px\" alt=\"copy\" matTooltip=\"copy\" matTooltipPosition=\"right\"></button>\n                        <mat-hint *ngIf=\"copiedRecently\">copied</mat-hint>\n                    </mat-form-field>\n                </div>\n            </mat-expansion-panel>\n        </mat-accordion>\n\n        <!-- Help dialog -->\n        <div class=\"helpButtonContainer\">\n            <button mat-button (click)=\"openHelpDialog()\">help</button>\n        </div>\n\n    </div>\n</ng-template>\n\n<ng-template [ngIf]=\"activeTab && activeTab.isDataTable\">\n    <DataTable [viewModel]=\"activeTab.dataContext\"></DataTable>\n</ng-template>\n","import { Input, Output, EventEmitter, Directive } from '@angular/core';\nimport { Matrix, Technique, Tactic } from '../data.service';\nimport { ViewModel } from '../viewmodels.service';\nimport { ConfigService } from '../config.service';\ndeclare var tinycolor: any; //use tinycolor2\n\n@Directive()\nexport abstract class MatrixCommon {\n    @Input() matrix: Matrix;\n    @Input() viewModel: ViewModel;\n    @Output() selectionChanged = new EventEmitter<any>();\n\n    constructor(private configService: ConfigService) {\n        this.configService = configService;\n    }\n\n\n    /**\n     * filter tactics according to viewmodel state\n     * @param {Tactic[]} tactics to filter\n     * @returns {Tactic[]} filtered tactics\n     */\n    public filterTactics(tactics: Tactic[]): Tactic[] {\n        return this.viewModel.filterTactics(tactics, this.matrix);\n    }\n\n    /**\n     * filter techniques according to viewModel state\n     * @param {Technique[]} techniques list of techniques to filter\n     * @param {Tactic} tactic tactic the techniques fall under\n     * @returns {Technique[]} filtered techniques\n     */\n    public filterTechniques(techniques: Technique[], tactic: Tactic): Technique[] {\n        return this.viewModel.filterTechniques(techniques, tactic, this.matrix);\n    }\n\n    /**\n     * sort techniques accoding to viewModel state\n     * @param {Technique[]} techniques techniques to sort\n     * @param {Tactic} tactic tactic the techniques fall under\n     * @returns {Technique[]} sorted techniques\n     */\n    public sortTechniques(techniques: Technique[], tactic: Tactic): Technique[] {\n        return this.viewModel.sortTechniques(techniques, tactic);\n    }\n\n    /**\n     * apply sort and filter state to techniques\n     * @param {Technique[]} techniques techniques to sort and filter\n     * @param {Tactic} tactic that the techniques fall under\n     * @returns {Technique[]} sorted and filtered techniques\n     */\n    public applyControls(techniques: Technique[], tactic: Tactic): Technique[] {\n        return this.viewModel.applyControls(techniques, tactic, this.matrix);\n    }\n\n\n    public onTechniqueLeftClick(event: any, technique: Technique, tactic: Tactic) {\n        if (!this.configService.getFeature('selecting_techniques')) {\n            //if selecting is disabled, same behavior as right click. Shouldn't ever get to this point because it should be handled in technique-cell\n            return;\n        }\n        if (event.shift || event.ctrl || event.meta) {\n            // add to selection\n            if (this.viewModel.isTechniqueSelected(technique, tactic)) this.viewModel.unselectTechnique(technique, tactic);\n            else this.viewModel.selectTechnique(technique, tactic)\n        } else {\n            // replace selection\n            if (this.viewModel.getSelectedTechniqueCount() > 1) {\n                if (this.viewModel.isTechniqueSelected)\n                this.viewModel.clearSelectedTechniques();\n                this.viewModel.selectTechnique(technique, tactic);\n            } else if (this.viewModel.isTechniqueSelected(technique, tactic))  { //unselect currently selected\n                this.viewModel.clearSelectedTechniques();\n            } else { //replace\n                this.viewModel.clearSelectedTechniques();\n                this.viewModel.selectTechnique(technique, tactic);\n            }\n        }\n        this.selectionChanged.emit();\n    }\n\n    public onToggleSubtechniquesVisible(technique: Technique, tactic: Tactic) {\n        if (technique.subtechniques.length == 0) return;\n        let tvm = this.viewModel.getTechniqueVM(technique, tactic);\n        tvm.showSubtechniques = !tvm.showSubtechniques;\n    }\n\n    public onTechniqueHighlight(event: any, technique: Technique, tactic: Tactic) {\n        this.viewModel.highlightTechnique(technique, tactic);\n    }\n    public onTechniqueUnhighlight(event: any) {\n        this.viewModel.clearHighlight();\n    }\n\n    public onTacticClick(tactic: Tactic) {\n        if (this.viewModel.isTacticSelected(tactic)) this.viewModel.unselectAllTechniquesInTactic(tactic);\n        else this.viewModel.selectAllTechniquesInTactic(tactic);\n    }\n\n    public get tacticRowStyle(): any {\n        return this.viewModel.showTacticRowBackground ? { \n            \"background\": this.viewModel.tacticRowBackground,\n            \"color\": tinycolor.mostReadable(this.viewModel.tacticRowBackground, ['white', 'black'])\n         } : {}\n    }\n}\n\n// export class TechniqueEvent {\n//     public readonly event: Event;\n//     public readonly technique: Technique;\n//     constructor(event, technique) {\n//         this.technique = technique;\n//         this.event = event;\n//     }\n// }\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { ElementRef } from \"@angular/core\";\n\nexport abstract class CellPopover {\n    private theElement: any;\n    constructor(element: ElementRef) {\n        this.theElement = element.nativeElement;\n    }\n\n    /**\n     * Get the location of the tooltip according to the location on the screen. \n     * Returns one of the following:\n     * \"top left\":\n     * ------------------\n     * |    XXXX      |\n     * |    XXXX      |\n     * |       X      |\n     * |              |\n     * ------------------\n     * \"top right\":\n     * ------------------\n     * |        XXXX  |\n     * |        XXXX  |\n     * |       X      |\n     * |              |\n     * ------------------\n     * \"bottom left\":\n     * ------------------\n     * |                |\n     * |  XXXX X        |\n     * |  XXXX          |\n     * ------------------\n     * \"bottom right\":\n     * ------------------\n     * |                |\n     * |       X XXXX   |\n     * |         XXXX   |\n     * ------------------\n     * @returns {string} direction\n     */\n    protected getPosition(): string {\n        let boundingRect = this.theElement.getBoundingClientRect();\n        let halfWidth = window.innerWidth / 2;\n        let halfHeight = window.innerHeight / 2;\n        let position = [];\n        if (boundingRect.right > halfWidth) position.push(\"left\");\n        else                               position.push(\"right\");\n        if (boundingRect.bottom > halfHeight) position.push(\"top\");\n        else                               position.push(\"bottom\");\n        return position.join(\" \");\n    }\n}","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as globals from \"../globals\";\n\n@Component({\n    selector: 'help',\n    templateUrl: './help.component.html',\n    styleUrls: ['./help.component.scss']\n})\nexport class HelpComponent implements OnInit {\n    nav_version: string = globals.nav_version;\n\n    constructor(private dialogRef: MatDialogRef<HelpComponent>, \n                @Inject(MAT_DIALOG_DATA) public data) { }\n\n    ngOnInit() { }\n\n    scrollTo(sectionID: string): void {\n        let element = document.getElementById(sectionID);\n        element.scrollIntoView();\n    }\n}\n","<div class=\"help-dialog\">\n    <div class=\"content\">\n        <h1>Table of Contents</h1>\n\n        <ul class=\"toc\">\n            <li><a href=\"#\"></a></li>\n            <li (click)=\"scrollTo('about')\">About</li>\n            <li>\n                <span (click)=\"scrollTo('help_Layers')\">Layers</span>\n                <ul>\n                    <li (click)=\"scrollTo('help_Creating_New_Layers')\">Creating New Layers</li>\n                    <li (click)=\"scrollTo('help_Saving_and_Loading_Layers')\">Saving and Loading Layers</li>\n                    <li (click)=\"scrollTo('help_Creating_Layers_from_Other_Layers')\">Creating Layers from Other Layers</li>\n                </ul>\n            </li>\n            <li>\n                <span (click)=\"scrollTo('help_Layer_Controls')\">Layer Controls</span>\n                <ul>\n                    <li (click)=\"scrollTo('help_Layer_Information')\">Layer Information</li>\n                    <li (click)=\"scrollTo('help_Sorting')\">Sorting</li>\n                    <li (click)=\"scrollTo('help_Filtering')\">Filtering</li>\n                    <li>\n                        <span (click)=\"scrollTo('help_Color_Setup')\">Color Setup</span>\n                        <ul>\n                            <li (click)=\"scrollTo('help_Tactic_Row_Background')\">Tactic Row Background</li>\n                            <li (click)=\"scrollTo('help_Scoring_Gradient')\">Scoring Gradient</li>\n                        </ul>\n                    </li>\n                    <li (click)=\"scrollTo('help_Hiding_Disabled_Techniques')\">Hiding Disabled Techniques</li>\n                    <li (click)=\"scrollTo('help_Show_Hide_Subtechniques')\">Showing or Hiding Sub-techniques</li>\n                    <li>\n                        <span (click)=\"scrollTo('help_Changing_Layout')\">Configuring the Matrix</span>\n                        <ul>\n                            <li (click)=\"scrollTo('help_Side_Layout')\">Side Layout</li>\n                            <li (click)=\"scrollTo('help_Flat_Layout')\">Flat Layout</li>\n                            <li (click)=\"scrollTo('help_Mini_Layout')\">Mini Layout</li>\n                            <li (click)=\"scrollTo('help_IDs_Names')\">Showing IDs and Names</li>\n                            <li>\n                              <span (click)=\"scrollTo('help_Aggregate_Scores')\">Aggregate Scores</span>\n                              <ul>\n                                <li (click)=\"scrollTo('help_Show_Hide_Aggregate')\">Showing or Hiding Aggregate Scores</li>\n                                <li (click)=\"scrollTo('help_Count_Unscored')\">Counting Unscored Techniques</li>\n                                <li (click)=\"scrollTo('help_Choose_Aggregate')\">Choosing an Aggregate Function</li>\n                              </ul>\n                            </li>\n                        </ul>\n                    </li>\n                    <li (click)=\"scrollTo('help_Legend')\">Legend</li>\n                </ul>\n            </li>\n            <li>\n                <span (click)=\"scrollTo('help_Technique_Controls')\">Technique Controls</span>\n                <ul>\n                    <li (click)=\"scrollTo('help_Disabling_Techniques')\">Disabling Techniques</li>\n                    <li (click)=\"scrollTo('help_Assigning_Manual_Colors')\">Assigning Manual Colors</li>\n                    <li (click)=\"scrollTo('help_Scoring_Techniques')\">Scoring Techniques</li>\n                    <li (click)=\"scrollTo('help_Adding_Comments_to_Techniques')\">Adding Comments to Techniques</li>\n                    <li (click)=\"scrollTo('help_Clearing_Selected_Techniques_Annotations')\">Clearing Annotations on Techniques</li>\n                </ul>\n            </li>\n            <li>\n                <span (click)=\"scrollTo('help_Selecting_Techniques')\">Selecting Techniques</span>\n                <ul>\n                    <li (click)=\"scrollTo('help_Selecting_with_the_Mouse')\">Selecting with the Mouse</li>\n                    <li (click)=\"scrollTo('help_Selection_Behavior')\">Selection Behavior</li>\n                    <li (click)=\"scrollTo('help_Search_Interface')\">Search & Multiselect Interface</li>\n                </ul>\n            </li>\n            <li>\n                <span (click)=\"scrollTo('help_Customizing_The_Navigator')\">Customizing The Navigator</span>\n                <ul>\n                    <li (click)=\"scrollTo('help_Default_Layers')\">Default Layers</li>\n                    <li (click)=\"scrollTo('help_Disable_Features')\">Disabling Features</li>\n                </ul>\n            </li>\n            <li>\n                <span (click)=\"scrollTo('help_Rendering_Layers_As_SVG')\">Rendering Layers as SVG</span>\n                <ul>\n                    <li (click)=\"scrollTo('help_exporting_units')\">Measurement Units</li>\n                    <li (click)=\"scrollTo('help_exporting_image_size')\">Configuring Image Size</li>\n                    <li (click)=\"scrollTo('help_exporting_text')\">Configuring Text</li>\n                    <li (click)=\"scrollTo('help_exporting_legend_config')\">Customizing the Legend</li>\n                    <li (click)=\"scrollTo('help_exporting_display_settings')\">Display Settings</li>\n                </ul>\n            </li>\n            <li (click)=\"scrollTo('help_Rendering_Layers_As_XLSX')\">Exporting Layers to MS Excel</li>\n            <li (click)=\"scrollTo('notice')\">Notice</li>\n        </ul>\n\n        <h1 id=\"about\"> MITRE ATT&CK® Navigator Version {{nav_version}}</h1>\n        <p>\n            The ATT&CK Navigator is designed to provide basic navigation and\n            annotation of ATT&CK matrices, something that people are already doing\n            today in tools like Excel. We've designed it to be simple and generic -\n            you can use the Navigator to visualize your defensive coverage, your\n            red/blue team planning, the frequency of detected techniques or anything\n            else you want to do. The Navigator doesn't care - it just allows you to\n            manipulate the cells in the matrix (color coding, adding a comment,\n            assigning a numerical value, etc.). We thought having a simple tool that\n            everyone could use to visualize the matrix would help make it easy to\n            use ATT&CK.\n        </p>\n        <p>\n            The principal feature of the Navigator is the ability for users to\n            define layers - custom views of the ATT&CK knowledge base - e.g. showing\n            just those techniques for a particular platform or highlighting\n            techniques a specific adversary has been known to use. Layers can be\n            created interactively within the Navigator or generated programmatically\n            and then visualized via the Navigator.\n        </p>\n        <p>\n            Bug reports and feature requests can be submitted to our <a href=\"https://github.com/mitre-attack/attack-navigator/issues\">GitHub Issue Tracker</a>.\n            The source code for the ATT&CK Navigator can be retrieved from our\n            <a href=\"https://github.com/mitre-attack/attack-navigator\">GitHub repository</a>.\n        </p>\n\n\n        <!-- sections -->\n        <h1 id=\"help_Layers\">Layers</h1>\n        <p>\n        A layer constitutes a view of the tactics and techniques matrix for a\n        specific technology domain. Version {{nav_version}} of the Navigator can manipulate\n        either the Enterprise, Mobile, or ICS\n        ATT&CK technology domain knowledge bases. Within a technology domain, the\n        Navigator allows you to filter your view of the matrix in a variety of\n        ways, displaying the tactics and techniques that are important to you.\n        </p>\n        <p>\n        You can view the definition of any technique in the visible matrix by\n        right-clicking on the technique and selecting \"view technique\" in the\n        pop-up menu. A new browser tab will be opened displaying the definition of\n        the technique. In this way the Navigator allows you to explore a given\n        ATT&CK matrix and access the definitions of the techniques.\n        </p>\n        <p>\n        Beyond the filters, layers also provide a means to customize your view of\n        the matrix. To that end you can\n        <span class=\"section-link\" (click)=\"scrollTo('help_Assigning_Manual_Colors')\">color</span>,\n        <span class=\"section-link\" (click)=\"scrollTo('help_Hiding_Disabled_Techniques')\">hide</span>,\n        <span class=\"section-link\" (click)=\"scrollTo('help_Adding_Comments_to_Techniques')\">comment</span>,\n        and assign <span class=\"section-link\" (click)=\"scrollTo('help_Scoring_Techniques')\">numeric scores</span>\n        to techniques to aid in analysis of threats and your defenses\n        against those threats. As stated earlier, the Navigator is designed to be\n        simple, allowing you to assign whatever meaning you want to the\n        color-codings, scores, and comments. This way the Navigator can support\n        whatever you want to do without requiring changes to the Navigator code\n        itself.\n        </p>\n        <p>\n        Each layer created is independent of other layers. However, layers can be\n        <span class=\"section-link\" (click)=\"scrollTo('help_Creating_Layers_from_Other_Layers')\">combined</span>\n        in ways to support analysis, or\n        <span class=\"section-link\" (click)=\"scrollTo('help_Saving_and_Loading_Layers')\">saved locally</span>. Layer files are\n        saved in easy to parse and easy to generate JSON file so that ATT&CK data\n        can be used in other applications, analyzed beyond the capability of the\n        ATT&CK Navigator, and generated by tools for import into the Navigator.\n        The Layer file format is described <a href=\"assets/NavigatorLayerFileFormatv4_1.pdf\">here</a>.\n        </p>\n\n\n        <h2 id=\"help_Creating_New_Layers\">Creating New Layers</h2>\n        <p>\n            To create a new layer, open a new tab and click the \"Create New Layer\" dropdown.\n            The quick access buttons will create a layer with the current version of ATT&CK.\n            Past versions of ATT&CK compatible with the Navigator are accessible in the\n            \"More Options\" dropdown. This interface allows you to specify the desired version\n            and domain for the new layer. Note that for performance reasons, the Navigator\n            currently imposes a limit of ten (10) active layers at any given point in time.\n        </p>\n        <h2 id=\"help_Saving_and_Loading_Layers\">Saving and Loading Layers</h2>\n        <p>\n            Layers can be saved by clicking the \"save layer\" button (<img src=\"assets/icons/ic_file_download_black_24px.svg\">). This will open a dialog\n            to save a layer configuration file to your local computer. This contains\n            the configuration for the techniques that have been customized\n            (commented, colored, assigned a score, or disabled) as well as the\n            scoring gradient setup, filter selection, layer name, layer description,\n            view configuration.\n        </p>\n        <p>\n            Saved layer configuration files can be opened in the ATT&CK Navigator to\n            restore a layer you've worked on previously. To do so, open a new tab\n            and open the \"Open Existing Layer\" panel. Then click \"Upload from\n            local\", and select your saved configuration file. Doing so will restore\n            your saved layer to the ATT&CK Navigator. This interface also has a \"load from URL\"\n            input allowing you to open a layer json from a remote source.\n        </p>\n        <h2 id=\"help_Creating_Layers_from_Other_Layers\">Creating Layers from Other Layers</h2>\n        <p>\n            Layers can be created which inherit properties from other layers. Several fields\n            exist which can be used to choose which layers to inherit properties from:\n        </p>\n        <ul>\n            <li>\n                <p>\n                    <b>Domain:</b> choose the domain and version for the new layer. Layers can only inherit\n                    properties from other layers of the same domain and version.\n                </p>\n            </li>\n            <li>\n                <p>\n                    <b>Score Expression:</b> Technique\n                    <span class=\"section-link\" (click)=\"scrollTo('help_Scoring_Techniques')\">scores</span> in the created layer are\n                    initialized to the result of this expression. This field should take\n                    the form of an equation or constant, using variables for layers.\n                    Layer variables are shown in yellow on tabs when the \"create layer\n                    from other layers\" panel is opened:\n                </p>\n                <img src=\"assets/image_scoreVariableExample.png\" height=\"100px\">\n                <p>\n                    Each technique's score is created independently using the score expression. For example,\n                    with a score expression of <code>a+b</code>, some technique <i>t</i> in the output layer would\n                    be the sum of <i>t<sub>a</sub></i> and <i>t<sub>b</sub></i>.\n                </p>\n                <p>\n                    Expressions can also be comparative, for example <code>a>b</code>\n                    will create a layer with a score of 1 whereever <code>a>b</code> and\n                    0 whereever <code>a<=b</code>. Such boolean expressions can be\n                    extended using <code>and</code>, <code>or</code>, <code>xor</code>\n                    and <code>not</code>. You can also use ternary expressions such as <code>a > b ? 25 : 10</code>\n                    See <a href=\"http://mathjs.org/docs/expressions/syntax.html#operators\">\n                        this page</a> for a full list of operators.\n                    </p>\n                    Some example score expressions:\n                    <ul>\n                        <li>\n                            <code>(a+b)/2</code> (average two layers)\n                        </li>\n                        <li>\n                            <code>a+b+c</code>\n                        </li>\n                        <li>\n                            <code>a*(b+c)</code>\n                        </li>\n                        <li>\n                            <code>100-a</code> (reverse the scoring of <code>a</code>, assuming <code>a</code> is on a 0-100 scale)\n                        </li>\n                        <li>\n                            <code>(a>b) and (a>=75)</code>\n                        </li>\n                    </ul>\n                </li>\n                <li>\n                    <b>Gradient:</b> choose which layer to inherit <span class=\"section-link\" (click)=\"scrollTo('help_Scoring_Gradient')\">scoring gradient</span> from.\n                </li>\n                <li>\n                    <b>Coloring:</b> choose which layer to inherit <span class=\"section-link\" (click)=\"scrollTo('help_Assigning_Manual_Colors')\">manually assigned technique colors</span> from.\n                </li>\n                <li>\n                    <b>Comments:</b> choose which layer to inherit <span class=\"section-link\" (click)=\"scrollTo('help_Adding_Comments_to_Techniques')\">technique comments</span> from.\n                </li>\n                <li>\n                    <b>States:</b> choose which layer to inherit technique <span class=\"section-link\" (click)=\"scrollTo('help_Disabling_Techniques')\">enabled/disabled states</span> from.\n                </li>\n                <li>\n                    <b>Filters:</b> choose which layer to inherit <span class=\"section-link\" (click)=\"scrollTo('help_Filtering')\">layer filter configuration</span> from.\n                </li>\n                <li>\n                    <b>Legend:</b> choose which layer to inherit <span class=\"section-link\" (click)=\"scrollTo('help_Legend')\">legend items</span> from.\n                </li>\n            </ul>\n            <p>\n                Tactic-spanning Techniques are evaluated individually: if a technique is annotated differently\n                in two tactics, the output layers' techniques will honor this difference.\n            </p>\n            <p>\n                <b>Tip:</b> Score expressions don't need to use variables! You can use\n                this to create a new layer with a constant score for each technique. For\n                example, if you wanted a new layer where all techniques are scored 50, you\n                could simply type 50 into the score expression input.\n            </p>\n\n            <h1 id=\"help_Layer_Controls\">Layer Controls</h1>\n            <h2 id=\"help_Layer_Information\">\n                <img src=\"assets/icons/ic_description_black_24px.svg\">\n                Layer Information\n            </h2>\n            <p>\n                    The layer name and description can be edited in the layer information dropdown. The layer name can also be edited where it appears in the tab title.\n                    Additionally, the layer information panel allows the user to add metadata to the layer. Metadata can be useful for supporting other applications that use the layer format,\n                    or for attaching additional descriptive fields to the layer.\n            </p>\n            <p>\n\n                <b>Note:</b> techniques can also have metadata, however metadata on techniques is not editable in the Navigator. Metadata on techniques is shown\n                in tooltips.\n            </p>\n\n\n            <h2 id=\"help_Sorting\">\n                Sorting\n            </h2>\n            <p>\n                There are four modes of sorting. Clicking the sorting button will toggle between the modes.\n            </p>\n\n            <ul>\n                <li>\n                    <img src=\"assets/icons/ic_sort_alphabetically_ascending_black_24px.svg\"/>\n                    The table will sort techniques alphabetically by name in ascending order.\n                </li>\n                <li>\n                    <img src=\"assets/icons/ic_sort_alphabetically_descending_black_24px.svg\"/>\n                    The table will sort techniques alphabetically by name in descending order.\n                </li>\n                <li>\n                    <img src=\"assets/icons/ic_sort_numerically_ascending_black_24px.svg\"/>\n                    The table will sort techniques by their score in ascending order. Techniques with no score are treated as if their score is 0.\n                </li>\n                <li>\n                    <img src=\"assets/icons/ic_sort_numerically_descending_black_24px.svg\"/>\n                    The table will sort techniques by their score in descending order. Techniques with no score are treated as if their score is 0.\n                </li>\n            </ul>\n\n\n\n            <h2 id=\"help_Filtering\">\n                <img src=\"assets/icons/ic_filter_list_black_24px.svg\"/>\n                Filtering\n            </h2>\n            <p>\n                The list of techniques and tactics can be filtered in the filtering menu.\n                Filters are additive - the displayed set of techniques is the logical <i>or</i>\n                of the techniques of the filters selected.\n            </p>\n            <h3>Platform Filter</h3>\n            <p>\n                The platform filter allows the user to control which techniques are\n                included in a layer based on whether or not a particular technique\n                applies to a particular technology platform.  Technology platforms\n                are tied to the specific technology domain you are visualizing. For\n                the Enterprise technology domain, the defined platforms are:\n                PRE, Windows, Linux, macOS, Network, AWS, GCP, Azure, Azure AD, Office 365, and SaaS.  For the Mobile technology domain, the\n                defined platforms are: Android and iOS. For the ICS technology domain, the defined platforms are Windows, Control Server, Data Historian, \"Engineering Workstation\", Field Controller/RTU/PLC/IED, Human-Machine Interface, Input/Output Server, Safety Instrumented System/Protection Relay.\n            </p>\n            <p>\n                Each technique in an ATT&CK matrix is tied to one or more platforms.\n                In the Navigator, if you wanted to see only those techniques in\n                Enterprise ATT&CK which applied to the Linux platform, you would\n                deselect \"Windows\" and \"macOS\" under the platform filter. If later you\n                decided to also include techniques known to apply to macOS\n                platforms, you could select \"macOS\" as well and those techniques would\n                be added to the visible layer.\n            </p>\n\n            <p>\n                <b>Tip:</b> Techniques can also be hidden from your view by using the <span class=\"section-link\" (click)=\"scrollTo('help_Hiding_Disabled_Techniques')\">hide disabled techniques</span>\n                button. Couple this with the <span class=\"section-link\" (click)=\"scrollTo('help_Multiselct_Interface')\">multiselect interface</span>\n                to hide techniques which are contained in specific threat or software groupings.\n            </p>\n\n            <h2 id=\"help_Color_Setup\">\n                <img src=\"assets/icons/ic_palette_black_24px.svg\"/>\n                Color Setup\n            </h2>\n            <h3 id=\"help_Tactic_Row_Background\">\n                Tactic Row Background\n            </h3>\n            <p>\n                The background color of the tactic row can be set in the tactic row background section of the color setup menu. The color\n                will only be displayed if the \"show\" checkbox is selected. The tactic row background will not be shown when in the\n                <span class=\"section-link\" (click)=\"scrollTo('help_Mini_Layout')\">mini view</span>.\n            </p>\n\n\n            <h3 id=\"help_Scoring_Gradient\">Scoring Gradient</h3>\n            <p>\n                Techniques which are assigned a score will be colored according to a\n                gradient defined in the scoring gradient section in the color setup menu. Technique scores are\n                mapped to a color scaled linearly between the \"low value\" and \"high value\"\n                inputs. For example, on a red-green scale, if \"low value\" were set to 0 and\n                \"high value\" were set to 50, a score of 25 would fall on yellow -- exactly\n                halfway between red and green. Scores below the low value are colored as if\n                they have the low value, and scores above the high value are colored as if\n                they have the high value.\n            </p>\n            <p>\n                Several preset gradients are present within the preset dropdown. If no preset\n                matches your desired gradient, you can create your own by adding and removing\n                colors using the interface.\n            </p>\n            <p>\n                <b>Tip:</b> If your scores are binary (0 or 1), consider setting the low\n                value of 0 to white and the high of 1 to some other\n                color to only color the techniques which have the value of 1.\n            </p>\n\n            <h2 id=\"help_Hiding_Disabled_Techniques\">\n                <img src=\"assets/icons/ic_visibility_off_black_24px.svg\">\n                Hiding Disabled Techniques\n            </h2>\n            <p>\n                Techniques that are <span class=\"section-link\" (click)=\"scrollTo('help_Disabling_Techniques')\">disabled</span> can be hidden by toggling the \"hide disabled techniques\" button.\n                Hidden techniques are still present in the data when saved and can still be annotated, but won't be visible in the view.\n            </p>\n            <p>\n                <b>Tip:</b> This button has powerful synergy with the\n                <span class=\"section-link\" (click)=\"scrollTo('help_Multiselct_Interface')\">multiselect interface</span>. Use the\n                multiselect interface to select techniques which match your criteria,\n                disable them, and then turn on hiding disabled techniques to remove entire\n                groups of techniques from your view.\n            </p>\n\n            <h2 id=\"help_Show_Hide_Subtechniques\">\n                Showing or Hiding Sub-techniques\n            </h2>\n            <p>\n                Sub-techniques in the view are nested under their parent technique and are hidden by default.\n            </p>\n            <ul>\n                <li>\n                    <img alt=\"expand icon\" src=\"assets/icons/unfold_more_black_24px.svg\">\n                    All sub-techniques can be shown by clicking the \"expand sub-techniques\" button.\n                </li>\n                <li>\n                    <img alt=\"expand annotated icon\" src=\"assets/icons/unfold_more_alt_black_24px.svg\">\n                    All annotated sub-techniques can be shown by clicking the \"expand annotated sub-techniques\" button.\n                </li>\n                <li>\n                    <img alt=\"collapse icon\" src=\"assets/icons/unfold_less_black_24px.svg\">\n                    All sub-techniques can be hidden by clicking the \"collapse sub-techniques\" button.\n                </li>\n            </ul>\n            <p>\n                <b>Tip:</b> Sub-techniques can also be shown or hidden on each individual\n                technique when in the <span class=\"section-link\" (click)=\"scrollTo('help_Side_Layout')\">side layout</span> or\n                <span class=\"section-link\" (click)=\"scrollTo('help_Flat_Layout')\">flat layout</span> by clicking the gray sidebar on the\n                technique cell.\n            </p>\n\n            <h2 id=\"help_Changing_Layout\">\n                <img src=\"assets/icons/ic_view_large_black_24px.svg\">\n                Configuring the layout\n            </h2>\n            <p>\n                The ATT&CK Navigator has controls for how the ATT&CK Matrices are displayed. Access controls to change layout via the \"Matrix Configuration\" dropdown menu.\n            </p>\n            <h3 id=\"help_Side_Layout\">\n                Side Layout\n            </h3>\n            <p>\n                The side layout displays sub-techniques adjacent to their parent techniques. Techniques with sub-techniques are denoted by the presence of a right-positioned sidebar which can be clicked to show sub-techniques. Sub-techniques are differentiated from techniques by position in the tactic column.\n            </p>\n            <h3 id=\"help_Flat_Layout\">\n                Flat Layout\n            </h3>\n            <p>\n                The flat layout displays subtechniques in-line with the techniques. Techniques with subtechniques are denoted by the presence of a left-positioned sidebar which can be clicked to show subtechniques. Subtechniques are differentiated from techniques by indentation.\n            </p>\n\n            <h3 id=\"help_Mini_Layout\">\n                Mini Layout\n            </h3>\n            <p>\n                The mini layout is designed to fit more techniques on the screen\n                simultaneously by reducing their size. To do so all text is removed\n                and techniques are visualized as squares under the tactic. Selecting this layout disables\n                <span class=\"section-link\" (click)=\"scrollTo('help_IDs_Names')\">the \"show IDs\" and \"show Names\" controls</span>.\n\n                Tactic headers are visualized as black cells above the columns. Technique\n                and tactic names are displayed as tooltips when you hover over a\n                technique or tactic-header cell.\n\n                Techniques and their sub-techniques are grouped inside of an outlined box. The technique is the dark-outlined first cell of the group, and the rest of the cells of the group are the sub-techniques.\n\n                Techniques without sub-techniques are displayed without a grouping box, and may appear inline with other sub-techniques-less techniques.\n\n                Disabled techniques are denoted with an \"x\" symbol. Techniques with comments are denoted with an \"i\" symbol.\n            </p>\n            <h3 id=\"help_IDs_Names\">\n                Showing IDs and Names\n            </h3>\n            <p>\n                In the side and flat layouts, you can change what is shown inside of the technique cells. Enabling \"show names\" (enabled by default) will show technique and tactic names on each cell of the matrix. Enabling \"show IDs\" (disabled by default) will show ATT&CK IDs (e.g \"T1000\" for techniques, or \"TA1000\" for tactics) on each cell of the matrix.\n\n                These controls can be toggled independently and turned off entirely to remove cell labels entirely. The mini\n                layout forces both of these controls to be disabled.\n            </p>\n            <h2 id=\"help_Aggregate_Scores\">\n                Aggregate Scores\n            </h2>\n            <p>\n                Aggregate scores will combine the scores of a technique and all of its sub-techniques, and can be calculated\n                using either the average, max, min or sum function.\n                They will display only on techniques with sub-techniques. The display of aggregate scores in the matrix view\n                and the score calculations can be customized via the \"Matrix Configuration\" dropdown menu.\n            </p>\n            <h3 id=\"help_Show_Hide_Aggregate\">\n                Showing or Hiding Aggregate Scores\n            </h3>\n            <p>\n                Aggregate scores in the view are displayed in the tooltip when hovering over a technique, and are hidden by\n                default. When this is enabled, the technique's background color will be calculated using the aggregate score\n                by default.\n            </p>\n            <h3 id=\"help_Count_Unscored\">\n                Counting Unscored Techniques\n            </h3>\n            <p>\n                By default, techniques which are unscored are not included in aggregate score computations. Enabling\n                \"count unscored techniques as 0\" will make unscored techniques count as if their scores were 0 when\n                computing an aggregate score.\n            </p>\n            <h3 id=\"help_Choose_Aggregate\">\n                Choosing an Aggregate Function\n            </h3>\n            <p>\n                There are 4 available functions to calculate the aggregate score: average, min, max, and sum.\n            </p>\n            <ul>\n            <li>Average:\n                <ul>\n                    <li>\n                        if including unscored techniques, will add up the scores of a technique and all of its\n                        sub-techniques, and divide by all; if not including unscored techniques, will add up the only\n                        the nonzero scores of a technique and its sub-techniques, and divide by the count of non-zero\n                        scores.\n                    </li>\n                </ul>\n            </li>\n            <li>Min:\n                <ul>\n                    <li>\n                      will take the minimum of the scores of a technique and all of its sub-techniques.\n                    </li>\n                </ul>\n            </li>\n            <li>Max:\n                <ul>\n                    <li>will take the maximum of the scores of a technique and all of its sub-techniques.</li>\n                </ul>\n            </li>\n            <li>Sum:\n                <ul>\n                    <li>will add the scores of a technique and all of its sub-techniques.</li>\n                </ul>\n            </li>\n        </ul>\n        <h2 id=\"help_Legend\">\n            Legend\n        </h2>\n        <p>\n            The legend helps associate meanings with colors displayed by customized techniques in the ATT&CK Navigator.\n            To open the legend, click on the bar labled \"legend\" in the bottom-right corner of the screen. Click on the\n            same bar to close the legend. To add an item to the legend, click the \"Add Item\"\n            button. To clear all items in the legend, click \"Clear\".\n            <br/><br/>\n            An item's color can be changed by either clicking in the color field and typing a hex color value, or by\n            clicking in the field and choosing a color from the color picker. Click and type in the\n            text field to change the item's label. To remove an item, click on the (<img\n            src=\"assets/icons/ic_clear_gray_24px.svg\"/>) button on the right side. Legend items are saved to the layer\n            file and will be\n            loaded when a layer with saved legend items is loaded.\n        </p>\n\n            <h1 id=\"help_Technique_Controls\">Technique Controls</h1>\n            <p>\n                Techniques in the layer can be annotated. The technique controls on the menubar\n                are only enabled when one or more techniques are <span class=\"section-link\" (click)=\"scrollTo('help_Selecting_Techniques')\">selected</span>.\n                If multiple techniques are selected, they will all be annotated simultaneously.\n            </p>\n\n\n\n            <h2 id=\"help_Disabling_Techniques\">\n                <img src=\"assets/icons/ic_texture_black_24px.svg\">\n                Disabling Techniques\n            </h2>\n            <p>\n                Clicking the \"toggle state\" button toggles selected techniques between an\n                enabled and disabled state. In the disabled state, the technique text is greyed\n                out and no colors (<span class=\"section-link\" (click)=\"scrollTo('help_Assigning_Manual_Colors')\">assigned manually</span> or via\n                <span class=\"section-link\" (click)=\"scrollTo('help_Scoring_Techniques')\">score</span>) will be displayed.\n            </p>\n            <p>\n                The <span class=\"section-link\" (click)=\"scrollTo('help_Hiding_Disabled_Techniques')\">hide disabled techniques</span>\n                button can be used to hide disabled techniques from the view.\n            </p>\n\n            <h2 id=\"help_Assigning_Manual_Colors\">\n                <img src=\"assets/icons/ic_format_color_fill_black_24px.svg\">\n                Assigning Manual Colors\n            </h2>\n            <p>\n                Techniques can be assigned colors manually. Manually assigned colors supersede\n                colors created by score. To remove a manually assigned color, select the \"no color\"\n                box at the top of the interface.\n            </p>\n\n            <h2 id=\"help_Scoring_Techniques\">\n                <img src=\"assets/icons/ic_insert_chart_black_24px.svg\">\n                Scoring Techniques\n            </h2>\n            <p>\n                A score is a numeric value assigned to a technique. The meaning or\n                interpretation of scores is completely up to the user user - the\n                Navigator simply visualizes the matrix based on any scores you have\n                assigned. Some possible uses of scores include:\n            </p>\n            <ul>\n                <li>\n                    Assigning a score to techniques based on whether or not a given\n                    adversary group has been observed to use that technique.\n                </li>\n                <li>\n                    Assigning a score to techniques based on your organization's\n                    ability to detect, prevent and/or mitigate the use of a\n                    particular technique.\n                </li>\n                <li>\n                    Assigning a score to those techniques that a red-team has\n                    successfully employed during an exercise.\n                </li>\n            </ul>\n            <p>\n                By default, techniques are \"unscored\" meaning that no score has been\n                assigned to the technique.  Note that \"unscored\" and a score of zero\n                are not the same, specifically with respect to automatically\n                assigned colors. Scores show up in technique tooltips if a score has\n                been assigned. To change a technique with a numeric score to\n                unscored, select the technique and delete the score value in the score\n                control. The technique will revert to unscored.\n            </p>\n            <p>\n                Techniques are automatically assigned a color according to its\n                score. This color is determined according to the <span class=\"section-link\" (click)=\"scrollTo('help_Scoring_Gradient')\">scoring gradient setup interface</span>. Colors\n                assigned <span class=\"section-link\" (click)=\"scrollTo('help_Assigning_Manual_Colors')\">manually</span>\n                supersede the score-generated color. It is a good idea to assign\n                techniques scores inside of a predetermined range, such as 0-1 or 0-100. Set\n                the \"high value\" and \"low value\" inputs in the <span class=\"section-link\" (click)=\"scrollTo('help_Scoring_Gradient')\">scoring gradient setup interface</span> to this\n                range to make sure that the color for the score is properly mapped\n                to the gradient. Techniques that are unscored are not assigned a\n                color based on the gradient - they are displayed with a white\n                background in the matrix.\n            </p>\n\n            <h2 id=\"help_Adding_Comments_to_Techniques\">\n                <img src=\"assets/icons/ic_insert_comment_black_24px.svg\">\n                Adding Comments to Techniques\n            </h2>\n            <p>\n                A text comment can be added to techniques. This comment will show up in the technique tooltip if a comment has been added.\n                Techniques with a comment will be given a yellow underline.\n            </p>\n            <p>\n                <b>Note:</b> A yellow underline is also shown if the technique has attached <a href=\"https://docs.oasis-open.org/cti/stix/v2.1/cs01/stix-v2.1-cs01.html#_gudodcg1sbb9\">Notes</a> in the source data. Notes cannot be edited in the Navigator and are displayed in the tooltip.\n            </p>\n            <h2 id=\"help_Clearing_Selected_Techniques_Annotations\">\n                <img src=\"assets/icons/ic_clear_black_24px.svg\">\n                Clearing Annotations on Techniques\n            </h2>\n            <p>\n                Clicking the \"clear annotations on selected\" button removes comments,\n                colors, scores, and enabled/disabled state from all selected techniques.\n            </p>\n\n            <h1 id=\"help_Selecting_Techniques\">Selecting Techniques</h1>\n\n            <p>\n                In order to be annotated, techniques must first be selected. There are multiple ways\n                to select techniques.\n            </p>\n            <h2 id=\"help_Selecting_with_the_Mouse\">Selecting with the Mouse</h2>\n            <p>\n                Techniques can be selected using the mouse. Left click a technique to select\n                it. Pressing control (windows) command (mac) or shift (both) while left-clicking a technique will add it to or remove it from the selection. Right\n                clicking a technique will bring up a context menu with more options:\n            </p>\n            <ul>\n                <li><b>select:</b> Select only this technique.</li>\n                <li><b>add to selection:</b> Add this technique to the selection.</li>\n                <li><b>remove from selection:</b> Remove this technique from the selection.</li>\n                <li><b>invert selection:</b> Select all techniques that are not currently selected and unselect all techniques that are currently selected.</li>\n                <li><b>select all:</b> Select all techniques.</li>\n                <li><b>deselect all:</b> Deselect all techniques. This action can also be completed by the \"deselect\" (<img src=\"assets/icons/ic_clear_black_24px.svg\"/>) button.</li>\n                <li><b>select annotated:</b> Select all techniques and sub-techniques which have annotations or remove unnanotated techniques from an existing selection.</li>\n                <li><b>select unannotated:</b> Select all techniques and sub-techniques which do not have annotations or remove annotated techniques from an existing selection.</li>\n                <li><b>select all techniques in tactic:</b> Select all techniques in this tactic. This action can also be completed by clicking on the tactic header and follows the behavior preference under <span class=\"section-link\" (click)=\"scrollTo('help_Selection_Behavior')\">selection behavior</span> in the selection controls.\n                    If the “select techniques across tactics” control is enabled, the selection will include instances of techniques that are in other tactics. Disable this control to select only the instances of techniques that are within this tactic. Sub-techniques within the tactic can be selected along with their parent technique by enabling the “select sub-techniques with parent” control. </li>\n                <li><b>deselect all techniques in tactic:</b> Deselect all techniques in this tactic. This action follows the behavior preference under <span class=\"section-link\" (click)=\"scrollTo('help_Selection_Behavior')\">selection behavior</span> in the selection controls.\n                    If the “select techniques across tactics” control is enabled, instances of techniques across all tactics will be deselected. Disable this control to remove only the instances of techniques within this tactic from the selection. Sub-techniques in this tactic will be deselected with their parent technique if the “select sub-techniques with parent” control is enabled. Note that currently selected sub-techniques will remain selected if the control is disabled when using this option.</li>\n                <li><b>view technique:</b> For more information / details on the technique.</li>\n                <li><b>view tactic:</b> For more information / details on the tactic.</li>\n            </ul>\n            <p><b>Tip:</b> You can use \"select unannotated\" followed by disabling those techniques, and then hiding disabled techniques,\n                to create a layer where only annotated techniques are visible.\n            </p>\n\n            <h2 id=\"help_Selection_Behavior\">\n                <img src=\"assets/icons/ic_lock_black_24px.svg\">\n                Selection Behavior\n            </h2>\n            <p>\n                The selection behavior controls affect how sub-techniques are selected with regards to tactics and sub-techniques.\n            </p>\n            <ul>\n                <li><b>Select techniques across tactics</b> toggles whether selecting a technique that is found in multiple tactics selects it in all tactics, or just the one wherein it was clicked.</li>\n                <li><b>Select sub-techniques with parent</b> toggles whether sub-techniques are selected alongside their parents, and vice versa. When enabled, clicking on a technique will also select all of the sub-techniques of that technique. In addition,clicking a sub-technique will also select the parent as well as all sibling sub-techniques. When disabled, sub-techniques are selected independantly of parents and siblings.</li>\n            </ul>\n\n            <h2 id=\"help_Search_Interface\">\n                <img src=\"assets/icons/ic_search_black_24px.svg\">\n                Search & Multiselect Interface\n            </h2>\n            <p>\n                The search & multiselect interface provides the means to select or deselect techniques in the matrix \n                that match a text query or that are mapped to groups, software, or mitigations. The text input\n                can be used to filter the lists of techniques, groups, software, and mitigations according to their data. \n                You can select what fields of the objects are searched under \"search settings:\" <i>name</i>, \n                <i>ATT&CK ID</i>, <i>description</i>, and (for techniques) <i>data sources</i> can all be searched.\n            </p>\n            <p>\n                The lists of objects below the search can be used to select data in the matrix. \n            </p>\n            <ul>\n                <li><b>Techniques:</b> this list can be used to find a technique alphabetically or one that matches the search query.</li>\n                <li>\n                    <b>Threat Groups:</b> threat groups constitute related intrusion activity tracked under a common name. Selecting a group \n                    under this section will select all techniques that are mapped to (used by) that group.\n                </li>\n                <li>\n                    <b>Software:</b> software constitutes malware (custom closed source or open source software intended for malicious purposes) \n                    or tools (open-source, built-in, or publicly available software that could be used by a defender or an adversary). Selecting a software under this \n                    section will select all techniques that are mapped to (used by) that software.\n                </li>\n                <li>\n                    <b>Mitigations:</b> Mitigations represent security concepts and classes of technologies that can be used to prevent a technique or \n                    sub-technique from being successfully executed. Selecting a mitigation under this section will select all techniques that are mapped to (mitigated by) that mitigation.\n                </li>\n            </ul>\n            <p>\n                The interface provides buttons to select and deselect each object. These buttons modify the currently selected techniques rather\n                than replacing then, allowing for the selection of the multiple techniques or the techniques of multiple\n                threat groups, software, or mitigations by selecting them in sequence. The 'view' links for each entry link to additional information about the object in question.\n            </p>\n            <p>\n                Buttons labelled 'select all' and 'deselect all' are provided to quickly select/deselect all techniques in the results\n                area. You can use this in conjunction with the search input to select all results which match the given query.\n            </p>\n\n            <h1 id=\"help_Customizing_The_Navigator\">Customizing The Navigator</h1>\n            <p>\n                The ATT&CK Navigator can be customized by modifying the fragment (e.g <code>example.com<b>#fragment</b></code>) of the URL.\n                A panel on the new tab page exists to build a properly formatted ATT&CK Navigator URL\n                such that, when opened, it will create an ATT&CK Navigator instance with the desired\n                customizations. This feature may be useful for sharing or embedding the ATT&CK Navigator.\n            </p>\n\n\n            <h2 id=\"help_Default_Layers\">Default Layers</h2>\n            <p>\n                Click the \"add a layer link\" button, then enter a default layer URL pointing to a layer hosted on the web.\n                This will cause the customized ATT&CK Navigator to initialize with this layer open by default.\n                This is especially useful for embedding or sharing specific layers.\n            </p>\n            <p>\n                You can click the \"add another layer link\" button to specify additional default layers, or click the \"x\" button next to a layer link you've already added to remove it.\n            </p>\n            <p>\n                The following is an example ATT&CK Navigator URL with the default layer specified to be the *Bear APTs layer from <a href=\"https://github.com/mitre-attack/attack-navigator\">our github repo</a>: <br /><code>https://mitre-attack.github.io/attack-navigator/enterprise/<b>#layerURL=https%3A%2F%2Fraw.githubusercontent.com%2Fmitre%2Fattack-navigator%2Fmaster%2Flayers%2Fdata%2Fsamples%2FBear_APT.json</b></code>\n            </p>\n\n\n            <h2 id=\"help_Disable_Features\">Disabling Features</h2>\n            <p>\n                Individual ATT&CK Navigator features can be disabled with the checkboxes. Removing\n                a feature only removes the interface elements of the feature -- opened\n                layers utilizing those features will still have them present. For example,\n                even if comments are disabled layers with comments present will still display\n                them visually and in tooltips.\n            </p>\n            <p>\n                If you are hosting your own navigator instance, you can also disable\n                features by editing the configuration file <code>assets/config.json</code>.\n            </p>\n            <p>\n                The following is an example ATT&CK Navigator URL with the ability to download the layer and add comments disabled: <br /><code>https://mitre-attack.github.io/attack-navigator/enterprise/<b>#download_layer=false&comments=false</b></code>\n            </p>\n\n            <h1 id=\"help_Rendering_Layers_As_SVG\">\n                <img src=\"assets/icons/ic_camera_alt_black_24px.svg\">\n                Rendering Layers as SVG\n            </h1>\n            <p>\n                Clicking the \"render layer to SVG\" button will open a pop-up window allowing the current layer\n                to be rendered to an SVG image. Clicking the <i>download svg</i> button (<img src=\"assets/icons/ic_file_download_black_24px.svg\">)\n                will download the image, as displayed, in SVG format.\n            </p>\n            <p>\n                <b>Note:</b> this feature has minor compatibility warnings\n                with the Internet Explorer browser. For best results, please use Firefox, Chrome or Edge.\n            </p>\n            <p>\n                The Microsoft Edge browser has a bug where the downloaded SVG\n                will have the <code>.txt</code> extension. Renaming the extension to <code>.svg</code> will\n                restore it as a valid svg file.\n            </p>\n\n            <h2 id=\"help_exporting_units\">Measurement Units</h2>\n            <p>\n                Clicking the \"toggle measurement unit\" button will toggle between\n                measuring in inches (in), centimeters (cm), and pixels (px). This unit\n                applies to controls for image size and legend position.\n            </p>\n\n            <h2 id=\"help_exporting_image_size\">\n                <img src=\"assets/icons/ic_photo_size_select_large_black_24px.svg\">\n                Configuring Image Size\n            </h2>\n            <p>\n                The image size controls allow you to specify the width and height of\n                the image, as well as the height of the header if one is present.\n                The measurements are in units specified by the <span class=\"section-link\" (click)=\"scrollTo('help_exporting_units')\">measurement units</span> control.\n            </p>\n            <p>\n                The header height contributes to the total image height: if you have specified\n                the image height to be 8.5 inches and the header height to be 1 inch,\n                the technique table will be 7.5 inches and the header 1 inch for a total height of 8.5 inches.\n                If the header is disabled this control will not be editable.\n            </p>\n            <h2 id=\"help_exporting_text\">\n                <img src=\"assets/icons/ic_format_size_black_24px.svg\">\n                Configuring Text\n            </h2>\n            <p>\n                The text configuration dropdown allows for the configuration of the font\n                (serif, sans-serif, and monospace) of the exported render.\n            </p>\n            <p>\n                Unlike in previous versions of the Navigator, in ATT&CK Navigator Version {{nav_version}} text size is automatically\n                calculated to optimize readability.\n            </p>\n            <h2 id=\"help_exporting_legend_config\">\n                <img src=\"assets/icons/ic_view_list_black_24px.svg\">\n                Customizing the Legend\n            </h2>\n            <p>\n                This menu can only be opened if a <span class=\"section-link\" (click)=\"scrollTo('help_Legend')\">legend</span> is present on the layer or if techniques have been assigned scores.\n                The checkbox allows you to undock the legend from the SVG header.\n                Once undocked, the X and Y position controls can be used to position\n                the legend in the image. The width and height inputs control\n                the size of the legend when it is undocked. The measurements are in units specified by the <span class=\"section-link\" (click)=\"scrollTo('help_exporting_units')\">measurement units</span> control.\n            </p>\n\n            <h2 id=\"help_exporting_display_settings\">\n                <img src=\"assets/icons/ic_visibility_black_24px.svg\">\n                Display Settings\n            </h2>\n            <p>\n                The header itself, or specific parts of the header, can be hidden\n                using the controls in this dropdown. The color of table cell borders\n                can also be edited.\n            </p>\n            <ul>\n                <li>\n                    <b>Show header</b> controls whether the header is shown at all. If\n                    the legend is undocked from the header it will still be shown.\n                </li>\n                <li>\n                    <b>Show about</b> controls whether the about (layer name and description) section of the header is visible. If the layer has no name nor description, the control will be disabled and the section automatically hidden.\n                </li>\n                <li>\n                    <b>Show domain</b> controls whether the domain (layer domain and version) section is visible in the header. This control will be disabled if the header is hidden in entirety.\n                </li>\n                <li>\n                    <b>Show filters</b> controls whether the current filters (selected platforms) are visible in\n                    the header. This control will be disabled if the header is hidden in entirety.\n                </li>\n                <li>\n                    <b>Show legend</b> controls whether the layer legend is visible.\n                    If the layer has no defined legend items or no scores, the control will be disabled and the legend will be automatically hidden.\n                </li>\n                <li>\n                    The <b>sub-techniques</b> dropdown controls the visibility of sub-techniques in the rendered layer.\n                    Selecting \"show all\" will show all sub-techniques, \"show expanded\" will show sub-techniques whose parent techniques were expanded when the render button was clicked, and \"show none\" will show no sub-techniques.\n                </li>\n                <li>\n                    <b>Cell border</b> controls the border of cells in the body of the table.\n                    The borders in the header are not modified by this control. Note that you must click \"apply\" in the color picker\n                    for your change to take effect.\n                </li>\n            </ul>\n\n            <h1 id=\"help_Rendering_Layers_As_XLSX\">\n                <img src=\"assets/icons/baseline-grid_on-24px.svg\">\n                Exporting layers to MS Excel\n            </h1>\n            <p>\n                Layers can be exported to MS excel (.xlsx) format. Clicking on the \"export to excel\" button in the toolbar will download an .xlsx\n                file which contains the current layer. This layer contains the annotations from the view --\n                color (via score or manually assigned) and disabled states. The exporter also honors tactic header background, sorting, filtering and hidden techniques.\n            </p>\n\n            <h1 id=\"notice\">Notice</h1>\n            <p>Copyright 2020 The MITRE Corporation</p>\n            <p>Approved for Public Release; Distribution Unlimited. Case Number 18-0128.</p>\n            <p>\n                Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n                use this file except in compliance with the License. You may obtain a copy\n                of the License at\n            </p>\n            <ul style=\"list-style: none\">\n                <li>http://www.apache.org/licenses/LICENSE-2.0</li>\n            </ul>\n\n            <p>\n                Unless required by applicable law or agreed to in writing, software\n                distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n                WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n                License for the specific language governing permissions and limitations\n                under the License.\n            </p>\n\n            <p>This project makes use of ATT&CK&reg;</p>\n            <a href=\"https://attack.mitre.org/resources/terms-of-use/\">ATT&CK&reg; Terms of Use</a>\n    </div>\n    <div class=\"close-button\">\n        <button mat-button mat-dialog-close>close</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatrixCommon } from '../matrix-common';\nimport { ConfigService } from '../../config.service';\n\n@Component({\n  selector: 'matrix-flat',\n  templateUrl: './matrix-flat.component.html',\n  styleUrls: ['./matrix-flat.component.scss']\n})\nexport class MatrixFlatComponent extends MatrixCommon implements OnInit  {\n\n    constructor(configService: ConfigService) { \n        super(configService);\n    }\n\n    ngOnInit() {}\n}\n","<table class=\"matrix flat\">\n    <thead [ngStyle]=\"tacticRowStyle\">\n        <tr>\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic name\">\n                <a (click)=\"onTacticClick(tactic)\">\n                    <tactic-cell [viewModel]=\"viewModel\" [tactic]=\"tactic\"></tactic-cell>\n                </a>\n            </td>\n        </tr>\n        <tr>\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic count\">\n                {{filterTechniques(tactic.techniques, tactic).length }}<ng-container *ngIf=\"viewModel.layout.showName\">&nbsp;techniques</ng-container>\n            </td>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td *ngFor=\"let tactic of filterTactics(matrix.tactics)\" class=\"tactic\">\n                <ng-container *ngFor=\"let technique of applyControls(tactic.techniques, tactic)\">\n                    <ng-container *ngIf=\"technique.subtechniques.length == 0; else supertechnique\">\n                        <technique-cell\n                                        [tactic]=\"tactic\"\n                                        [technique]=\"technique\" \n                                        [viewModel]=\"viewModel\"\n                                        [matrix]=\"matrix\"\n                                        (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\n                                        (rightclick)=\"onTechniqueRightClick($event, technique)\"\n                                        (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\n                                        (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                        </technique-cell>\n                    </ng-container>\n                    <ng-template #supertechnique>\n                        <table class=\"supertechnique\">\n                            <tr>\n                                <td *ngIf=\"technique.subtechniques.length > 0\" class=\"sidebar technique\" [ngClass]=\"{disabled: applyControls(technique.subtechniques, tactic).length == 0}\" (click)=\"onToggleSubtechniquesVisible(technique, tactic)\">\n                                    <div class=\"handle\"> = </div>\n                                </td>\n                                <td class=\"technique\">\n                                    <technique-cell\n                                                    [tactic]=\"tactic\"\n                                                    [technique]=\"technique\" \n                                                    [viewModel]=\"viewModel\"\n                                                    [matrix]=\"matrix\"\n                                                    (leftclick)=\"onTechniqueLeftClick($event, technique, tactic)\"\n                                                    (rightclick)=\"onTechniqueRightClick($event, technique)\"\n                                                    (highlight)=\"onTechniqueHighlight($event, technique, tactic)\"\n                                                    (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                                    </technique-cell>\n                                </td>\n                            </tr>\n                            <tr class=\"subtechniques-row subtechniques-container\" [class.hidden]=\"!viewModel.getTechniqueVM(technique, tactic).showSubtechniques\">\n                                <td *ngIf=\"applyControls(technique.subtechniques, tactic).length > 0\" class=\"sidebar subtechniques\">\n                                    <svg width=\"12px\" height=\"12px\">\n                                        <path d=\"M0 0H12V12Z\"/>\n                                    </svg>\n                                </td>\n                                <td class=\"subtechniques\">\n                                    <div class=\"subtechniques\">\n                                        <technique-cell \n                                                *ngFor=\"let subtechnique of applyControls(technique.subtechniques, tactic)\"\n                                                [tactic]=\"tactic\"\n                                                [technique]=\"subtechnique\" \n                                                [viewModel]=\"viewModel\"\n                                                [matrix]=\"matrix\"\n                                                (leftclick)=\"onTechniqueLeftClick($event, subtechnique, tactic)\"\n                                                (rightclick)=\"onTechniqueRightClick($event, subtechnique)\"\n                                                (highlight)=\"onTechniqueHighlight($event, subtechnique, tactic)\"\n                                                (unhighlight)=\"onTechniqueUnhighlight($event)\">\n                                        </technique-cell>\n                                    </div>\n                                </td>\n                            </tr>\n                        </table>\n                    </ng-template>\n                </ng-container>\n            </td>\n        </tr>\n    </tbody>\n</table>","import { Injectable } from '@angular/core';\nimport { DataService, Technique, Tactic, Matrix, Domain } from \"./data.service\";\ndeclare var tinygradient: any; //use tinygradient\n// import * as tinygradient from 'tinygradient'\ndeclare var tinycolor: any; //use tinycolor2\n// import * as tinycolor from 'tinycolor2';\n// import * as FileSaver from 'file-saver';\ndeclare var math: any; //use mathjs\nimport * as globals from './globals'; //global variables\nimport * as is from 'is_js';\n\n@Injectable()\nexport class ViewModelsService {\n\n    constructor(private dataService: DataService) { }\n\n    viewModels: ViewModel[] = [];\n\n    /**\n     * Create and return a new viewModel\n     * @param {string} name the viewmodel name\n     * @return {ViewModel} the created ViewModel\n     */\n    newViewModel(name: string, domainID: string) {\n        let vm = new ViewModel(name, \"vm\"+ this.getNonce(), domainID, this.dataService);\n        this.viewModels.push(vm);\n        return vm;\n    }\n\n    nonce: number = 0;\n    /**\n     * Get a nonce.\n     * @return a number that will never be regenerated by sequential calls to getNonce.\n     *         Note: this applies on a session-by-session basis, nonces are not\n     *         unique between app instances.\n     */\n    getNonce(): number {\n        return this.nonce++;\n    }\n\n    /**\n     * Destroy the viewmodel completely Nessecary if tab is closed!\n     * @param vm viewmodel to destroy.\n     */\n    destroyViewModel(vm: ViewModel): void {\n        for (let i = 0; i < this.viewModels.length; i++) {\n            if (this.viewModels[i] == vm) {\n                // console.log(\"destroying viewmodel\", vm)\n                this.viewModels.splice(i,1)\n                return;\n            }\n        }\n    }\n\n    /**\n     * layer combination operation\n     * @param  scoreExpression math expression of score expression\n     * @param  scoreVariables  variables in math expression, mapping to viewmodel they correspond to\n     * @param  comments           what viewmodel to inherit comments from\n     * @param  coloring           what viewmodel to inherit manual colors from\n     * @param  enabledness        what viewmodel to inherit state from\n     * @param  layerName          new layer name\n     * @param  filters            viewmodel to inherit filters from\n     * @return                    new viewmodel inheriting above properties\n     */\n    layerLayerOperation(domainID: string, scoreExpression: string, scoreVariables: Map<string, ViewModel>, comments: ViewModel, gradient: ViewModel, coloring: ViewModel, enabledness: ViewModel, layerName: string, filters: ViewModel, legendItems: ViewModel): ViewModel {\n        let result = new ViewModel(\"layer by operation\", \"vm\" + this.getNonce(), domainID, this.dataService);\n\n        if (scoreExpression) {\n            scoreExpression = scoreExpression.toLowerCase() //should be enforced by input, but just in case\n            let score_min = Infinity;\n            let score_max = -Infinity;\n\n            //get list of all technique IDs used in the VMs\n            let techniqueIDs = new Set<string>();\n            scoreVariables.forEach(function(vm, key) {\n                vm.techniqueVMs.forEach(function(techniqueVM, techniqueID) {\n                    techniqueIDs.add(techniqueID);\n                })\n            })\n            //attempt to evaluate without a scope to catch the case of a static assignment\n            try {\n                // evaluate with an empty scope\n                let mathResult = math.eval(scoreExpression, {});\n                // if it didn't except after this, it evaluated to a single result.\n                console.log(\"score expression evaluated to single result to be applied to all techniques\");\n                if (is.boolean(mathResult)) {\n                    mathResult = mathResult ? \"1\" : \"0\"; //boolean to binary\n                } else if (is.not.number(mathResult)) { //user inputted something weird, complain about it\n                    throw {message: \"math result ( \" + mathResult + \" ) is not a number\"};\n                }\n                // if it didn't error, and outputted a single value, apply this to all techniques.\n                result.initializeScoresTo = String(mathResult); //initialize scores to this value\n                score_min = mathResult;\n                score_max = mathResult;\n            } catch(err) { //couldn't evaluate with empty scope, build scope for each technique\n                // compute the score of each techniqueID\n                techniqueIDs.forEach(function(technique_id) {\n                    let new_tvm = new TechniqueVM(technique_id);\n                    let scope = {};\n                    let misses = 0; //number of times a VM is missing the value\n                    scoreVariables.forEach(function(vm, key) {\n                        let scoreValue: number;\n                        if (!vm.hasTechniqueVM_id(technique_id)) { //missing technique\n                            scoreValue = 0;\n                            misses++;\n                        } else { //technique exists\n                            let score = vm.getTechniqueVM_id(technique_id).score;\n                            if (score == \"\") {\n                                scoreValue = 0;\n                                misses++;\n                            } else if (isNaN(Number(score))) {\n                                scoreValue = 0;\n                                misses++;\n                            } else {\n                                scoreValue = Number(score);\n                            }\n                        }\n                        scope[key] = scoreValue;\n                    });\n                    //don't record a result if none of VMs had a score for this technique\n                    //did at least one technique have a score for this technique?\n                    if (misses < scoreVariables.size) {\n                        // console.log(scope);\n                        let mathResult = math.eval(scoreExpression, scope);\n                        if (is.boolean(mathResult)) {\n                            mathResult = mathResult ? \"1\" : \"0\"; //boolean to binary\n                        } else if (is.not.number(mathResult)) { //user inputted something weird, complain about it\n                            throw {message: \"math result ( \" + mathResult + \" ) is not a number\"};\n                        }\n                        new_tvm.score = String(mathResult);\n                        result.techniqueVMs.set(technique_id, new_tvm);\n\n                        score_min = Math.min(score_min, mathResult);\n                        score_max = Math.max(score_max, mathResult);\n                    }\n                })\n            }\n            //don't do gradient if there's no range of values\n            if (score_min != score_max) {\n                // set up gradient according to result range\n                if (score_min != Infinity) result.gradient.minValue = score_min;\n                if (score_max != -Infinity) result.gradient.maxValue = score_max;\n                // if it's a binary range, set to whiteblue gradient\n                if (score_min == 0 && score_max == 1) result.gradient.setGradientPreset(\"whiteblue\");\n            }\n        }\n\n\n        /**\n         * Inherit a field from a vm\n         * @param  {ViewModel} inherit_vm the viewModel to inherit from\n         * @param  {string}    fieldname  the field to inherit from the viewmodel\n         */\n        function inherit(inherit_vm: ViewModel, fieldname: string) {\n            // console.log(\"inherit\", fieldname)\n            inherit_vm.techniqueVMs.forEach(function(inherit_TVM) {\n                let tvm = result.hasTechniqueVM_id(inherit_TVM.technique_tactic_union_id) ? result.getTechniqueVM_id(inherit_TVM.technique_tactic_union_id) : new TechniqueVM(inherit_TVM.technique_tactic_union_id)\n                tvm[fieldname] = inherit_TVM[fieldname];\n                // console.log(inherit_TVM.techniqueName, \"->\", tvm)\n                result.techniqueVMs.set(inherit_TVM.technique_tactic_union_id, tvm);\n            })\n        }\n\n        if (comments)    inherit(comments, \"comment\")\n        if (coloring)    inherit(coloring, \"color\")\n        if (enabledness) inherit(enabledness, \"enabled\")\n\n        if (filters) { //copy filter settings\n            result.filters.deSerialize(JSON.parse(filters.filters.serialize()))\n        }\n\n        if (legendItems) {\n            result.legendItems = JSON.parse(JSON.stringify(legendItems.legendItems));\n        }\n\n        if (gradient) {\n            result.gradient = new Gradient();\n            result.gradient.deSerialize(gradient.gradient.serialize());\n        }\n\n        result.name = layerName;\n        // console.log(result)\n        this.viewModels.push(result)\n        result.updateGradient();\n        return result;\n    } //end layer layer operation\n}\n\n\n\n/**\n * Gradient class used by viewmodels\n */\nexport class Gradient {\n    //official colors used in gradients:\n\n    colors: Gcolor[] = [new Gcolor(\"red\"), new Gcolor(\"green\")]; //current colors\n    // options: string[] = [\"white\", \"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"]; //possible colors\n    options: string[] = [\"#ffffff\", \"#ff6666\", \"#ffaf66\",\"#ffe766\", \"#8ec843\", \"#66b1ff\", \"#ff66f4\"]; //possible colors\n    minValue: number = 0;\n    maxValue: number = 100;\n    gradient: any;\n    gradientRGB: any;\n\n    /**\n     * Create a string version of this gradient\n     * @return string version of gradient\n     */\n    serialize(): string {\n        let colorList: string[] = [];\n        let self = this;\n        this.colors.forEach(function(gColor: Gcolor) {\n            let hexstring = (tinycolor(gColor.color).toHexString())\n            colorList.push(hexstring)\n        });\n\n        let rep = {\n                \"colors\": colorList,\n                \"minValue\": this.minValue,\n                \"maxValue\": this.maxValue,\n              }\n        return JSON.stringify(rep, null, \"\\t\")\n    }\n\n    /**\n     * Restore this gradient from the given serialized representation\n     * @param  rep serialized gradient\n     */\n    deSerialize(rep: string): void {\n        let obj = JSON.parse(rep)\n        let isColorStringArray = function(check): boolean {\n            for (let i = 0; i < check.length; i++) {\n                if (typeof(check[i]) !== \"string\" || !tinycolor(check[i]).isValid()) {\n                    console.error(\"TypeError:\", check[i], \"(\",typeof(check[i]),\")\", \"is not a color-string\")\n                    return false;\n                }\n            }\n            return true;\n        }\n\n\n        if (isColorStringArray(obj.colors)) {\n            this.colors = []\n            let self = this;\n            obj.colors.forEach(function(hex: string) {\n                self.colors.push(new Gcolor(hex));\n            });\n        } else console.error(\"TypeError: gradient colors field is not a color-string[]\")\n        this.minValue = obj.minValue;\n        this.maxValue = obj.maxValue;\n        this.updateGradient();\n    }\n\n    //presets in dropdown menu\n    presets = {\n        redgreen: [new Gcolor(\"#ff6666\"), new Gcolor(\"#ffe766\"), new Gcolor(\"#8ec843\")],\n        greenred: [new Gcolor(\"#8ec843\"), new Gcolor(\"#ffe766\"), new Gcolor(\"#ff6666\")],\n        bluered: [new Gcolor(\"#66b1ff\"), new Gcolor(\"#ff66f4\"), new Gcolor(\"#ff6666\")],\n        redblue: [new Gcolor(\"#ff6666\"), new Gcolor(\"#ff66f4\"), new Gcolor(\"#66b1ff\")],\n        whiteblue: [new Gcolor(\"#ffffff\"), new Gcolor(\"#66b1ff\")],\n        whitered: [new Gcolor(\"#ffffff\"), new Gcolor(\"#ff6666\")]\n    }\n\n    /**\n     * Convert a preset to tinycolor array\n     * @param  preset preset name from preset array\n     * @return        [description]\n     */\n    presetToTinyColor(preset) {\n        let colorarray = []\n        let self = this;\n        this.presets[preset].forEach(function(gcolor: Gcolor) {\n            colorarray.push(gcolor.color);\n        });\n        return tinygradient(colorarray).css('linear', 'to right');\n    }\n\n    constructor() { this.setGradientPreset('redgreen'); }\n\n    /**\n     * set this gradient to use the preset\n     * @param  preset preset to use\n     */\n    setGradientPreset(preset: string): void {\n        this.colors = this.presets[preset].map((color: Gcolor) => new Gcolor(color.color)); //deep copy gradient preset\n        this.updateGradient();\n    }\n\n    /**\n     * recompute gradient\n     */\n    updateGradient(): void {\n        let colorarray = [];\n        let self = this;\n        this.colors.forEach(function(colorobj) {\n            // figure out what kind of color this is\n            // let format = tinycolor(colorobj.color).getFormat();\n            // if (format == \"name\" && colorobj.color in self.labelToColor)\n            colorarray.push(colorobj.color)\n        });\n        this.gradient = tinygradient(colorarray);\n        this.gradientRGB = this.gradient.rgb(100);\n    }\n\n    /**\n     * Add a color to the end of the gradient\n     */\n    addColor(): void {\n        this.colors.push(new Gcolor(this.colors[this.colors.length - 1].color));\n    }\n\n    /**\n     * Remove color at the given index\n     * @param index index to remove color at\n     */\n    removeColor(index): void {\n        this.colors.splice(index, 1)\n    }\n\n    // get the gradient color for a given value in the scale. Value is string format number\n    getColor(valueString: string) {\n        if (!this.gradient) this.updateGradient();\n\n        let value: number;\n        if (valueString.length == 0) return;\n        else value = Number(valueString);\n\n        if (value >= this.maxValue) { return this.gradientRGB[this.gradientRGB.length - 1]; }\n        if (value <= this.minValue) { return this.gradientRGB[0]; }\n        let index = (value - this.minValue)/(this.maxValue - this.minValue) * 100;\n        // console.log(value, \"->\", index)\n        return this.gradientRGB[Math.round(index)];\n    }\n}\n//a color in the gradient\nexport class Gcolor {color: string; constructor(color: string) {this.color = color}};\n\n//semi-synonymous with \"layer\"\nexport class ViewModel {\n    // PROPERTIES & DEFAULTS\n\n    name: string; // layer name\n    domain: string = \"\"; // attack domain\n    version: string = \"\"; // attack version\n    domainID: string; // layer domain & version\n    description: string = \"\"; //layer description\n    uid: string; //unique identifier for this ViewModel. Do not serialize, let it get initialized by the VmService\n\n    filters: Filter;\n\n    metadata: Metadata[] = [];\n\n    /*\n     * sorting int meanings (see filterTechniques()):\n     * 0: ascending alphabetically\n     * 1: descending alphabetically\n     * 2: ascending numerically\n     * 3: descending numerically\n     */\n    sorting: number = 0;\n\n    layout: LayoutOptions = new LayoutOptions();\n\n\n    hideDisabled: boolean = false; //are disabled techniques hidden?\n\n\n    gradient: Gradient = new Gradient(); //gradient for scores\n\n    backgroundPresets: string[] = ['#e60d0d', '#fc3b3b', '#fc6b6b', '#fca2a2', '#e6550d', '#fd8d3c', '#fdae6b', '#fdd0a2', '#e6d60d', '#fce93b', '#fcf26b', '#fcf3a2', '#31a354', '#74c476', '#a1d99b', '#c7e9c0', '#3182bd', '#6baed6', '#9ecae1', '#c6dbef', '#756bb1', '#9e9ac8', '#bcbddc', '#dadaeb', '#636363', '#969696', '#bdbdbd', '#d9d9d9'];\n    legendColorPresets: string[] = [];\n\n    selectTechniquesAcrossTactics: boolean = true;\n    selectSubtechniquesWithParent: boolean = false;\n\n    needsToConstructTechniqueVMs = false;\n    legacyTechniques = [];\n\n    initializeScoresTo = \"\"; //value to initialize scores to\n\n    techIDtoUIDMap: Object = {};\n    techUIDtoIDMap: Object = {};\n\n    private _sidebarOpened: boolean;\n    public get sidebarOpened(): boolean { return this._sidebarOpened; };\n    public set sidebarOpened(newVal: boolean) { this._sidebarOpened = newVal; };\n\n    public readonly sidebarContentTypes = ['layerUpgrade', 'search'];\n    private _sidebarContentType: string;\n    public get sidebarContentType(): string { return this._sidebarContentType; };\n    public set sidebarContentType(newVal: string) {\n        if (this.sidebarContentTypes.includes(newVal)) this._sidebarContentType = newVal;\n        else this._sidebarContentType = '';\n    };\n\n    constructor(name: string, uid: string, domainID: string, private dataService: DataService) {\n        this.domainID = domainID;\n        console.log(\"initializing ViewModel '\" + name + \"'\");\n        this.filters = new Filter();\n        this.name = name;\n        this.uid = uid;\n    }\n\n    loadVMData() {\n        if (!this.domainID || !this.dataService.getDomain(this.domainID).dataLoaded) {\n            console.log(\"subscribing to data loaded callback\")\n            let self = this;\n            this.dataService.onDataLoad(this.domainID, function() {\n                self.initTechniqueVMs()\n                self.filters.initPlatformOptions(self.dataService.getDomain(self.domainID));\n            });\n        } else {\n            this.initTechniqueVMs();\n            this.filters.initPlatformOptions(this.dataService.getDomain(this.domainID));\n        }\n    }\n\n    initTechniqueVMs() {\n        console.log(this.name, \"initializing technique VMs\");\n        for (let technique of this.dataService.getDomain(this.domainID).techniques) {\n            for (let id of technique.get_all_technique_tactic_ids()) {\n                let techniqueVM = new TechniqueVM(id);\n                techniqueVM.score = this.initializeScoresTo;\n                this.setTechniqueVM(techniqueVM, false);\n            }\n            //init subtechniques\n            for (let subtechnique of technique.subtechniques) {\n                for (let id of subtechnique.get_all_technique_tactic_ids()) {\n                    let techniqueVM = new TechniqueVM(id);\n                    techniqueVM.score = this.initializeScoresTo;\n                    this.setTechniqueVM(techniqueVM, false);\n                }\n            }\n        }\n    }\n\n    // changeTechniqueIDSelectionLock() {\n    //     this.selectTechniquesAcrossTactics = !this.selectTechniquesAcrossTactics;\n    // }\n\n    showTacticRowBackground: boolean = false;\n    tacticRowBackground: string = \"#dddddd\";\n\n    // getTechniqueIDFromUID(technique_tactic_union_id: string){\n    //     return this.techIDtoUIDMap[technique_tactic_union_id];\n    // }\n\n    // getTechniquesUIDFromID(technique_id: string){\n    //     return this.techIDtoUIDMap[technique_id];\n    // }\n\n    // setTechniqueMaps(techIDtoUIDMapt, techUIDtoIDMapt){\n    //     this.techIDtoUIDMap = Object.freeze(techIDtoUIDMapt);\n    //     this.techUIDtoIDMap = Object.freeze(techUIDtoIDMapt);\n    // }\n\n     //  _____ ___ ___ _  _ _  _ ___ ___  _   _ ___     _   ___ ___\n     // |_   _| __/ __| || | \\| |_ _/ _ \\| | | | __|   /_\\ | _ \\_ _|\n     //   | | | _| (__| __ | .` || | (_) | |_| | _|   / _ \\|  _/| |\n     //   |_| |___\\___|_||_|_|\\_|___\\__\\_\\\\___/|___| /_/ \\_\\_| |___|\n\n    techniqueVMs: Map<string, TechniqueVM> = new Map<string, TechniqueVM>(); //configuration for each technique\n    // Getter\n    public getTechniqueVM(technique: Technique, tactic: Tactic): TechniqueVM {\n        if (!this.hasTechniqueVM(technique, tactic)) throw Error(\"technique VM not found: \" + technique.attackID + \", \" + tactic.attackID);\n        return this.techniqueVMs.get(technique.get_technique_tactic_id(tactic));\n    }\n    public getTechniqueVM_id(technique_tactic_id: string): TechniqueVM {\n        if (!this.hasTechniqueVM_id(technique_tactic_id)) throw Error(\"technique VM not found: \" + technique_tactic_id);\n        return this.techniqueVMs.get(technique_tactic_id);\n    }\n    /**\n     * setter\n     * @param {techniqueVM} techniqueVM: the techniqueVM to set\n     * @param {boolean} overwrite (default true) if true, overwrite existing techniqueVMs under that ID.\n     */\n    public setTechniqueVM(techniqueVM: TechniqueVM, overwrite=true): void {\n        if (this.techniqueVMs.has(techniqueVM.technique_tactic_union_id)) {\n            if (overwrite) this.techniqueVMs.delete(techniqueVM.technique_tactic_union_id)\n            else return;\n        }\n        this.techniqueVMs.set(techniqueVM.technique_tactic_union_id, techniqueVM);\n    }\n    //checker\n    public hasTechniqueVM(technique: Technique, tactic: Tactic): boolean {\n        return this.techniqueVMs.has(technique.get_technique_tactic_id(tactic));\n    }\n    public hasTechniqueVM_id(technique_tactic_id: string): boolean {\n        return this.techniqueVMs.has(technique_tactic_id);\n    }\n\n    //  ___ ___ ___ _____ ___ _  _  ___     _   ___ ___\n    // | __|   \\_ _|_   _|_ _| \\| |/ __|   /_\\ | _ \\_ _|\n    // | _|| |) | |  | |  | || .` | (_ |  / _ \\|  _/| |\n    // |___|___/___| |_| |___|_|\\_|\\___| /_/ \\_\\_| |___|\n\n\n    public highlightedTactic: Tactic = null;\n    public highlightedTechniques: Set<string> = new Set<string>();\n\n    /**\n     * Highlight the given technique under the given tactic\n     * @param {Technique} technique to highlight\n     * @param {Tactic} tactic wherein the technique occurs\n     */\n    public highlightTechnique(technique: Technique, tactic?: Tactic | null) {\n        if (this.selectSubtechniquesWithParent && technique.isSubtechnique) this.highlightedTechniques.add(technique.parent.id);\n        this.highlightedTechniques.add(technique.id);\n        this.highlightedTactic = tactic;\n    }\n    /**\n     * Clear the technique highlight\n     */\n    public clearHighlight() {\n        this.highlightedTactic = null;\n        this.highlightedTechniques = new Set<string>();\n    }\n\n    /**\n     * currently selected techniques in technique_tactic_id format\n     */\n    private selectedTechniques: Set<string> = new Set<string>();\n\n    /**\n     * Select the given technique. Depending on selectTechniquesAcrossTactics, either selects in all tactics or in given tactic\n     * @param {Technique} technique to select\n     * @param {Tactic} tactic wherein the technique occurs\n     */\n    public selectTechnique(technique: Technique, tactic: Tactic): void {\n        if (this.selectTechniquesAcrossTactics) this.selectTechniqueAcrossTactics(technique);\n        else (this.selectTechniqueInTactic(technique, tactic));\n    }\n\n    /**\n     * unselect the given technique. Depending on selectTechniquesAcrossTactics, either unselects in all tactics or in given tactic\n     * @param {Technique} technique to select\n     * @param {Tactic} tactic wherein the technique occurs\n     */\n    public unselectTechnique(technique: Technique, tactic: Tactic): void {\n        if (this.selectTechniquesAcrossTactics) this.unselectTechniqueAcrossTactics(technique);\n        else (this.unselectTechniqueInTactic(technique, tactic));\n    }\n\n    /**\n     * select the given technique in the given tactic\n     * @param {Technique} technique to select\n     * @param {Tactic} tactic wherein the technique occurs\n     * @param {boolean} walkChildren (recursion helper) if true and selectSubtechniquesWithParent is true, walk selection up to parent technique\n     */\n    public selectTechniqueInTactic(technique: Technique, tactic: Tactic, walkChildren=true): void {\n        if (this.selectSubtechniquesWithParent && walkChildren) { //check parent / children / siblings\n            if (technique.isSubtechnique) { //select from parent\n                this.selectTechniqueInTactic(technique.parent, tactic, true);\n                return;\n            } else { //select subtechniques\n                for (let subtechnique of technique.subtechniques) {\n                    this.selectTechniqueInTactic(subtechnique, tactic, false);\n                }\n            }\n        }\n        this.selectedTechniques.add(technique.get_technique_tactic_id(tactic));\n    }\n\n    /**\n     * select all techniques under the given tactic\n     * @param {Tactic} tactic wherein the techniques occur\n     */\n    public selectAllTechniquesInTactic(tactic: Tactic): void {\n        for (let technique of tactic.techniques) {\n            this.selectTechnique(technique, tactic);\n        }\n    }\n\n    /**\n     * select the given technique across all tactics in which it occurs\n     * @param {Technique} technique to select\n     * @param {boolean} walkChildren (recursion helper) if true and selectSubtechniquesWithParent is true, walk selection up to parent technique\n     * @param highlightTechniques, if true, highlight techniques rather than add to selected techniques group\n     */\n    public selectTechniqueAcrossTactics(technique: Technique, walkChildren= true, highlightTechniques = false): void {\n        if (this.selectSubtechniquesWithParent && walkChildren) { //walk to parent / children / siblings\n            if (technique.isSubtechnique) { //select from parent\n                this.selectTechniqueAcrossTactics(technique.parent, true, highlightTechniques);\n                return;\n            } else { //select subtechniques\n                for (let subtechnique of technique.subtechniques) {\n                    this.selectTechniqueAcrossTactics(subtechnique, false, highlightTechniques);\n                }\n            }\n        }\n        if (highlightTechniques) {\n            this.highlightTechnique(technique);\n        }\n        else {\n            for (let id of technique.get_all_technique_tactic_ids()) {\n                this.selectedTechniques.add(id);\n            }\n        }\n    }\n\n    /**\n     * unselect the given technique in the given tactic\n     * @param {Technique} technique to unselect\n     * @param {Tactic} tactic wherein the technique occurs\n     * @param {boolean} walkChildren (recursion helper) if true and selectSubtechniquesWithParent is true, walk selection up to parent technique\n     */\n    public unselectTechniqueInTactic(technique: Technique, tactic: Tactic, walkChildren=true): void {\n        if (this.selectSubtechniquesWithParent && walkChildren) { //walk to parent / children / siblings\n            if (technique.isSubtechnique) { //select from parent\n                this.unselectTechniqueInTactic(technique.parent, tactic, true);\n                return;\n            } else { //select subtechniques\n                for (let subtechnique of technique.subtechniques) {\n                    this.unselectTechniqueInTactic(subtechnique, tactic, false);\n                }\n            }\n        }\n        this.selectedTechniques.delete(technique.get_technique_tactic_id(tactic));\n    }\n\n    /**\n     * unselect all techniques in the given tactic\n     * @param {Tactic} tactic wherein the techniques occur\n     */\n    public unselectAllTechniquesInTactic(tactic: Tactic): void {\n        for (let technique of tactic.techniques) {\n            this.unselectTechnique(technique, tactic);\n        }\n    }\n\n    /**\n     * unselect the given technique across all tactics in which it occurs\n     * @param {Technique} technique to unselect\n     * @param {boolean} walkChildren (recursion helper) if true and selectSubtechniquesWithParent is true, walk selection up to parent technique\n     */\n    public unselectTechniqueAcrossTactics(technique: Technique, walkChildren=true) {\n        if (this.selectSubtechniquesWithParent && walkChildren) { //walk to parent / children / siblings\n            if (technique.isSubtechnique) { //select from parent\n                this.unselectTechniqueAcrossTactics(technique.parent, true);\n                return;\n            } else { //select subtechniques\n                for (let subtechnique of technique.subtechniques) {\n                    this.unselectTechniqueAcrossTactics(subtechnique, false);\n                }\n            }\n        }\n        for (let id of technique.get_all_technique_tactic_ids()) {\n            this.selectedTechniques.delete(id);\n        }\n    }\n\n    /**\n     * unselect all techniques\n     */\n    public clearSelectedTechniques() {\n        this.selectedTechniques.clear();\n    }\n\n    /**\n     * Select all techniques\n     */\n    public selectAllTechniques(): void {\n        this.clearSelectedTechniques()\n        this.invertSelection();\n    }\n\n    /**\n     * Set all selected techniques to deselected, and select all techniques not currently selected\n     */\n    public invertSelection(): void {\n        let previouslySelected = new Set(this.selectedTechniques);\n        this.clearSelectedTechniques();\n        let self = this;\n        this.techniqueVMs.forEach(function(tvm, key) {\n            if (!previouslySelected.has(tvm.technique_tactic_union_id)) self.selectedTechniques.add(tvm.technique_tactic_union_id)\n        });\n    }\n\n    /**\n     * Select all techniques with annotations if nothing is currently selected, or select a subset of\n     * the current selection that has annotations\n     */\n    public selectAnnotated(): void {\n        let self = this;\n        if (this.isCurrentlyEditing()) {\n            // deselect techniques without annotations\n            let selected = new Set(this.selectedTechniques);\n            this.techniqueVMs.forEach(function(tvm, key) {\n                if (selected.has(tvm.technique_tactic_union_id) && !tvm.annotated()) self.selectedTechniques.delete(tvm.technique_tactic_union_id);\n            })\n        } else {\n            // select all techniques with annotations\n            this.techniqueVMs.forEach(function(tvm, key) {\n                if (tvm.annotated()) self.selectedTechniques.add(tvm.technique_tactic_union_id);\n            });\n        }\n    }\n\n    /**\n     * Select all techniques without annotations if nothing is currently selected, or select a subset of\n     * the current selection that do not have annotations\n     */\n    public selectUnannotated(): void {\n        let self = this;\n        if (this.isCurrentlyEditing()) {\n            // deselect techniques with annotations\n            let selected = new Set(this.selectedTechniques);\n            this.techniqueVMs.forEach(function(tvm, key) {\n                if (selected.has(tvm.technique_tactic_union_id) && tvm.annotated()) self.selectedTechniques.delete(tvm.technique_tactic_union_id);\n            })\n        } else {\n            // select all techniques without annotations\n            this.selectAnnotated();\n            this.invertSelection();\n        }\n    }\n\n    /**\n     * Return true if the given technique is selected, false otherwise\n     * @param  {Technique}  technique the technique to check\n    * * @param  {Tactic}  tactic wherein the technique occurs\n     * @return {boolean}           true if selected, false otherwise\n     */\n    public isTechniqueSelected(technique: Technique, tactic: Tactic, walkChildren=true): boolean {\n        if (this.selectTechniquesAcrossTactics) {\n            if (this.selectSubtechniquesWithParent && walkChildren) { //check parent / children / siblings\n                if (technique.isSubtechnique) { //select from parent\n                    return this.isTechniqueSelected(technique.parent, tactic, true);\n                } else {\n                    for (let subtechnique of technique.subtechniques) {\n                        if (this.isTechniqueSelected(subtechnique, tactic, false)) return true;\n                    }\n                }\n            }\n\n            for (let id of technique.get_all_technique_tactic_ids()) {\n                if (this.selectedTechniques.has(id)) return true;\n            }\n            return false;\n        } else {\n            if (this.selectSubtechniquesWithParent && walkChildren) { //check parent / children / siblings\n                if (technique.isSubtechnique) { //select from parent\n                    return this.isTechniqueSelected(technique.parent, tactic, true);\n                } else {\n                    for (let subtechnique of technique.subtechniques) {\n                        if (this.isTechniqueSelected(subtechnique, tactic, false)) return true;\n                    }\n                }\n            }\n            return this.selectedTechniques.has(technique.get_technique_tactic_id(tactic));\n        }\n    }\n\n    /**\n     * return the number of selected techniques\n     * @return {number} the number of selected techniques\n     */\n    public getSelectedTechniqueCount(): number {\n        if (this.selectTechniquesAcrossTactics) {\n            if (this.selectSubtechniquesWithParent) {\n                // match across tactics\n                // match subtechniques and parents\n\n                // matches this part\n                // vvvvv\n                // T1001.001^TA1000\n                let ids = new Set();\n                this.selectedTechniques.forEach((unionID) => ids.add(unionID.split(\"^\")[0].split(\".\")[0]));\n                return ids.size;\n            } else {\n                // match across tactics\n                // differentiate subtechniques and parents\n\n                // matches this part\n                // vvvvv vvv\n                // T1001.001^TA1000\n                let ids = new Set();\n                this.selectedTechniques.forEach((unionID) => ids.add(unionID.split(\"^\")[0]));\n                return ids.size;\n            }\n        } else {\n            if (this.selectSubtechniquesWithParent) {\n                // differentiate tactics\n                // match subtechniques and parents\n\n                // matches this part\n                // vvvvv     vvvvvv\n                // T1001.001^TA1000\n                let ids = new Set();\n                this.selectedTechniques.forEach((unionID) => {\n                    let split = unionID.split(\"^\");\n                    let tacticID = split[1];\n                    let techniqueID = split[0].split(\".\")[0];\n                    ids.add(techniqueID + \"^\" + tacticID);\n                })\n                return ids.size;\n            } else {\n                // differentiate tactics\n                // differentiate subtechniques and parents\n\n                // matches this part\n                // vvvvv vvv vvvvvv\n                // T1001.001^TA1000\n                return this.selectedTechniques.size;\n            }\n        }\n    }\n\n    /**\n     * Returns true if the given tactic is selected\n     * @param  {Tactic}  tactic to check\n     * @return {boolean} true if selected\n     */\n    public isTacticSelected(tactic: Tactic) {\n        let self = this;\n        var result = tactic.techniques.every(function(technique) {\n            return self.isTechniqueSelected(technique, tactic)\n        });\n        return result;\n    }\n\n\n    /**\n     * Return true if currently editing any techniques, false otherwise\n     * @return {boolean} true if currently editing any techniques, false otherwise\n     */\n    public isCurrentlyEditing(): boolean {\n        return this.getSelectedTechniqueCount() > 0;\n    }\n\n    /**\n     * edit the selected techniques\n     * @param {string} field the field to edit\n     * @param {any}    value the value to place in the field\n     */\n    public editSelectedTechniques(field: string, value: any): void {\n        this.selectedTechniques.forEach((id) => {\n            this.getTechniqueVM_id(id)[field] = value;\n        })\n    }\n\n    /**\n     * Reset the selected techniques' annotations to their default values\n     */\n    public resetSelectedTechniques(): void {\n        this.selectedTechniques.forEach((id) => {\n            this.getTechniqueVM_id(id).score = \"\";\n            this.getTechniqueVM_id(id).comment = \"\";\n            this.getTechniqueVM_id(id).color = \"\";\n            this.getTechniqueVM_id(id).enabled = true;\n            this.getTechniqueVM_id(id).aggregateScore = \"\";\n            this.getTechniqueVM_id(id).aggregateScoreColor = \"\";\n        })\n    }\n\n    /**\n     * Get get a common value from the selected techniques\n     * @param  field the field to get the common value from\n     * @return       the value of the field if all selected techniques have the same value, otherwise \"\"\n     */\n    public getEditingCommonValue(field: string): any {\n        if (!this.isCurrentlyEditing()) return \"\";\n        let ids = Array.from(this.selectedTechniques);\n        let commonValue = this.getTechniqueVM_id(ids[0])[field];\n        for (let i = 1; i < ids.length; i++) {\n            if (this.getTechniqueVM_id(ids[i])[field] != commonValue) return \"\"\n        }\n\n        return commonValue;\n    }\n\n    /**\n     * add a new blank metadata to the metadata list, for editing in UI\n     */\n    public addMetadata() {\n        let m = new Metadata()\n        this.metadata.push(m);\n    }\n\n    /**\n     * remove a metadata from the metadata list\n     * @param index the index to remove from the list\n     */\n    public removeMetadata(index: number) {\n        this.metadata.splice(index, 1)\n    }\n\n\n    //  oooooooo8                          o8          o88 ooooooooooo o88   o888   o8\n    // 888           ooooooo  oo oooooo  o888oo       o88   888    88  oooo   888 o888oo ooooooooo8 oo oooooo\n    //  888oooooo  888     888 888    888 888       o88     888ooo8     888   888  888  888oooooo8   888    888\n    //         888 888     888 888        888     o88       888         888   888  888  888          888\n    // o88oooo888    88ooo88  o888o        888o o88        o888o       o888o o888o  888o  88oooo888 o888o\n    //                                         o88\n    //    ooooo ooooo            o888\n    //     888   888  ooooooooo8  888 ooooooooo    ooooooooo8 oo oooooo    oooooooo8\n    //     888ooo888 888oooooo8   888  888    888 888oooooo8   888    888 888ooooooo\n    //     888   888 888          888  888    888 888          888                888\n    //    o888o o888o  88oooo888 o888o 888ooo88     88oooo888 o888o       88oooooo88\n    //                                o888\n\n    /**\n     * filter tactics according to viewmodel state\n     * @param {Tactic[]} tactics to filter\n     * @param {Matrix} matrix that the tactics fall under\n     * @returns {Tactic[]} filtered tactics\n     */\n    public filterTactics(tactics: Tactic[], matrix: Matrix): Tactic[] {\n        return tactics.filter((tactic: Tactic) => this.filterTechniques(tactic.techniques, tactic, matrix).length > 0);\n    }\n\n    /**\n     * filter techniques according to viewModel state\n     * @param {Technique[]} techniques list of techniques to filter\n     * @param {Tactic} tactic tactic the techniques fall under\n     * @param {Matrix} matrix that the techniques fall under\n     * @returns {Technique[]} filtered techniques\n     */\n    public filterTechniques(techniques: Technique[], tactic: Tactic, matrix: Matrix): Technique[] {\n        return techniques.filter((technique: Technique) => {\n            let techniqueVM = this.getTechniqueVM(technique, tactic);\n            // filter by enabled\n            if (this.hideDisabled && !this.isSubtechniqueEnabled(technique, techniqueVM, tactic)) return false;\n            if (matrix.name == \"PRE-ATT&CK\") return true; // don't filter by platform if it's pre-attack\n            // filter by platform\n            let platforms = new Set(technique.platforms)\n            for (let platform of this.filters.platforms.selection) {\n                if (platforms.has(platform)) return true; //platform match\n            }\n            return false; //no platform match\n        })\n    }\n\n    public isSubtechniqueEnabled(technique, techniqueVM, tactic): boolean {\n        if (techniqueVM.enabled) return true;\n        else if (technique.subtechniques.length > 0) {\n            return technique.subtechniques.some(subtechnique => this.getTechniqueVM(subtechnique, tactic).enabled);\n        }\n        else return false;\n    }\n\n    /**\n     * sort techniques accoding to viewModel state\n     * @param {Technique[]} techniques techniques to sort\n     * @param {Tactic} tactic tactic the techniques fall under\n     * @returns {Technique[]} sorted techniques\n     */\n    public sortTechniques(techniques: Technique[], tactic: Tactic): Technique[] {\n        return techniques.sort((technique1: Technique, technique2: Technique) => {\n            const techniqueVM1 = this.getTechniqueVM(technique1, tactic);\n            const techniqueVM2 = this.getTechniqueVM(technique2, tactic);\n            let score1, score2;\n\n            this.sortSubTechniques(technique1, tactic);\n            this.sortSubTechniques(technique2, tactic);\n\n            if (!this.layout.showAggregateScores) {\n                score1 = techniqueVM1.score.length > 0 ? Number(techniqueVM1.score) : 0;\n                score2 = techniqueVM2.score.length > 0 ? Number(techniqueVM2.score) : 0;\n            }\n            else { // if show aggregate scores is enabled, factor that into sorting, and prefer techniques scored 0 over unscored\n                score1 = this.calculateAggregateScore(technique1, tactic);\n                techniqueVM1.aggregateScore = Number.isFinite(score1) ? score1.toString() : \"\";\n                score2 = this.calculateAggregateScore(technique2, tactic);\n                techniqueVM2.aggregateScore = Number.isFinite(score2) ? score2.toString() : \"\";\n            }\n\n            switch (this.sorting) {\n                default:\n                case 0: // A-Z\n                    return technique1.name.localeCompare(technique2.name);\n                case 1: // Z-A\n                    return technique2.name.localeCompare(technique1.name);\n                case 2: // ascending\n                    if (score1 === score2) {\n                        return technique1.name.localeCompare(technique2.name);\n                    } else {\n                        return score1 - score2;\n                    }\n                case 3: // descending\n                    if (score1 === score2) {\n                        return technique1.name.localeCompare(technique2.name);\n                    } else {\n                        return score2 - score1;\n                    }\n            }\n        });\n    }\n\n    public sortSubTechniques(technique: Technique, tactic: Tactic) {\n        technique.subtechniques.sort((technique1: Technique, technique2: Technique) => {\n            const techniqueVM1 = this.getTechniqueVM(technique1, tactic);\n            const techniqueVM2 = this.getTechniqueVM(technique2, tactic);\n            const score1 = techniqueVM1.score.length > 0 ? Number(techniqueVM1.score) : 0;\n            const score2 = techniqueVM2.score.length > 0 ? Number(techniqueVM2.score) : 0;\n            switch (this.sorting) {\n                case 2:\n                    return score1 - score2;\n                case 3:\n                    return score2 - score1;\n                default:\n                    return 0;\n            }\n        });\n    }\n\n    public calculateAggregateScore(technique: Technique, tactic: Tactic): any {\n        const tvm = this.getTechniqueVM(technique, tactic);\n        let score = tvm.score.length > 0 ? Number(tvm.score) : 0;\n        let validTechniquesCount = tvm.score.length > 0 ? 1 : 0;\n        let scores = [score];\n\n        technique.subtechniques.forEach((subtechnique) => {\n            const svm = this.getTechniqueVM(subtechnique, tactic);\n            const scoreNum = svm.score.length > 0 ? Number(svm.score) : 0;\n            if (svm.score.length > 0) {\n                validTechniquesCount += 1;\n                scores.push(scoreNum);\n            }\n        });\n\n        if (validTechniquesCount === 0) return tvm.score.length > 0 ? score : Number.NEGATIVE_INFINITY;\n\n        let aggScore: any = 0;\n\n        switch (this.layout.aggregateFunction) {\n            default:\n            case \"average\":\n                // Divide by count of all subtechniques + 1 (for parent technique) if counting unscored is enabled\n                // Otherwise, divide by count of all scored only\n                score = scores.reduce((a, b) => a + b);\n                aggScore = score / (this.layout.countUnscored ? (technique.subtechniques.length + 1) : validTechniquesCount);\n                break;\n            case \"min\":\n                if (scores.length > 0) aggScore = Math.min(...scores);\n                break;\n            case \"max\":\n                if (scores.length > 0) aggScore = Math.max(...scores);\n                break;\n            case \"sum\":\n                aggScore = scores.reduce((a, b) => a + b);\n                break;\n        }\n\n        aggScore = aggScore.toFixed(2);\n        tvm.aggregateScoreColor = this.gradient.getColor(aggScore.toString());\n        return +aggScore;\n    }\n\n    /**\n     * apply sort and filter state to techniques\n     * @param {Technique[]} techniques techniques to sort and filter\n     * @param {Tactic} tactic that the techniques fall under\n     * @param {Matrix} matrix that the techniques fall under\n     * @returns {Technique[]} sorted and filtered techniques\n     */\n    public applyControls(techniques: Technique[], tactic: Tactic, matrix: Matrix): Technique[] {\n        //apply sort and filter\n        return this.sortTechniques(this.filterTechniques(techniques, tactic, matrix), tactic);\n    }\n\n\n\n\n\n    //  ___ ___ ___ ___   _   _    ___ ____  _ _____ ___ ___  _  _\n    // / __| __| _ \\_ _| /_\\ | |  |_ _|_  / /_\\_   _|_ _/ _ \\| \\| |\n    // \\__ \\ _||   /| | / _ \\| |__ | | / / / _ \\| |  | | (_) | .` |\n    // |___/___|_|_\\___/_/ \\_\\____|___/___/_/ \\_\\_| |___\\___/|_|\\_|\n\n    /**\n     * stringify this vm\n     * @return string representation\n     */\n    serialize(): string {\n        let modifiedTechniqueVMs = []\n        let self = this;\n        this.techniqueVMs.forEach(function(value,key) {\n            if (value.modified()) modifiedTechniqueVMs.push(JSON.parse(value.serialize())) //only save techniqueVMs which have been modified\n        })\n        let rep: {[k: string]: any } = {};\n        rep.name = this.name;\n\n        rep.versions = {\n            \"attack\": this.dataService.getDomain(this.domainID).getVersion(),\n            \"navigator\": globals.nav_version,\n            \"layer\": globals.layer_version\n        }\n\n        rep.domain = this.domainID.substr(0, this.domainID.search(/-v[0-9]/g));\n        rep.description = this.description;\n        rep.filters = JSON.parse(this.filters.serialize());\n        rep.sorting = this.sorting;\n        rep.layout = this.layout.serialize();\n        rep.hideDisabled = this.hideDisabled;\n        rep.techniques = modifiedTechniqueVMs;\n        rep.gradient = JSON.parse(this.gradient.serialize());\n        rep.legendItems = JSON.parse(JSON.stringify(this.legendItems));\n        rep.metadata = this.metadata.filter((m)=>m.valid()).map((m) => m.serialize());\n\n        rep.showTacticRowBackground = this.showTacticRowBackground;\n        rep.tacticRowBackground = this.tacticRowBackground;\n        rep.selectTechniquesAcrossTactics = this.selectTechniquesAcrossTactics;\n        rep.selectSubtechniquesWithParent = this.selectSubtechniquesWithParent;\n\n        return JSON.stringify(rep, null, \"\\t\");\n    }\n\n    /**\n     * restore the domain and version from a string\n     * @param rep string to restore from\n     */\n    deSerializeDomainID(rep: any): void {\n        let obj = (typeof(rep) == \"string\")? JSON.parse(rep) : rep\n        this.name = obj.name\n        this.version = this.dataService.getCurrentVersion(); // layer with no specified version defaults to current version\n        if (\"versions\" in obj) {\n            if (\"attack\" in obj.versions) {\n                if (typeof(obj.versions.attack) === \"string\") {\n                    if (obj.versions.attack.length > 0) this.version = \"v\" + obj.versions.attack.match(/[0-9]/g)[0];\n                }\n                else console.error(\"TypeError: attack version field is not a string\");\n            }\n            if(obj.versions[\"layer\"] !== globals.layer_version){\n                alert(\"WARNING: Uploaded layer version (\" + String(obj.versions[\"layer\"]) + \") does not match Navigator's layer version (\"\n                + String(globals.layer_version) + \"). The layer configuration may not be fully restored.\");\n            }\n        }\n        if (\"version\" in obj) { // backwards compatibility with Layer Format 3\n            if (obj.version !== globals.layer_version){\n                alert(\"WARNING: Uploaded layer version (\" + String(obj.version) + \") does not match Navigator's layer version (\"\n                + String(globals.layer_version) + \"). The layer configuration may not be fully restored.\");\n            }\n        }\n        // patch for old domain name convention\n        if(obj.domain in this.dataService.domain_backwards_compatibility) {\n            this.domain = this.dataService.domain_backwards_compatibility[obj.domain];\n        } else { this.domain = obj.domain; }\n        this.domainID = this.dataService.getDomainID(this.domain, this.version);\n    }\n\n    /**\n     * restore this vm from a string\n     * @param  rep string to restore from\n     */\n    deSerialize(rep: any): void {\n        let obj = (typeof(rep) == \"string\")? JSON.parse(rep) : rep\n\n        if (\"description\" in obj) {\n            if (typeof(obj.description) === \"string\") this.description = obj.description;\n            else console.error(\"TypeError: description field is not a string\")\n        }\n        if (\"filters\" in obj) { this.filters.deSerialize(obj.filters); }\n        if (\"sorting\" in obj) {\n            if (typeof(obj.sorting) === \"number\") this.sorting = obj.sorting;\n            else console.error(\"TypeError: sorting field is not a number\")\n        }\n        if (\"hideDisabled\" in obj) {\n            if (typeof(obj.hideDisabled) === \"boolean\") this.hideDisabled = obj.hideDisabled;\n            else console.error(\"TypeError: hideDisabled field is not a boolean\")\n        }\n\n        if (\"gradient\" in obj) {\n            this.gradient = new Gradient();\n            this.gradient.deSerialize(JSON.stringify(obj.gradient))\n        }\n\n        if (\"legendItems\" in obj) {\n            for (let i = 0; i < obj.legendItems.length; i++) {\n                let legendItem = {\n                    color: \"#defa217\",\n                    label: \"default label\"\n                };\n                if (!(\"label\" in obj.legendItems[i])) {\n                    console.error(\"Error: LegendItem required field 'label' not present\")\n                    continue;\n                }\n                if (!(\"color\" in obj.legendItems[i])) {\n                    console.error(\"Error: LegendItem required field 'label' not present\")\n                    continue;\n                }\n\n                if (typeof(obj.legendItems[i].label) === \"string\") {\n                    legendItem.label = obj.legendItems[i].label;\n                } else {\n                    console.error(\"TypeError: legendItem label field is not a string\")\n                    continue\n                }\n\n                if (typeof(obj.legendItems[i].color) === \"string\" && tinycolor(obj.legendItems[i].color).isValid()) {\n                    legendItem.color = obj.legendItems[i].color;\n                } else {\n                    console.error(\"TypeError: legendItem color field is not a color-string:\", obj.legendItems[i].color, \"(\", typeof(obj.legendItems[i].color),\")\")\n                    continue\n                }\n                this.legendItems.push(legendItem);\n            }\n        }\n\n        if (\"showTacticRowBackground\" in obj) {\n            if (typeof(obj.showTacticRowBackground) === \"boolean\") this.showTacticRowBackground = obj.showTacticRowBackground\n            else console.error(\"TypeError: showTacticRowBackground field is not a boolean\")\n        }\n        if (\"tacticRowBackground\" in obj) {\n            if (typeof(obj.tacticRowBackground) === \"string\" && tinycolor(obj.tacticRowBackground).isValid()) this.tacticRowBackground = obj.tacticRowBackground;\n            else console.error(\"TypeError: tacticRowBackground field is not a color-string:\", obj.tacticRowBackground, \"(\", typeof(obj.tacticRowBackground),\")\")\n        }\n        if (\"selectTechniquesAcrossTactics\" in obj) {\n            if (typeof(obj.selectTechniquesAcrossTactics) === \"boolean\") this.selectTechniquesAcrossTactics = obj.selectTechniquesAcrossTactics\n            else console.error(\"TypeError: selectTechniquesAcrossTactics field is not a boolean\")\n        }\n        if (\"selectSubtechniquesWithParent\" in obj) {\n            if (typeof(obj.selectSubtechniquesWithParent) === \"boolean\") this.selectSubtechniquesWithParent = obj.selectSubtechniquesWithParent\n            else console.error(\"TypeError: selectSubtechniquesWithParent field is not a boolean\")\n        }\n        if (\"techniques\" in obj) {\n            if(obj.techniques.length > 0) {\n                for (let i = 0; i < obj.techniques.length; i++) {\n                    var obj_technique = obj.techniques[i];\n                    if (\"tactic\" in obj_technique) {\n                        let tvm = new TechniqueVM(\"\");\n                        tvm.deSerialize(JSON.stringify(obj_technique),\n                                        obj_technique.techniqueID,\n                                        obj_technique.tactic);\n                        this.setTechniqueVM(tvm);\n                    } else {\n                        // occurs in multiple tactics\n                        // match to Technique by attackID\n                        for (let technique of this.dataService.getDomain(this.domainID).techniques) {\n                            if (technique.attackID == obj_technique.techniqueID) {\n                                // match technique\n                                for (let tactic of technique.tactics) {\n                                    let tvm = new TechniqueVM(\"\");\n                                    tvm.deSerialize(JSON.stringify(obj_technique),\n                                                    obj_technique.techniqueID,\n                                                    tactic);\n                                    this.setTechniqueVM(tvm);\n                                }\n                                break;\n                            }\n                            //check against subtechniques\n                            for (let subtechnique of technique.subtechniques) {\n                                if (subtechnique.attackID == obj_technique.techniqueID) {\n                                    for (let tactic of subtechnique.tactics) {\n                                        let tvm = new TechniqueVM(\"\");\n                                        tvm.deSerialize(JSON.stringify(obj_technique),\n                                                        obj_technique.techniqueID,\n                                                        tactic);\n                                        this.setTechniqueVM(tvm);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n        if (\"metadata\" in obj) {\n            for (let metadataObj of obj.metadata) {\n                let m = new Metadata();\n                m.deSerialize(metadataObj);\n                if (m.valid()) this.metadata.push(m)\n            }\n        }\n        if (\"layout\" in obj) {\n            this.layout.deserialize(obj.layout);\n        }\n        else if (\"viewMode\" in obj) {\n            /*\n             * viewMode backwards compatibility:\n             * 0: full table (side layout, show name)\n             * 1: compact table (side layout, show ID)\n             * 2: mini table (mini layout, show neither name nor ID)\n             */\n            if (typeof(obj.viewMode) === \"number\") {\n                switch(obj.viewMode) {\n                    default:\n                    case 0:\n                        break; //default matrix layout already initialized\n                    case 1:\n                        this.layout.layout = \"side\";\n                        this.layout.showName = false;\n                        this.layout.showID = true;\n                        break;\n                    case 2:\n                        this.layout.layout = \"mini\";\n                        this.layout.showName = false;\n                        this.layout.showID = false;\n                }\n            }\n            else console.error(\"TypeError: viewMode field is not a number\")\n        }\n\n        this.updateGradient();\n    }\n\n    /**\n     * Add a color to the end of the gradient\n     */\n    addGradientColor(): void {\n        this.gradient.addColor();\n        this.updateGradient();\n    }\n\n    /**\n     * Remove color at the given index\n     * @param index index to remove color at\n     */\n    removeGradientColor(index: number): void {\n        this.gradient.removeColor(index)\n        this.updateGradient();\n    }\n\n    /**\n     * Update this vm's gradient\n     */\n    updateGradient(): void {\n        console.log(\"updating gradient\")\n        this.gradient.updateGradient();\n        let self = this;\n        this.techniqueVMs.forEach(function(tvm, key) {\n            tvm.scoreColor = self.gradient.getColor(tvm.score);\n        });\n        this.updateLegendColorPresets();\n    }\n\n    legendItems = [\n\n    ];\n\n    addLegendItem(): void {\n        var newObj = {\n            label: \"NewItem\",\n            color: '#00ffff'\n        }\n        this.legendItems.push(newObj);\n    }\n\n    deleteLegendItem(index: number): void {\n        this.legendItems.splice(index,1);\n    }\n\n    clearLegend(): void {\n        this.legendItems = [];\n    }\n\n    updateLegendColorPresets(): void {\n        this.legendColorPresets = [];\n        for(var i = 0; i < this.backgroundPresets.length; i++){\n            this.legendColorPresets.push(this.backgroundPresets[i]);\n        }\n        for(var i = 0; i < this.gradient.colors.length; i++){\n            this.legendColorPresets.push(this.gradient.colors[i].color);\n        }\n    }\n\n    /**\n     * return an acronym version of the given string\n     * @param  words the string of words to get the acrnoym of\n     * @return       the acronym string\n     */\n    acronym(words: string): string {\n        let skipWords = [\"on\",\"and\", \"the\", \"with\", \"a\", \"an\", \"of\", \"in\", \"for\", \"from\"]\n\n        let result = \"\";\n        let wordSplit = words.split(\" \");\n        if (wordSplit.length > 1) {\n            let wordIndex = 0;\n            // console.log(wordSplit);\n            while (result.length < 4 && wordIndex < wordSplit.length) {\n                if (skipWords.includes(wordSplit[wordIndex].toLowerCase())) {\n                    wordIndex++;\n                    continue;\n                }\n\n                //find first legal char of word\n                for (let charIndex = 0; charIndex < wordSplit[wordIndex].length; charIndex++) {\n                    let code = wordSplit[wordIndex].charCodeAt(charIndex);\n                    if (code < 48 || (code > 57 && code < 65) || (code > 90 && code < 97) || code > 122) { //illegal character\n                        continue;\n                    } else {\n                        result += wordSplit[wordIndex].charAt(charIndex).toUpperCase()\n                        break;\n                    }\n                }\n\n                wordIndex++;\n            }\n\n            return result;\n        } else {\n            return wordSplit[0].charAt(0).toUpperCase();\n        }\n    }\n}\n\n// the viewmodel for a specific technique\nexport class TechniqueVM {\n    techniqueID: string;\n    technique_tactic_union_id: string;\n    tactic: string;\n\n    score: string = \"\";\n    scoreColor: any; //color for score gradient\n\n    color: string = \"\"; //manually assigned color-class name\n    enabled: boolean = true;\n    comment: string = \"\"\n    metadata: Metadata[] = [];\n\n    showSubtechniques = false;\n    aggregateScore: any; // number rather than string as this is not based on an input from user\n    aggregateScoreColor: any;\n\n    //print this object to the console\n    print(): void {\n        console.log(this.serialize())\n        console.log(this)\n    }\n\n    /**\n     * Has this TechniqueVM been modified from its initialized state?\n     * @return true if it has been modified, false otherwise\n     */\n    modified(): boolean {\n        return (this.score != \"\" || this.color != \"\" || !this.enabled || this.comment != \"\" || this.showSubtechniques);\n    }\n\n    /**\n     * Check if this TechniqueVM has been annotated\n     * @return true if it has annotations, false otherwise\n     */\n    annotated(): boolean {\n        return (this.score != \"\" || this.color != \"\" || !this.enabled || this.comment != \"\");\n    }\n\n    /**\n     * Convert to string representation\n     * @return string representation\n     */\n    serialize(): string {\n        let rep: {[k: string]: any } = {};\n        rep.techniqueID = this.techniqueID;\n        rep.tactic = this.tactic;\n        if (this.score !== \"\" && !(isNaN(Number(this.score)))) rep.score = Number(this.score);\n        rep.color = this.color;\n        rep.comment = this.comment;\n        rep.enabled = this.enabled;\n        rep.metadata = this.metadata.filter((m)=>m.valid()).map((m) => m.serialize());\n        rep.showSubtechniques = this.showSubtechniques;\n        //rep.technique_tactic_union_id = this.technique_tactic_union_id;\n        //console.log(rep);\n        return JSON.stringify(rep, null, \"\\t\")\n    }\n\n    /**\n     * Restore this technique from serialized technique\n     * @param rep serialized technique string\n     */\n    deSerialize(rep: string, techniqueID: string, tactic: string): void {\n        let obj = JSON.parse(rep);\n        if (techniqueID !== undefined) this.techniqueID = techniqueID;\n        else console.error(\"ERROR: TechniqueID field not present in technique\")\n        // if (\"technique_tactic_union_id\" in obj) this.technique_tactic_union_id = obj.technique_tactic_union_id;\n        // else console.error(\"ERROR: technique_tactic_union_id field not present in technique\")\n        if (\"tactic\" !== undefined) this.tactic = tactic;\n        else console.error(\"ERROR: tactic field not present in technique\")\n        if (\"comment\" in obj) {\n            if (typeof(obj.comment) === \"string\") this.comment = obj.comment;\n            else console.error(\"TypeError: technique comment field is not a number:\", obj.comment, \"(\",typeof(obj.comment),\")\")\n        }\n        if (\"color\" in obj && obj.color !== \"\") {\n            if (typeof(obj.color) === \"string\" && tinycolor(obj.color).isValid()) this.color = obj.color;\n            else console.error(\"TypeError: technique color field is not a color-string:\", obj.color, \"(\", typeof(obj.color),\")\")\n        }\n        if (\"score\" in obj) {\n            if (typeof(obj.score) === \"number\") this.score = String(obj.score);\n            else console.error(\"TypeError: technique score field is not a number:\", obj.score, \"(\", typeof(obj.score), \")\")\n        }\n        if (\"enabled\" in obj) {\n            if (typeof(obj.enabled) === \"boolean\") this.enabled = obj.enabled;\n            else console.error(\"TypeError: technique enabled field is not a boolean:\", obj.enabled, \"(\", typeof(obj.enabled), \")\");\n        }\n        if (\"showSubtechniques\" in obj) {\n            if (typeof(obj.showSubtechniques) === \"boolean\") this.showSubtechniques = obj.showSubtechniques;\n            else console.error(\"TypeError: technique showSubtechnique field is not a boolean:\", obj.showSubtechniques, \"(\", typeof(obj.showSubtechniques), \")\");\n        }\n        if (this.tactic !== undefined && this.techniqueID !== undefined) {\n            this.technique_tactic_union_id = this.techniqueID + \"^\" + this.tactic;\n        } else {\n            console.log(\"ERROR: Tactic and TechniqueID field needed.\")\n        }\n\n        if (\"metadata\" in obj) {\n            for (let metadataObj of obj.metadata) {\n                let m = new Metadata();\n                m.deSerialize(metadataObj);\n                if (m.valid()) this.metadata.push(m)\n            }\n        }\n\n    }\n\n    constructor(technique_tactic_union_id: string) {\n        this.technique_tactic_union_id = technique_tactic_union_id;\n        var idSplit = technique_tactic_union_id.split(\"^\");\n        this.techniqueID = idSplit[0];\n        this.tactic = idSplit[1];\n    }\n}\n\n// the data for a specific filter\nexport class Filter {\n    private readonly domain: string;\n    platforms: {\n        options: string[],\n        selection: string[]\n    }\n    constructor() {\n        this.platforms = {\n            selection: [],\n            options: []\n        }\n    }\n\n    /**\n     * Initialize the platform options according to the data in the domain\n     * @param {Domain} domain the domain to parse for platform options\n     */\n    public initPlatformOptions(domain: Domain): void {\n        this.platforms.options = JSON.parse(JSON.stringify(domain.platforms));\n        if (!this.platforms.selection.length) { // prevent overwriting current selection\n            this.platforms.selection = JSON.parse(JSON.stringify(domain.platforms));\n        }\n    }\n\n    /**\n     * toggle the given value in the given filter\n     * @param {*} filterName the name of the filter\n     * @param {*} value the value to toggle\n     */\n    toggleInFilter(filterName: string, value: string): void {\n        if (!this[filterName].options.includes(value)) { console.log(\"not a valid option to toggle\", value, this[filterName]); return }\n        if (this[filterName].selection.includes(value)) {\n            let index = this[filterName].selection.indexOf(value)\n            this[filterName].selection.splice(index, 1);\n        } else {\n            this[filterName].selection.push(value);\n        }\n    }\n\n    /**\n     * determine if the given value is active in the filter\n     * @param {*} filterName the name of the filter\n     * @param {*} value the value to determine\n     * @returns {boolean} true if value is currently enabled in the filter\n     */\n    inFilter(filterName, value): boolean {\n        return this[filterName].selection.includes(value)\n    }\n\n    /**\n     * Return the string representation of this filter\n     * @return stringified filter\n     */\n    serialize(): string {\n        return JSON.stringify({\"platforms\": this.platforms.selection})\n    }\n\n    /**\n     * Replace the properties of this object with those of the given serialized filter\n     * @param rep filter object\n     */\n    deSerialize(rep: any): void {\n        // console.log(rep)\n        let isStringArray = function(check): boolean {\n            for (let i = 0; i < check.length; i++) {\n                if (typeof(check[i]) !== \"string\") {\n                    console.error(\"TypeError:\", check[i], \"(\",typeof(check[i]),\")\", \"is not a string\")\n                    return false;\n                }\n\n            }\n            return true;\n        }\n        // let obj = JSON.parse(rep);\n        if (rep.platforms) {\n            if (isStringArray(rep.platforms)) {\n                let backwards_compatibility_mappings = { //backwards compatibility with older layers\n                    \"android\": \"Android\",\n                    \"ios\": \"iOS\",\n\n                    \"windows\": \"Windows\",\n                    \"linux\": \"Linux\",\n                    \"mac\": \"macOS\",\n\n                    \"AWS\": \"IaaS\",\n                    \"GCP\": \"IaaS\",\n                    \"Azure\": \"IaaS\"\n                }\n                const selection = new Set<string>();\n                rep.platforms.forEach(function (platform) {\n                    if (platform in backwards_compatibility_mappings) selection.add(backwards_compatibility_mappings[platform]);\n                    else selection.add(platform);\n                });\n                this.platforms.selection = Array.from(selection);\n            } else console.error(\"TypeError: filter platforms field is not a string[]\");\n        }\n    }\n}\n\n// { name, value } with serialization\nexport class Metadata {\n    public name: string;\n    public value: string;\n    public divider: boolean;\n    constructor() {};\n    serialize(): object { return this.name && this.value ? {name: this.name, value: this.value} : {divider: this.divider} }\n    deSerialize(rep: any) {\n        if (rep.name) { // name & value object\n            if (typeof(rep.name) === \"string\") this.name = rep.name;\n            else console.error(\"TypeError: Metadata field 'name' is not a string\");\n\n            if (rep.value) {\n                if (typeof(rep.value) === \"string\") this.value = rep.value;\n                else console.error(\"TypeError: Metadata field 'value' is not a string\")\n            }\n            else console.error(\"Error: Metadata required field 'value' not present\");\n        }\n        else if (\"divider\" in rep) { // divider object\n            if (typeof(rep.divider) === \"boolean\") this.divider = rep.divider;\n            else  console.error(\"TypeError: Metadata field 'divider' is not a boolean\");\n        }\n        else console.error(\"Error: Metadata required field 'name' or 'divider' not present\");\n    }\n    valid(): boolean { return (this.name && this.name.length > 0 && this.value && this.value.length > 0) || (this.divider !== undefined) }\n}\n\nexport class LayoutOptions {\n    // current layout selection\n    public readonly layoutOptions: string[] = [\"side\", \"flat\", \"mini\"];\n    private _layout = this.layoutOptions[0]; //current selection\n    public set layout(newLayout) {\n        if (!this.layoutOptions.includes(newLayout)) {\n            console.warn(\"invalid matrix layout\", newLayout);\n            return;\n        }\n        let oldLayout = this._layout;\n        this._layout = newLayout;\n        if (this._layout == \"mini\") { //mini-table cannot show ID or name\n            this.showID = false;\n            this.showName = false;\n        }\n        if (oldLayout == \"mini\" && newLayout != \"mini\") {\n            this.showName = true; //restore default show value for name\n        }\n    }\n    public get layout(): string { return this._layout; }\n\n    public readonly aggregateFunctionOptions: string[] = [\"average\", \"min\", \"max\", \"sum\"];\n    private _aggregateFunction = this.aggregateFunctionOptions[0];\n    public set aggregateFunction(newAggregateFunction) {\n        if (!this.aggregateFunctionOptions.includes(newAggregateFunction)) {\n            console.warn(\"invalid aggregate fx option\", newAggregateFunction);\n            return;\n        }\n        this._aggregateFunction = newAggregateFunction;\n    }\n\n    public get aggregateFunction(): string { return this._aggregateFunction; }\n\n    //show technique/tactic IDs in the view?\n    public _showID: boolean = false;\n    public set showID(newval: boolean) {\n        this._showID = newval;\n        if (newval == true && this._layout == \"mini\") this._layout = \"side\";\n    }\n    public get showID(): boolean { return this._showID; }\n\n    //show technique/tactic names in the view?\n    public _showName: boolean = true;\n    public set showName(newval: boolean) {\n        this._showName = newval;\n        if (newval == true && this._layout == \"mini\") this._layout = \"side\";\n    }\n    public get showName(): boolean { return this._showName; }\n\n    public _showAggregateScores: boolean = false;\n    public set showAggregateScores(newval: boolean) { this._showAggregateScores = newval; }\n    public get showAggregateScores(): boolean { return this._showAggregateScores; }\n\n    public _countUnscored: boolean = false;\n    public set countUnscored(newval: boolean) { this._countUnscored = newval; }\n    public get countUnscored(): boolean { return (this.aggregateFunction === \"average\") ? this._countUnscored : false; }\n\n    public serialize(): object {\n        return {\n            \"layout\": this.layout,\n            \"aggregateFunction\": this.aggregateFunction,\n            \"showID\": this.showID,\n            \"showName\": this.showName,\n            \"showAggregateScores\": this.showAggregateScores,\n            \"countUnscored\": this.countUnscored\n        };\n    }\n\n    public deserialize(rep: any) {\n        if (rep.showID) {\n            if (typeof (rep.showID) === \"boolean\") this.showID = rep.showID;\n            else console.error(\"TypeError: layout field 'showID' is not a boolean:\", rep.showID, \"(\", typeof (rep.showID), \")\");\n        }\n      if (rep.showName) {\n          if (typeof (rep.showName) === \"boolean\") this.showName = rep.showName;\n          else console.error(\"TypeError: layout field 'showName' is not a boolean:\", rep.showName, \"(\", typeof (rep.showName), \")\");\n      }\n      //make sure this one goes last so that it can override name and ID if layout == 'mini'\n      if (rep.layout) {\n          if (typeof (rep.layout) === \"string\") this.layout = rep.layout;\n          else console.error(\"TypeError: layout field 'layout' is not a string:\", rep.layout, \"(\", typeof (rep.layout), \")\");\n      }\n      if (rep.aggregateFunction) {\n          if (typeof (rep.aggregateFunction) === \"string\") this.aggregateFunction = rep.aggregateFunction;\n          else console.error(\"TypeError: layout field 'aggregateFunction' is not a boolean:\", rep.aggregateFunction, \"(\", typeof (rep.aggregateFunction), \")\");\n      }\n      if (rep.showAggregateScores) {\n          if (typeof (rep.showAggregateScores) === \"boolean\") this.showAggregateScores = rep.showAggregateScores;\n          else console.error(\"TypeError: layout field 'showAggregateScores' is not a boolean:\", rep.showAggregateScores, \"(\", typeof (rep.showAggregateScores), \")\");\n      }\n      if (rep.countUnscored) {\n          if (typeof (rep.countUnscored) === \"boolean\") this.countUnscored = rep.countUnscored;\n          else console.error(\"TypeError: layout field 'countUnscored' is not a boolean:\", rep.countUnscored, \"(\", typeof (rep.countUnscored), \")\");\n      }\n  }\n}\n\n\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Technique, Tactic, Matrix, DataService } from '../../data.service';\nimport { ViewModel } from '../../viewmodels.service';\nimport {ConfigService} from '../../config.service';\n\ndeclare var tinycolor: any; //use tinycolor2\n\n@Component({\n    selector: 'technique-cell',\n    templateUrl: './technique-cell.component.html',\n    styleUrls: ['./technique-cell.component.scss']\n})\nexport class TechniqueCellComponent implements OnInit {\n    @Input() tactic: Tactic;\n    @Input() technique: Technique;\n    @Input() viewModel: ViewModel;\n    @Input() matrix: Matrix;\n    @Output() highlight = new EventEmitter<any>(); // emit with the highlighted technique, or null to unhighlight\n    @Output() unhighlight = new EventEmitter<any>();\n    @Output() leftclick = new EventEmitter<any>(); // emit with the selected technique and the modifier keys\n    public showContextmenu: boolean = false;\n\n    public get showTooltip(): boolean {\n        if (this.showContextmenu) return false;\n        if (this.viewModel.highlightedTechniques.size === 0) return false;\n\n        return (this.viewModel.highlightedTechniques.has(this.technique.id) && this.viewModel.highlightedTactic && this.viewModel.highlightedTactic.id == this.tactic.id);\n    }\n\n    public get isHighlighted(): boolean {\n        if (this.viewModel.selectTechniquesAcrossTactics) {\n            if (this.viewModel.selectSubtechniquesWithParent) {\n                return this.technique.isSubtechnique && this.viewModel.highlightedTechniques.has(this.technique.parent.id);\n            }\n        }\n        else if (this.viewModel.highlightedTactic && this.viewModel.highlightedTactic.id == this.tactic.id) {\n            if (this.viewModel.selectSubtechniquesWithParent) {\n                return this.technique.isSubtechnique && this.viewModel.highlightedTechniques.has(this.technique.parent.id);\n            }\n        }\n        if (this.viewModel.highlightedTechniques.has(this.technique.id)) { // for highlighting techniques from the techniques search component, where highlightedTactic is null\n            return true;\n        }\n\n        return this.showContextmenu;\n    }\n\n    constructor(public configService: ConfigService, public dataService: DataService) { }\n\n    ngOnInit() {\n    }\n\n    // count number of annotated sub-techniques on this technique\n    public annotatedSubtechniques() {\n        let annotatedSubs: Technique[] = []\n        for (let s of this.technique.subtechniques) {\n            let subVM = this.viewModel.getTechniqueVM(s, this.tactic);\n            if (subVM.annotated()) annotatedSubs.push(s);\n        }\n        return this.applyControls(annotatedSubs, this.tactic).length;\n    }\n\n    // sort and filter techniques\n    public applyControls(techniques: Technique[], tactic: Tactic): Technique[] {\n        return this.viewModel.applyControls(techniques, tactic, this.matrix)\n    }\n\n    // events to pass to parent component\n    public onMouseEnter() {\n        this.highlight.emit();\n    }\n    public onMouseLeave() {\n        this.unhighlight.emit();\n    }\n    public onLeftClick(event) {\n        if (this.configService.getFeature(\"selecting_techniques\")) this.leftclick.emit({\n                \"technique\": this.technique,\n                // modifier keys\n                \"shift\": event.shiftKey,\n                \"ctrl\": event.ctrlKey,\n                \"meta\": event.metaKey,\n                // position of event on page\n                \"x\": event.pageX,\n                \"y\": event.pageY\n            });\n        else this.onRightClick(event);\n    }\n    public onRightClick(event) {\n       this.showContextmenu = true;\n    }\n\n    /**\n     * Return css classes for a technique\n     * @param  {technique} technique the technique to get the class of\n     * @param  {boolean}   mini is it the minitable?\n     * @return {string}               the classes the technique should currently have\n     */\n    public getClass(): string {\n        let theclass = 'link noselect cell'\n        if (this.viewModel.isTechniqueSelected(this.technique, this.tactic))\n            theclass += \" editing\"\n        if (this.isHighlighted) { //open context menu always keeps highlight even if the mouse has moved elsewhere\n            theclass += \" highlight\";\n        }\n\n        // classes added by layout config\n        if (this.viewModel.layout.showID)\n            theclass += \" showID\"\n        if (this.viewModel.layout.showName)\n            theclass += \" showName\"\n        theclass += \" \" + this.viewModel.layout.layout;\n\n        // classes according to annotations\n        if (this.viewModel.getTechniqueVM(this.technique, this.tactic).comment.length > 0 || this.hasNotes())\n            theclass += \" commented\"\n        if (this.getTechniqueBackground())\n            theclass += \" colored\"\n        if (!this.viewModel.getTechniqueVM(this.technique, this.tactic).enabled)\n            theclass += \" disabled\"\n\n        // classes by annotated sub-techniques\n        if (!this.annotatedSubtechniques())\n            theclass += \" unannotated\"\n\n        return theclass\n    }\n\n    /**\n     * get the technique background style for ngstyle\n     * @param  technique technique\n     * @return           background object\n     */\n    public getTechniqueBackground(): any {\n        let tvm = this.viewModel.getTechniqueVM(this.technique, this.tactic)\n        // don't display if disabled or highlighted\n        if (!tvm.enabled || this.isHighlighted) return null\n        if (tvm.color) return {\"background\": tvm.color}\n        if (this.viewModel.layout.showAggregateScores && !isNaN(Number(tvm.aggregateScore))) return {\"background\": tvm.aggregateScoreColor}\n        if (tvm.score) return {\"background\": tvm.scoreColor}\n        // return tvm.enabled && tvm.score && !tvm.color && !(this.viewModel.highlightedTechnique && this.viewModel.highlightedTechnique.technique_id == technique.technique_id)\n    }\n\n    /**\n     * Get most readable text color for the given technique\n     * @param  technique     the technique to get the text color for\n     * @param  antihighlight boolean, true if the column is not selected.\n     * @return               black, white, or gray, depending on technique and column state\n     */\n    public getTechniqueTextColor() {\n        let tvm = this.viewModel.getTechniqueVM(this.technique, this.tactic)\n        if (!tvm.enabled) return \"#aaaaaa\";\n        // don't display if disabled or highlighted\n        // if (this.viewModel.highlightedTechnique && this.viewModel.highlightedTechnique.technique_tactic_union_id == this.technique.technique_tactic_union_id) return \"black\"\n        if (tvm.color) return tinycolor.mostReadable(tvm.color, [\"white\", \"black\"]);\n        if (this.viewModel.layout.showAggregateScores && tvm.aggregateScoreColor) return tinycolor.mostReadable(tvm.aggregateScoreColor, [\"white\", \"black\"]);\n        if (tvm.score && !isNaN(Number(tvm.score))) return tinycolor.mostReadable(tvm.scoreColor, [\"white\", \"black\"]);\n        else return \"black\"\n    }\n\n    /**\n     * Check if technique has notes\n     * @return      true if technique has notes, false otherwise\n     */\n    public hasNotes() {\n        let domain = this.dataService.getDomain(this.viewModel.domainID);\n        let notes = domain.notes.filter(note => {\n            return note.object_refs.includes(this.technique.id);\n        });\n        return notes.length > 0;\n    }\n\n}\n\nexport class TechniqueEvent {\n    public readonly event: Event;\n    public readonly technique: Technique;\n    constructor(event, technique) {\n        this.technique = technique;\n        this.event = event;\n    }\n}\n","<div class=\"technique-cell\" \n     [ngStyle]=\"getTechniqueBackground()\" \n     [ngClass]=\"getClass()\">\n    <div (click)=\"onLeftClick($event)\" \n         (contextmenu)=\"onRightClick($event)\"\n         (mouseenter)=\"onMouseEnter()\"\n         (mouseleave)=\"onMouseLeave()\">\n        <span [style.border-color]=\"configService.comment_color\"\n              [style.color]=\"getTechniqueTextColor()\">\n            <ng-container *ngIf=\"viewModel.layout.showID\">{{technique.attackID}}</ng-container><div class=\"id-name-break\" *ngIf=\"viewModel.layout.showID && viewModel.layout.showName\"></div><ng-container *ngIf=\"viewModel.layout.showName\">{{technique.name}}</ng-container>\n        </span>\n        <ng-container *ngIf=\"technique.subtechniques.length > 0\">\n            <sub *ngIf=\"viewModel.layout.showID || viewModel.layout.showName\" class=\"sub\">&nbsp;({{annotatedSubtechniques()}}/{{applyControls(technique.subtechniques, tactic).length}})</sub></ng-container>\n    </div>\n    <app-tooltip *ngIf=\"showTooltip\"  [technique]=\"technique\" [tactic]=\"tactic\" [viewModel]=\"viewModel\"></app-tooltip>\n    <app-contextmenu *ngIf=\"showContextmenu\" [technique]=\"technique\" [tactic]=\"tactic\" [viewModel]=\"viewModel\" (close)=\"showContextmenu = false; onMouseLeave()\"></app-contextmenu>\n</div>\n","import { Component, OnInit, Input, ElementRef } from '@angular/core';\nimport { Technique, Tactic, DataService, Note } from '../../../data.service';\nimport { ViewModel, TechniqueVM } from '../../../viewmodels.service';\nimport { CellPopover } from '../cell-popover';\n\n@Component({\n  selector: 'app-tooltip',\n  templateUrl: './tooltip.component.html',\n  styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipComponent extends CellPopover implements OnInit {\n    @Input() technique: Technique;\n    @Input() tactic: Tactic;\n    @Input() viewModel: ViewModel;\n    public placement: string;\n    public notes: Note[];\n\n    public get techniqueVM(): TechniqueVM {\n        return this.viewModel.getTechniqueVM(this.technique, this.tactic);\n    }\n\n    constructor(private element: ElementRef, private dataService: DataService) {\n        super(element);\n    }\n\n    ngOnInit() {\n        this.placement = this.getPosition();\n        let domain = this.dataService.getDomain(this.viewModel.domainID);\n        this.notes = domain.notes.filter(note => {\n            return note.object_refs.includes(this.technique.id);\n        });\n    }\n}\n","<div [ngClass]=\"'tooltip ' + placement\">\n    <table>\n        <tr>\n            <td colspan=2 class=\"technique-name\">\n                {{technique.name}} ({{technique.attackID}})\n            </td>\n        </tr>\n        <tr *ngIf=\"!techniqueVM.enabled\">\n            <td colspan=2>Disabled</td>\n        </tr>\n        <tr *ngIf=\"techniqueVM.score\">\n            <td>Score:</td>\n            <td>{{techniqueVM.score}}\n            </td>\n        </tr>\n        <tr *ngIf=\"technique.subtechniques.length > 0 && viewModel.layout.showAggregateScores && techniqueVM.aggregateScore.length > 0\">\n            <td>Aggregate Score ({{viewModel.layout.aggregateFunction}}):</td>\n            <td>{{techniqueVM.aggregateScore}}</td>\n        </tr>\n        <tr *ngIf=\"techniqueVM.comment\">\n            <td>Comment:</td>\n            <td>{{techniqueVM.comment}}</td>\n        </tr>\n        <tr *ngFor=\"let note of notes\">\n            <td *ngIf=\"note.abstract\" class=\"wrap\">{{note.abstract}}:</td>\n            <td class=\"wrap\" [attr.colspan]=\"note.abstract ? '1' : '2'\">{{note.content}}</td>\n        </tr>\n        <tr *ngFor=\"let metadata of techniqueVM.metadata\">\n            <td *ngIf=\"metadata.divider\" class=\"divider\" colspan=2><hr></td>\n            <td *ngIf=\"!metadata.divider\">{{metadata.name}}:</td>\n            <td *ngIf=\"!metadata.divider\">{{metadata.value}}</td>\n        </tr>\n    </table>\n</div>\n","import { Injectable } from '@angular/core';\nimport { DataService, Technique, Tactic } from './data.service'; //import the DataService component so we can use it\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ConfigService {\n    public comment_color = \"yellow\";\n    public banner: string;\n    private features = new Map<string, boolean>();\n    private featureGroups = new Map<string, string[]>();\n    private featureStructure: object[];\n\n    public contextMenuItems: ContextMenuItem[] = [];\n    constructor(private dataService: DataService) {\n        console.log(\"initializing config service\");\n        let self = this;\n        let subscription = dataService.getConfig().subscribe({\n            next: function(config: any) {\n                //parse feature preferences from config json\n                config[\"features\"].forEach(function(featureObject: any) {\n                    self.setFeature_object(featureObject);\n                })\n                //override json preferences with preferences from URL fragment\n                self.getAllFragments().forEach(function(value: string, key: string) {\n                    let valueBool = (value == 'true');\n                    if (self.isFeature(key) || self.isFeatureGroup(key)) {\n                        // console.log(\"setting feature\", key, valueBool)\n                        self.setFeature(key, valueBool);\n                    }\n                    // else {\n                    //     console.log(key, \"is not a feature\")\n                    // }\n                })\n                dataService.subtechniquesEnabled = self.getFeature(\"subtechniques\");\n                self.featureStructure = config[\"features\"];\n                self.comment_color = config[\"comment_color\"];\n                self.banner = config[\"banner\"];\n                for (let obj of config[\"custom_context_menu_items\"]) {\n                    self.contextMenuItems.push(new ContextMenuItem(obj.label, obj.url, obj.subtechnique_url))\n                }\n            }, \n            complete: () => { if (subscription) subscription.unsubscribe(); } //prevent memory leaks \n        });\n    }\n\n    public getFeatureList(): object[] {\n        if (!this.featureStructure) return []\n        return this.featureStructure;\n    }\n\n    public getFeature(featureName: string): boolean {\n        return this.features.get(featureName);\n    }\n\n    /**\n     * Return true if any/all features in the group are enabled\n     * @param  featureGroup feature group name\n     * @param  type         'any' or 'all' for logical or/and\n     * @return              true iffany/all are enabled, false otherwise\n     */\n    public getFeatureGroup(featureGroup: string, type?: string): boolean {\n        if (!this.featureGroups.has(featureGroup)) return true;\n\n        let subFeatures = this.featureGroups.get(featureGroup)\n        let count = this.getFeatureGroupCount(featureGroup);\n        return type == \"any\" ? count > 0 : count === subFeatures.length;\n    }\n\n    /**\n     * Return the number of enabled features in the group\n     * @param  featureGroup feature group name\n     * @return              the number of enabled features in the group, or -1 if\n     *                      the group does not exist\n     */\n    public getFeatureGroupCount(featureGroup: string): number {\n        if (!this.featureGroups.has(featureGroup)) return -1;\n        let count = 0\n        let subFeatures = this.featureGroups.get(featureGroup)\n        for (let i = 0; i < subFeatures.length; i++) {\n            if (this.getFeature(subFeatures[i])) count += 1\n        }\n        return count;\n    }\n\n    /**\n     * Recursively search an object for boolean properties, set these as features\n     * Take a key:value pair of an object. If the value is a boolean, set the\n     * feature[key] to value. Otherwise recursively walk value to find boolean\n     * options.\n     *\n     * Additionally, if the given feature grouping (where value is an obj)\n     * has been previously defined, boolean properties assigned to the grouping\n     * name will apply to all subfeatures of the grouping.\n     *\n     * @param  featureName string, the fieldname the value was found in\n     * @param  value       boolean:object the value of the field. If a boolean,\n     *                     sets feature[featureName] = value, otherwise walks recursively\n     */\n    public setFeature(featureName: string, value: any): string[] {\n        let self = this\n        // console.log(featureName, value);\n\n        if (typeof(value) == \"boolean\") { //base case\n            if (this.featureGroups.has(featureName)) { //feature group, assign to all subfeatures\n                this.featureGroups.get(featureName).forEach(function(subFeatureName: string) {\n                    self.setFeature(subFeatureName, value);\n                })\n            } else { //single feature\n                this.features.set(featureName, value);\n            }\n            return [featureName];\n        }\n\n        if (typeof(value) == \"object\") { //keep walking\n            let subfeatures = [];\n            Object.keys(value).forEach(function(fieldname: string) {\n                subfeatures = Array.prototype.concat(subfeatures, self.setFeature(fieldname, value[fieldname]));\n            })\n            this.featureGroups.set(featureName, subfeatures);\n            return subfeatures;\n        }\n    }\n\n    /**\n     * given a set of feature objects, set the enabledness of that object and all subobjects\n     *\n     * @param  featureObject {name: string, enabled: boolean, subfeatures?: featureObject[] }\n     *                       Of enabled is false and it has subfeatures, they will all be forced to be false too\n     * @param  override      Set all subfeatures, and their subfeatures, values to\n     *                       this value\n     */\n    public setFeature_object(featureObject: any, override=null):string[] {\n        let self = this\n\n        // base case\n        if (!featureObject.hasOwnProperty(\"subfeatures\")) {\n\n            let enabled = override !== null? override : featureObject.enabled\n            this.features.set(featureObject.name, enabled)\n            return [featureObject.name]\n        } else { //has subfeatures\n            override = override ? override : !featureObject.enabled ? false : null;\n            let subfeatures = [];\n            featureObject.subfeatures.forEach(function(subfeature) {\n                subfeatures = Array.prototype.concat(subfeatures, self.setFeature_object(subfeature, override))\n            })\n            this.featureGroups.set(featureObject.name, subfeatures)\n            return subfeatures;\n        }\n\n\n    }\n\n    /**\n     * Return if the given string corresponds to a defined feature\n     * @param  featureName the name of the feature\n     * @return             true if the feature exists, false otherwise\n     */\n    public isFeature(featureName: string): boolean {\n        return this.features.has(featureName)\n    }\n    /**\n     * return if the given string corresponds to a defined feature group\n     * @param  featureGroupName the name of the feature group\n     * @return                  true if it is a feature group, false otherwise\n     */\n    public isFeatureGroup(featureGroupName: string): boolean {\n        return this.featureGroups.has(featureGroupName);\n    }\n\n    public getFeatureGroups(): string[] {\n        let keys = [];\n        this.featureGroups.forEach(function(value, key) { keys.push(key) })\n        return keys;\n    }\n\n    public getFeatures(): string[] {\n        let keys = [];\n        this.features.forEach(function(value, key) { keys.push(key) })\n        return keys;\n    }\n\n    /**\n     * Get all url fragments\n     * @param  url optional, url to parse instead of window location href\n     * @return     all fragments as key-value pairs\n     */\n    getAllFragments(url?: string): Map<string, string> {\n        if (!url) url = window.location.href;\n        let fragments = new Map<string, string>();\n        let regex = /[#&](\\w+)=(\\w+)/g\n\n        // let results = url.match(regex)\n        var match;\n        while (match = regex.exec(url)) {\n            fragments.set(match[1], match[2])\n        }\n\n        return fragments;\n    }\n}\n\nexport class ContextMenuItem {\n    public readonly label: string;\n    private readonly url: string;\n    private readonly subtechnique_url: string;\n\n    constructor(label, url, subtechnique_url=null) {\n        this.label = label;\n        this.url = url;\n        this.subtechnique_url = subtechnique_url;\n    }\n\n    public getReplacedURL(technique: Technique, tactic: Tactic): string {\n        if (this.subtechnique_url && technique.isSubtechnique) {\n            return this.subtechnique_url.replace(/{{parent_technique_attackID}}/g, technique.parent.attackID)\n                                        .replace(/{{parent_technique_stixID}}/g, technique.parent.id)\n                                        .replace(/{{parent_technique_name}}/g, technique.parent.name.replace(/ /g, \"-\").toLowerCase())\n\n                                        .replace(/{{subtechnique_attackID}}/g, technique.attackID)\n                                        .replace(/{{subtechnique_attackID_suffix}}/g, technique.attackID.split(\".\")[1])\n                                        .replace(/{{subtechnique_stixID}}/g, technique.id)\n                                        .replace(/{{subtechnique_name}}/g, technique.name.replace(/ /g, \"-\").toLowerCase())\n\n                                        .replace(/{{tactic_attackID}}/g, tactic.attackID)\n                                        .replace(/{{tactic_stixID}}/g, tactic.id)\n                                        .replace(/{{tactic_name}}/g, tactic.shortname);\n        } else {\n            return this.url.replace(/{{technique_attackID}}/g, technique.attackID)\n                           .replace(/{{technique_stixID}}/g, technique.id)\n                           .replace(/{{technique_name}}/g, technique.name.replace(/ /g, \"-\").toLowerCase())\n\n                           .replace(/{{tactic_attackID}}/g, tactic.attackID)\n                           .replace(/{{tactic_stixID}}/g, tactic.id)\n                           .replace(/{{tactic_name}}/g, tactic.shortname);\n        }\n    }\n}\n"," //   ___ _    ___  ___   _   _     __   ___   ___ ___   _   ___ _    ___ ___\n //  / __| |  / _ \\| _ ) /_\\ | |    \\ \\ / /_\\ | _ \\_ _| /_\\ | _ ) |  | __/ __|\n // | (_ | |_| (_) | _ \\/ _ \\| |__   \\ V / _ \\|   /| | / _ \\| _ \\ |__| _|\\__ \\\n //  \\___|____\\___/|___/_/ \\_\\____|   \\_/_/ \\_\\_|_\\___/_/ \\_\\___/____|___|___/\n //\n'use strict';\n\nexport const nav_version: string=\"4.3\"\nexport const layer_version: string=\"4.2\"\n","/**\n * @file\n * A TAXII 2.0 Javascript client library. Converted to Typescript by Isabel Tuson 24 May 2018\n *\n * @see https://oasis-open.github.io/cti-documentation/\n *\n * @author R. Wathelet, September 2017, modified by I Tuson 24 May 2018\n * @version 0.2\n */\n\n/**\n * Provide asynchronous network communications to a TAXII 2.0 server.\n *\n */\nexport class TaxiiConnect {\n    baseURL: string;\n    user: string;\n    password: string;\n    hash: string;\n    timeout: number;\n    version: string;\n    getConfig: any;\n    postConfig: any;\n    getStixConfig: any;\n\n    /**\n     * provide network communication to a Taxii 2.0 server.\n     * @param {String} url - the base url of the Taxii2 server, for example https://example.com/\n     * @param {String} user - the user name required for authentication.\n     * @param {String} password - the user password required for authentication.\n     * @param {Integer} timeout - the connection timeout in millisec\n     */\n    constructor(url, user, password, timeout) {\n        this.baseURL = TaxiiConnect.withoutLastSlash(url);\n        this.user = user;\n        this.password = password;\n        this.hash = btoa(this.user + \":\" + this.password);\n        this.timeout = timeout ? timeout : 10000; // default timeout\n\n        this.version = '2.0';\n\n        // default headers configurations\n        this.getConfig = {\n            'method': 'get',\n            'headers': new Headers({\n                'Accept': 'application/vnd.oasis.taxii+json',\n                'version': this.version,\n                'Authorization': 'Basic ' + this.hash\n            })\n        };\n\n        this.postConfig = {\n            'method': 'post',\n            'headers': new Headers({\n                'Accept': 'application/vnd.oasis.taxii+json',\n                'Content-Type': 'application/vnd.oasis.stix+json',\n                'version': this.version,\n                'Authorization': 'Basic ' + this.hash\n            })\n        };\n\n        this.getStixConfig = {\n            'method': 'get',\n            'headers': new Headers({\n                'Accept': 'application/vnd.oasis.stix+json',\n                'version': this.version,\n                'Authorization': 'Basic ' + this.hash\n            })\n        };\n\n    }\n\n    // original code from: https://github.com/jkomyno/fetch-timeout\n    timeoutPromise(promise, timeout, error) {\n        return new Promise((resolve, reject) => {\n            setTimeout(() => reject(error), timeout);\n            promise.then(resolve, reject);\n        });\n    }\n    // original code from: https://github.com/jkomyno/fetch-timeout\n    fetchTimeout(url, options, timeout, error) {\n        error = error || 'Timeout error';\n        options = options || {};\n        timeout = timeout || 10000;\n        return this.timeoutPromise(fetch(url, options), timeout, error);\n    }\n\n    /**\n     * send an async request (GET or POST) to the taxii2 server.\n     *\n     * @param {String} path - the full path to connect to.\n     * @param {Object} config - the request configuration, see getConfig and postConfig for examples\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string\n     * @returns {Promise} the server response in json.\n     */\n    async asyncFetch(path, config, filter?) { //CHANGED\n        let fullPath = (filter === undefined) ? path : path + \"?\" + TaxiiConnect.asQueryString(filter);\n        return await (await (\n            this.fetchTimeout(fullPath, config, this.timeout, 'connection timeout')\n                .then((res: Response) => res.json())\n                .catch(err => { throw new Error(\"fetch error: \" + err); } ) ));\n    }\n\n    /**\n     * send a GET async request to the taxii2 server.\n     *\n     * The server response is assigned to the cache attribute of the options object, and\n     * the options flag attribute is set to true if a server request was performed.\n     * Otherwise if the options.flag is initially true, the cached response (options.cache) is returned and\n     * no server request is performed.\n     * To force a server request used invalidate(), for example: server.invalidate()\n     *\n     * @param {String} path - the path to connect to.\n     * @param {Object} options - an option object of the form: { \"cache\": {}, \"flag\": false }\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string\n     * @param {Object} config - the request configuration\n     * @returns {Promise} the server response object\n     */\n    async fetchThis(path, options, filter?, config?) { //CHANGED\n        let conf = config === undefined ? this.getConfig : config;\n        if (!options.flag) {\n            options.cache = await (this.asyncFetch(path, conf, filter));\n            options.flag = true;\n        }\n        return options.cache;\n    }\n\n    /**\n     * return the url without the last slash.\n     * @param {String} url - the URL string to process.\n     * @returns {String} the url without the last slash.\n     */\n    static withoutLastSlash(url) {\n        return (url.substr(-1) === '/') ? url.substr(0, url.length - 1) : url;\n    }\n\n    /**\n     * return the url with a terminating slash.\n     * @param {String} url - the URL string to process.\n     * @returns {String} the url with a terminating slash.\n     */\n    static withLastSlash(url) {\n        return (url.substr(-1) === '/') ? url : url + \"/\";\n    }\n\n    /**\n     * convert a filter object into a query string.\n     * @param {Object} filter - the filter object to process.\n     * @returns {String} the query string corresponding to the filter object.\n     */\n    static asQueryString(filter) {\n        return Object.keys(filter).map(k => {\n            let value = (k === \"added_after\") ? k : \"match[\" + k + \"]\";\n            return encodeURIComponent(value) + '=' + encodeURIComponent(filter[k]);\n        }).join('&');\n    }\n}\n\n/**\n * Server encapsulates a discovery and api roots endpoints.\n */\nexport class Server {\n    path: string;\n    conn: TaxiiConnect;\n    disOptions: any;\n    apiOptions: any;\n\n    /**\n     * A TAXII Server endpoint representation.\n     * @param {String} path - the path to the server discovery endpoint, for example \"/taxii/\"\n     * @param {TaxiiConnect} conn - a TaxiiConnection instance providing network communications.\n     */\n    constructor(path, conn) {\n        this.path = TaxiiConnect.withLastSlash(path);\n        this.conn = conn;\n        // cache represents the cached results and flag determines if it needs a re-fetch\n        this.disOptions = {\"cache\": {}, \"flag\": false};\n        this.apiOptions = {\"cache\": [], \"flag\": false};\n    }\n\n    /**\n     * determine if the obj is empty, {}\n     * @param {Object} obj - the object to test\n     * @returns {Boolean} - true if empty else false\n     */\n    static isEmpty(obj) {\n        return Object.keys(obj).length === 0 && obj.constructor === Object;\n    }\n\n    /**\n     * reset the internal options flags so that the next method call of this class will\n     * send a request to the server rather than retreive the results from cache.\n     */\n    invalidate() {\n        this.disOptions.flag = false;\n        this.apiOptions.flag = false;\n    }\n\n    /**\n     * retrieve the information about a TAXII Server and the list of API Roots.\n     * @returns {Promise} the server discovery information object.\n     */\n    async discovery() {\n        return this.conn.fetchThis(this.conn.baseURL + this.path, this.disOptions);\n    }\n\n    /**\n     * retrieve the api roots information objects.\n     * Note: unreachable roots are not part of the results.\n     *\n     * API Roots are logical groupings of TAXII Channels, Collections, and related functionality.\n     * Each API Root contains a set of Endpoints that a TAXII Client contacts in order to interact with the TAXII Server.\n     * This returns the api roots information objects from the string urls.\n     * @returns {Promise} the Array of api roots information objects\n     */\n    async api_roots() {\n        return this.discovery().then(discovery => this._getApiRoots(discovery));\n    }\n\n    /**\n     * retrieve a map of key=the api root url and value=the api root object.\n     *\n     * API Roots are logical groupings of TAXII Channels, Collections, and related functionality.\n     * Each API Root contains a set of Endpoints that a TAXII Client contacts in order to interact with the TAXII Server.\n     * @returns {Promise} a Map of key=the url and value=the api root object.\n     */\n    async api_rootsMap() {\n        var apiRootMap = new Map();\n        await this.discovery().then(discovery => this._getApiRoots(discovery, apiRootMap));\n        return apiRootMap;\n    }\n\n    /**\n     * private function to retrieve the api roots\n     * @param {discovery} discovery - a discovery object\n     * @param {Map} apiRootMap - a map of key=url, value=api root object\n     * @returns {Promise} the Array of api roots information objects\n     */\n    async _getApiRoots(discovery, apiRootMap?) { //CHANGED\n        if (!this.apiOptions.flag) {\n            // clear the cache\n            this.apiOptions.cache = [];\n            // fetch all the api_roots in parallel\n            await Promise.all(discovery.api_roots.map(async url => {\n                let apiroot = await this.conn.asyncFetch(url, this.conn.getConfig);\n                // add to the map\n                if (apiRootMap !== undefined) {\n                    apiRootMap.set(url, apiroot);\n                }\n                // add to the array of results\n                this.apiOptions.cache.push(apiroot);\n            }));\n            // remove the undefined and empty elements, that is those we could not connect to.\n            this.apiOptions.cache = this.apiOptions.cache.filter(element => (element !== undefined && !Server.isEmpty(element)));\n            this.apiOptions.flag = true;\n        }\n        return this.apiOptions.cache;\n    }\n\n}\n\n/**\n * Collections resource endpoint.\n * A TAXII Collections is an interface to a logical repository of CTI objects\n * provided by a TAXII Server and is used by TAXII Clients to send information\n * to the TAXII Server or request information from the TAXII Server.\n * A TAXII Server can host multiple Collections per API Root, and Collections\n * are used to exchange information in a request–response manner.\n */\nexport class Collections {\n    api_root_path: string;\n    conn: TaxiiConnect;\n    options: any;\n    collectionsFlag: boolean;\n    // hash: string;\n\n    /**\n     * A TAXII Collections for a specific api root path.\n     * The collections resource is a simple wrapper around a list of collection resources.\n     * @param {String} api_root_path - the full path to the desired api root endpoint\n     * @param {TaxiiConnection} conn a TaxiiConnection class instance.\n     */\n    constructor(api_root_path, conn) {\n        this.api_root_path = TaxiiConnect.withLastSlash(api_root_path);\n        this.conn = conn;\n        // cache represents the cached results and flag determines if it needs a re-fetch\n        this.options = {\"cache\": {}, \"flag\": false};\n    }\n\n    /**\n     * reset the internal options flags so that the next method call of this class will\n     * send a request to the server rather than retreive the results from cache.\n     */\n    invalidate() {\n        this.options.flag = false;\n    }\n\n    /**\n     * provide information about a specific Collection hosted under this API Root.\n     *\n     * @param {Integer} index - the index of the desired collection object.\n     * @returns {Object} a specific collection object.\n     */\n    async get(index) {\n        if (Number.isInteger(index) && index >= 0) {\n            // return a specific collection info\n            if (!this.collectionsFlag) {\n                return this.collections().then(cols => {\n                    if (index < this.options.cache.collections.length) {\n                        return this.options.cache.collections[index];\n                    } else {\n                        console.log(\"----> in Collections get(index) invalid index value: \" + index);\n                    }\n                });\n            } else {\n                if (index < this.options.cache.collections.length) {\n                    return this.options.cache.collections[index];\n                } else {\n                    console.log(\"----> in Collections get(index) invalid index value: \" + index);\n                }\n            }\n        } else {\n            console.log(\"----> in Collections get(index) invalid index value: \" + index);\n        }\n    }\n\n    /**\n     * provide information about the Collections hosted under this API Root.\n     *\n     * @param {String} range - a pagination range string, for example \"0-10\"\n     * @returns {Array} an array of collection objects\n     */\n    async collections(range?) { //CHANGED\n        var theConfig = this.conn.getConfig;\n        if (range !== undefined) {\n            theConfig = {\n                'method': 'get',\n                'headers': new Headers({\n                    'Accept': 'application/vnd.oasis.taxii+json',\n                    'version': this.conn.version,\n                    'Authorization': 'Basic ' + this.conn.hash, //CHANGED\n                    'Range': 'items=' + range\n                })\n            };\n        }\n        // return a list of collection info\n        await this.conn.fetchThis(this.api_root_path + \"collections/\", this.options, \"\", theConfig);\n        return this.options.cache.collections;\n    }\n\n}\n\n/**\n * A Collection resource endpoint.\n */\nexport class Collection {\n    collectionInfo: any;\n    api_root_path: string;\n    conn: TaxiiConnect;\n    path: string;\n    colOptions: any;\n    objsOptions: any;\n    objOptions: any;\n    manOptions: any;\n\n    /**\n     * Collection resource endpoint.\n     * @param {CollectionInfoObject} collectionInfo - the collection object of this endpoint.\n     * @param {String} api_root_path - the full path to the desired api root endpoint.\n     * @param {TaxiiConnection} conn - a TaxiiConnection class instance.\n     */\n    constructor(collectionInfo, api_root_path, conn) {\n        this.collectionInfo = collectionInfo;\n        this.api_root_path = TaxiiConnect.withLastSlash(api_root_path);\n        this.conn = conn;\n        // construct the path\n        this.path = this.api_root_path + \"collections/\" + collectionInfo.id + \"/\";\n        // cache represents the cached results and flag determines if it needs a re-fetch\n        this.colOptions = {\"cache\": {}, \"flag\": false};\n        this.objsOptions = {\"cache\": {}, \"flag\": false};\n        this.objOptions = {\"cache\": {}, \"flag\": false};\n        this.manOptions = {\"cache\": {}, \"flag\": false};\n    }\n\n    /**\n     * reset the internal options flags so that the next method call of this class will\n     * send a request to the server rather than retreive the results from cache.\n     */\n    invalidate() {\n        this.colOptions.flag = false;\n        this.objsOptions.flag = false;\n        this.objOptions.flag = false;\n        this.manOptions.flag = false;\n    }\n\n    /**\n     * check that the collection allows reading, if true then return the function passed in\n     * else log an error\n     * @param {Function} func - the function to return if the collection allows reading it\n     * @returns {Function} the function if this collection allow reading else undefined\n     */\n    ifCanRead(func) {\n        if (this.collectionInfo.can_read) {\n            return func;\n        } else {\n            console.log(\"this collection does not allow reading: \\n\" + JSON.stringify(this.collectionInfo));\n        }\n    }\n\n    /**\n     * check that the collection allows writing, if true then return the function passed in else log an error\n     * @param {Function} func - the function to return if the collection allows writing it\n     * @returns {Function} the function if this collection allow writing else undefined\n     */\n    ifCanWrite(func) {\n        if (this.collectionInfo.can_write) {\n            return func;\n        } else {\n            console.log(\"this collection does not allow writing: \\n\" + JSON.stringify(this.collectionInfo));\n        }\n    }\n\n    /**\n     * retrieve this Collection object.\n     * @returns {Promise} the Collection object\n     */\n    async get() {\n        return this.ifCanRead(this.conn.fetchThis(this.path, this.colOptions));\n    }\n\n    /**\n     * retrieve a STIX-2 bundle from this Collection.\n     *\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string.\n     * For example: {\"added_after\": \"2016-02-01T00:00:01.000Z\"}\n     *              {\"type\": [\"incident\",\"ttp\",\"actor\"]}\n     * @param {String} range - a pagination range string, for example \"0-10\"\n     * @returns {Promise} the Bundle with the STIX-2 objects of this collection\n     */\n    async getObjects(filter, range) {\n        var theConfig = this.conn.getStixConfig;\n        if (range !== undefined) {\n            theConfig = {\n                'method': 'get',\n                'headers': new Headers({\n                    'Accept': 'application/vnd.oasis.stix+json',\n                    'version': this.conn.version,\n                    'Authorization': 'Basic ' + this.conn.hash, //CHANGED\n                    'Range': 'items=' + range\n                })\n            };\n        }\n        return this.ifCanRead(this.conn.fetchThis(this.path + \"objects/\", this.objsOptions, filter, theConfig));\n    }\n\n    /**\n     * retrieve a specific STIX-2 object from this collection objects bundle.\n     *\n     * @param {String} obj_id - the STIX-2 object id to retrieve\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string.\n     * For example: {\"version\": \"2016-01-01T01:01:01.000Z\"}\n     */\n    async getObject(obj_id, filter) {\n        return await (await (this.ifCanRead(this.conn.fetchThis(this.path + \"objects/\" + obj_id + \"/\", this.objOptions, filter, this.conn.getStixConfig)\n        .then(bundle => bundle.objects.find(obj => obj.id === obj_id) ))));\n    }\n\n    /**\n     * add a STIX-2 bundle object to this Collection objects.\n     * @param {Bundle} bundle - the STIX-2 bundle object to add\n     * @return {Status} a status object\n     */\n    async addObject(bundle) {\n        return this.ifCanWrite(this.conn.asyncFetch(this.path + \"objects/\", this.conn.postConfig));\n    }\n\n    /**\n     * retrieve all manifests about objects from this Collection.\n     * Manifests are metadata about the objects.\n     *\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string.\n     * @param {String} range - a pagination range string, for example \"0-10\"\n     * @return {Array} an array of manifest entries object\n     */\n    async getManifests(filter, range?) {\n        var theConfig = this.conn.getConfig;\n        if (range !== undefined) {\n            theConfig = {\n                'method': 'get',\n                'headers': new Headers({\n                    'Accept': 'application/vnd.oasis.taxii+json',\n                    'version': this.conn.version,\n                    'Authorization': 'Basic ' + this.conn.hash, //CHANGED\n                    'Range': 'items=' + range\n                })\n            };\n        }\n        this.ifCanRead(await this.conn.fetchThis(this.path + \"manifest/\", this.manOptions, filter, theConfig));\n        return this.manOptions.cache.objects;\n    }\n\n    /**\n     * retrieve the manifest about a specific object (obj_id) from this Collection.\n     * Manifests are metadata about the objects.\n     *\n     * @param {String} obj_id - the STIX-2 object id of the manifest to retrieve.\n     * @param {Object} filter - the filter object describing the filtering requested, this is added to the path as a query string.\n     * @return {Object} a manifest entry of the desired STIX-2 object.\n     */\n    async getManifest(obj_id, filter) {\n        return await (this.getManifests(filter).then(objects => objects.find(obj => obj.id === obj_id)));\n    }\n\n}\n\n/**\n * This Endpoint provides information about the status of a previous request.\n * In TAXII 2.0, the only request that can be monitored is one to add objects to a Collection.\n */\nexport class Status {\n    api_root_path: string;\n    status_id: string;\n    conn: TaxiiConnect;\n    path: string;\n\n    /**\n     * provide information about the status of a previous request.\n     * @param {String} api_root_path - the full path to the desired api root\n     * @param {String} status_id - the identifier of the status message being requested, for STIX objects, their id.\n     * @param {TaxiiConnection} conn - a TaxiiConnection class instance.\n     */\n    constructor(api_root_path, status_id, conn) {\n        this.api_root_path = TaxiiConnect.withLastSlash(api_root_path);\n        this.status_id = status_id;\n        this.conn = conn;\n        this.path = this.api_root_path + \"status/\" + status_id + \"/\";\n    }\n\n    /**\n     * retrieve the Status information about a request to add objects to a Collection.\n     * @return {Promise} the status object\n     */\n    async get() {\n        return this.conn.asyncFetch(this.path, this.conn.getConfig);\n    }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}